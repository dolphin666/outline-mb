{
  "AcceleratorRange.EightG": "Der Bewegungssensor misst Kräfte bis 8g",
  "AcceleratorRange.EightG|block": "8g",
  "AcceleratorRange.FourG": "Der Bewegungssensor misst Kräfte bis 4g",
  "AcceleratorRange.FourG|block": "4g",
  "AcceleratorRange.OneG": "Der Bewegungssensor misst Kräfte bis 1g",
  "AcceleratorRange.OneG|block": "1g",
  "AcceleratorRange.TwoG": "Der Bewegungssensor misst Kräfte bis 2g",
  "AcceleratorRange.TwoG|block": "2g",
  "AnalogPin.P11|block": "P11 (nur schreiben)",
  "AnalogPin.P12|block": "P12 (nur schreiben)",
  "AnalogPin.P13|block": "P13 (nur schreiben)",
  "AnalogPin.P14|block": "P14 (nur schreiben)",
  "AnalogPin.P15|block": "P15 (nur schreiben)",
  "AnalogPin.P16|block": "P16 (nur schreiben)",
  "AnalogPin.P19|block": "P19 (nur schreiben)",
  "AnalogPin.P20|block": "P20 (nur schreiben)",
  "AnalogPin.P5|block": "P5 (nur schreiben)",
  "AnalogPin.P6|block": "P6 (nur schreiben)",
  "AnalogPin.P7|block": "P7 (nur schreiben)",
  "AnalogPin.P8|block": "P8 (nur schreiben)",
  "AnalogPin.P9|block": "P9 (nur schreiben)",
  "Array.every": "Testet, ob alle Elemente der Liste den von der bereitgestellten Funktion implementierten Test bestehen.",
  "Array.filter": "Gib die Elemente eines Arrays aus, die die in einer Rückruffunktion angegebene Bedingung erfüllen.",
  "Array.filter|param|callbackfn": "Eine Funktion, die bis zu zwei Argumente akzeptiert. Die Filtermethode ruft für jedes Element im Array die callbackfn-Funktion einmal auf.",
  "Array.forEach": "Rufe für jedes Element einer Liste eine definierte Rückruffunktion auf.",
  "Array.get|param|index": "die Position in der Liste des Elementes, beginnend bei Null, z. B.: 0",
  "Array.indexOf": "Gib die Position des ersten Vorkommens eines Wertes in einem Array aus.",
  "Array.indexOf|block": "%list| finde Position von %value",
  "Array.indexOf|param|fromIndex": "Die Array-Position, bei der mit der Suche begonnen werden soll. Wenn fromIndex ausgelassen wird, beginnt die Suche bei Position 0.",
  "Array.indexOf|param|item": "Der in einem Array zu lokalisierende Wert.",
  "Array.insertAt|block": "%list| füge ein bei %index|Wert %value",
  "Array.insertAt|param|index": "die Position in der Liste, beginnend bei Null, bei der der Wert eingefügt werden soll, z. B.: 0",
  "Array.length|block": "Länge von %VALUE",
  "Array.map": "Ruft eine definierte Rückruffunktion bei jedem Element eines Arrays ab und gibt ein Array mit den Ergebnissen aus.",
  "Array.map|param|callbackfn": "Eine Funktion, die bis zu zwei Argumente akzeptiert. Die map-Methode ruft für jedes Element im Array die callbackfn-Funktion einmal auf.",
  "Array.pop": "Entferne das letzte Element eines Arrays und gib es aus.",
  "Array.pop|block": "rufe den letzten Wert ab und lösche ihn von %list",
  "Array.push|block": "%list| füge Wert %value| am Ende hinzu",
  "Array.reduce": "Rufe die angegebene Rückruffunktion für alle Elemente in einem Array auf. Der Rückgabewert der Rückruffunktion ist das kumulierte Ergebnis, es wird als Argument im nächsten Aufruf der Rückruffunktion bereitgestellt.",
  "Array.reduce|param|callbackfn": "Eine Funktion, die bis zu drei Argumente akzeptiert. Die Reduziermethode ruft für jedes Element im Array die callbackfn-Funktion einmal auf.",
  "Array.reduce|param|initialValue": "Anfangswert für Kumulierungsbeginn. Der erste Aufruf der callbackfn-Funktion hat diesen Wert als Argument statt eines Array-Wertes.",
  "Array.removeAt": "Entferne das Element an einer bestimmten Position.",
  "Array.removeAt|block": "%list| Entferne Wert bei %index",
  "Array.reverse": "Kehrt die Elemente in einem Array um. Das erste Array-Element wird zum letzten, das letzte Array-Element wird zum ersten.",
  "Array.reverse|block": "kehre %list um",
  "Array.set|param|index": "die Position in der Liste, beginnend bei Null, bei der der Wert gespeichert werden soll, z. B.: 0",
  "Array.shift": "Entferne das erste Element aus einem Array und gib es aus. Durch diese Methode wird die Array-Länge verändert.",
  "Array.shift|block": "rufe den ersten Wert ab und lösche ihn von %list",
  "Array.slice": "Gib einen Abschnitt eines Arrays aus.",
  "Array.slice|param|end": "Das Ende des angegebenen Abschnitts des Arrays, z. B.: 0",
  "Array.slice|param|start": "Der Anfang des angegebenen Abschnitts des Arrays, z. B.: 0",
  "Array.sort": "Sortiere die Elemente eines Arrays und gib das Array aus. Die Sortierung ist nicht zwangsläufig unveränderlich.",
  "Array.splice": "Entferne Elemente aus einem Array.",
  "Array.splice|param|deleteCount": "Die Anzahl der zu entfernenden Elemente, z. B.: 0",
  "Array.splice|param|start": "Die Position im Array, beginnend bei Null, bei der mit dem Entfernen von Elementen begonnen werden soll z. B.: 0",
  "Array.unshift": "Füge ein Element am Anfang eines Arrays hinzu und gib die neue Länge des Arrays aus.",
  "Array.unshift|block": "%list| füge %value| am Anfang hinzu",
  "Array|block": "Array",
  "ArrowNames.East|block": "Osten",
  "ArrowNames.NorthEast|block": "Nordosten",
  "ArrowNames.NorthWest|block": "Nordwesten",
  "ArrowNames.North|block": "Norden",
  "ArrowNames.SouthEast|block": "Südosten",
  "ArrowNames.SouthWest|block": "Südwesten",
  "ArrowNames.South|block": "Süden",
  "ArrowNames.West|block": "Westen",
  "BaudRate.BaudRate115200|block": "115200",
  "BaudRate.BaudRate1200|block": "1200",
  "BaudRate.BaudRate14400|block": "14400",
  "BaudRate.BaudRate19200|block": "19200",
  "BaudRate.BaudRate2400|block": "2400",
  "BaudRate.BaudRate28800|block": "28800",
  "BaudRate.BaudRate31250|block": "31250",
  "BaudRate.BaudRate38400|block": "38400",
  "BaudRate.BaudRate4800|block": "4800",
  "BaudRate.BaudRate57600|block": "57600",
  "BaudRate.BaudRate9600|block": "9600",
  "BeatFraction.Breve|block": "4",
  "BeatFraction.Double|block": "2",
  "BeatFraction.Eighth|block": "1/8",
  "BeatFraction.Half|block": "1/2",
  "BeatFraction.Quarter|block": "1/4",
  "BeatFraction.Sixteenth|block": "1/16",
  "BeatFraction.Whole|block": "1",
  "Boolean.toString": "Gibt eine Zeichenfolgendarstellung eines Elementes aus.",
  "Buffer.fill": "Fülle (ein Fragment) des Zwischenspeichers mit vorgegebenem Wert.",
  "Buffer.getNumber": "Lies eine Nummer im angegebenen Format vom Zwischenspeicher.",
  "Buffer.length": "Gibt die Länge eines Zwischenspeicherelementes aus.",
  "Buffer.rotate|param|offset": "Anzahl der zu verschiebenden Bytes; nutze negativen Wert zum Verschieben nach rechts",
  "Buffer.rotate|param|start": "starte Offset im Zwischenspeicher. Standardeinstellung ist 0.",
  "Buffer.setNumber": "Schreibe eine Zahl im angegebenen Format in den Zwischenspeicher.",
  "Buffer.shift|param|offset": "Anzahl der zu verschiebenden Bytes; nutze negativen Wert zum Verschieben nach rechts",
  "Buffer.shift|param|start": "starte Offset im Zwischenspeicher. Standardeinstellung ist 0.",
  "Buffer.slice": "Gib eine Kopie eines Fragmentes eines Zwischenspeichers aus.",
  "Buffer.write": "Schreib die Inhalte von `src` bei`dstOffset` im aktuellen Zwischenspeicher.",
  "Button.AB|block": "A+B",
  "Delimiters.Colon|block": ":",
  "Delimiters.Comma|block": ",",
  "Delimiters.Dollar|block": "$",
  "Delimiters.Fullstop|block": ".",
  "Delimiters.Hash|block": "#",
  "Delimiters.NewLine|block": "Neue Zeile",
  "Dimension.Strength|block": "Stärke",
  "Dimension.X|block": "x",
  "Dimension.Y|block": "y",
  "Dimension.Z|block": "z",
  "Direction.Left|block": "links",
  "Direction.Right|block": "rechts",
  "DisplayMode.BlackAndWhite|block": "Schwarz-Weiß",
  "DisplayMode.Greyscale|block": "Graustufen",
  "EventCreationMode": "Erstellen eines Ereignisses.",
  "EventCreationMode.CreateAndFire": "Calliope mini-Event wurde initialisiert, seine Event-Handler werden unverzüglich ausgeführt (nicht geeignet für die Nutzung bei Unterbrechungen!).",
  "EventCreationMode.CreateOnly": "Calliope mini-Event wurde initialisiert, es wird keine weitere Verarbeitung vorgenommen.",
  "Gesture.EightG": "Wird ausgeführt, wenn ein Stoß mit 8g erkannt wird",
  "Gesture.EightG|block": "8g",
  "Gesture.FreeFall": "Wird ausgeführt, wenn das Board fällt!",
  "Gesture.FreeFall|block": "freier Fall",
  "Gesture.LogoDown": "Wird ausgeführt, wenn das Logo nach unten zeigt und das Display vertikal ist.",
  "Gesture.LogoDown|block": "Logo nach unten",
  "Gesture.LogoUp": "Wird ausgeführt, wenn das Logo nach oben zeigt und das Display vertikal ist.",
  "Gesture.LogoUp|block": "Logo oben",
  "Gesture.ScreenDown": "Wird ausgeführt, wenn das Display nach oben zeigt und das Board horizontal ist.",
  "Gesture.ScreenDown|block": "Display nach unten",
  "Gesture.ScreenUp": "Wird ausgeführt, wenn das Display nach unten zeigt und das Board horizontal ist.",
  "Gesture.ScreenUp|block": "Display nach oben",
  "Gesture.Shake": "Wird erhöht, wenn geschüttelt",
  "Gesture.Shake|block": "geschüttelt",
  "Gesture.SixG": "Wird ausgeführt, ein 6g starker Stoß erkannt wird",
  "Gesture.SixG|block": "6g",
  "Gesture.ThreeG": "Wird ausgeführt, ein 3g starker Stoß erkannt wird",
  "Gesture.ThreeG|block": "3g",
  "Gesture.TiltLeft": "Wird ausgeführt, wenn das Display nach links zeigt",
  "Gesture.TiltLeft|block": "nach links neigen",
  "Gesture.TiltRight": "Wird ausgeführt, wenn das Display nach rechts zeigt",
  "Gesture.TiltRight|block": "nach rechts neigen",
  "IconNames.Angry|block": "wütend",
  "IconNames.Asleep|block": "schlafend",
  "IconNames.Butterfly|block": "Schmetterling",
  "IconNames.Chessboard|block": "Schachbrett",
  "IconNames.Confused|block": "verwirrt",
  "IconNames.Cow|block": "Kuh",
  "IconNames.Diamond|block": "Diamant",
  "IconNames.Duck|block": "Ente",
  "IconNames.EigthNote|block": "Achtelnote",
  "IconNames.Fabulous|block": "Fabelhaft",
  "IconNames.Ghost|block": "Geist",
  "IconNames.Giraffe|block": "Giraffe",
  "IconNames.Happy|block": "glücklich",
  "IconNames.Heart|block": "Herz",
  "IconNames.House|block": "Haus",
  "IconNames.LeftTriangle|block": "rechtwinkliges Dreieck",
  "IconNames.Meh|block": "egal",
  "IconNames.No|block": "Nein",
  "IconNames.Pitchfork|block": "Heugabel",
  "IconNames.QuarterNote|block": "Viertelnote",
  "IconNames.Rabbit|block": "Kaninchen",
  "IconNames.Rollerskate|block": "Rollschuh",
  "IconNames.Sad|block": "traurig",
  "IconNames.Scissors|block": "Schere",
  "IconNames.Silly|block": "albern",
  "IconNames.Skull|block": "Totenkopf",
  "IconNames.SmallDiamond|block": "kleiner Diamant",
  "IconNames.SmallHeart|block": "kleines Herz",
  "IconNames.SmallSquare|block": "kleines Quadrat",
  "IconNames.Snake|block": "Schlange",
  "IconNames.Square|block": "Quadrat",
  "IconNames.StickFigure|block": "Strichmännchen",
  "IconNames.Surprised|block": "überrascht",
  "IconNames.Sword|block": "Schwert",
  "IconNames.TShirt|block": "T-Shirt",
  "IconNames.Target|block": "Ziel",
  "IconNames.Tortoise|block": "Schildkröte",
  "IconNames.Triangle|block": "Dreieck",
  "IconNames.Umbrella|block": "Regenschirm",
  "IconNames.Yes|block": "Ja",
  "Image.clear": "Schaltet alle Pixel aus.",
  "Image.height": "Ruft die Höhe in Reihen ab (immer 5)",
  "Image.pixel": "Rufe den Pixelzustand bei Position ``(x,y)``ab",
  "Image.pixelBrightness": "Ruft die Pixelhelligkeit ([0..255]) an einer bestimmten Position ab",
  "Image.plotFrame": "Zeichnet den Frame der ``Position`` des Bildes auf dem Bildschirm.",
  "Image.plotFrame|param|xOffset": "Spaltenposition für den Anzeigenbeginn des Bildes",
  "Image.plotImage": "Zeichnet das Bild in einer angegebenen Spalte auf dem Bildschirm",
  "Image.scrollImage": "Scrollt ein Bild.",
  "Image.scrollImage|param|frameOffset": "x Offset für die Bewegung bei jedem Animationsschritt, z. B. 1, 2, 5",
  "Image.scrollImage|param|interval": "Zeit zwischen jedem Animationsschritt in Millisekunden, z. B. 200",
  "Image.setPixel": "Lege den Pixelzustand bei Position ``(x,y)`` fest",
  "Image.setPixelBrightness": "Legt eine bestimmte Pixelhelligkeit an einer bestimmten Position fest",
  "Image.showImage": "Zeigt einen Frame des Bildes bei Offset ``x offset``.",
  "Image.showImage|param|xOffset": "Spaltenposition für den Anzeigenbeginn des Bildes",
  "Image.width": "Ruft die Breite in Spalten ab",
  "LedSpriteProperty.Blink|block": "blinken",
  "LedSpriteProperty.Brightness|block": "Helligkeit",
  "LedSpriteProperty.Direction|block": "Richtung",
  "LedSpriteProperty.X|block": "x",
  "LedSpriteProperty.Y|block": "y",
  "Math": "Komplexere Operationen mit Zahlen.",
  "Math.abs": "Gibt den absoluten Wert einer Zahl aus (den Wert unabhängig davon, ob er positiv oder negativ ist).\nDer absolute Wert von -5 ist zum Beispiel der gleiche wie der von 5.",
  "Math.abs|param|x": "Ein numerischer Ausdruck, für den der absolute Wert benötigt wird.",
  "Math.acos": "Gibt den Arkuskosinus (im Bogenmaß) einer Zahl aus",
  "Math.acos|param|x": "Eine Zahl",
  "Math.asin": "Gibt den Arkussinus (im Bogenmaß) einer Zahl aus",
  "Math.asin|param|x": "Eine Zahl",
  "Math.atan": "Gibt den Arkustangens (im Bogenmaß) einer Zahl aus",
  "Math.atan2": "Gibt den Arkustangens des Quotienten eines der Argumente aus.",
  "Math.atan2|param|x": "Eine Zahl",
  "Math.atan2|param|y": "Eine Zahl",
  "Math.atan|param|x": "Eine Zahl",
  "Math.ceil": "Gibt die kleinste Zahl größer als oder gleich des numerischen Argumentes aus.",
  "Math.ceil|param|x": "Ein numerischer Ausdruck.",
  "Math.cos": "Gibt den Kosinus einer Zahl aus.",
  "Math.cos|param|x": "Ein Winkel im Bogenmaß",
  "Math.exp": "Gibt ``e^x`` aus.",
  "Math.exp|param|x": "Eine Zahl",
  "Math.floor": "Gibt die größte Zahl kleiner als oder gleich des numerischen Argumentes aus.",
  "Math.floor|param|x": "Ein numerischer Ausdruck.",
  "Math.idiv": "Gibt den Wert einer 32-Bit-Ganzzahl (mit Vorzeichen) bei der Division zweier Zahlen aus.",
  "Math.idiv|param|x": "Die erste Zahl",
  "Math.idiv|param|y": "Die zweite Zahl",
  "Math.imul": "Gibt den Wert einer 32-Bit-Ganzzahl (mit Vorzeichen) bei der Multiplikation zweier Zahlen aus.",
  "Math.imul|param|x": "Die erste Zahl",
  "Math.imul|param|y": "Die zweite Zahl",
  "Math.log": "Gibt den natürlichen Logarithmus (Basis e) einer Zahl aus.",
  "Math.log|param|x": "Eine Zahl",
  "Math.map|param|fromHigh": "die obere Grenze des aktuellen Wertebereichs, z.B.: 1023",
  "Math.map|param|fromLow": "die untere Grenze des aktuellen Wertebereichs",
  "Math.map|param|toHigh": "die Obergrenze des Wertezielbereichs, z.B.: 4",
  "Math.map|param|toLow": "die Untergrenze des Wertezielbereichs",
  "Math.map|param|value": "Wert in Bereichen zuordnen",
  "Math.max": "Gibt den größeren von zwei vorhandenen numerischen Ausdrücken aus.",
  "Math.min": "Gibt den niedrigeren von zwei vorhandenen numerischen Ausdrücken aus.",
  "Math.pow|param|x": "Der Basiswert des Ausdrucks.",
  "Math.pow|param|y": "Der exponentielle Wert des Ausdrucks.",
  "Math.randomBoolean": "Erzeugt zufällig einen \"wahr\" oder \"falsch\"-Wert, wie bei einem Münzwurf.",
  "Math.randomBoolean|block": "wähle zufälligen Wahr- oder Falsch-Wert",
  "Math.randomRange": "Gibt eine pseudozufällige Zahl zwischen einschl. Minimum und Maximum aus. \nWenn beide Zahlen Ganzzahlen sind, ist auch das Ergebnis eine Ganzzahl.",
  "Math.randomRange|block": "wähle eine zufällige Zahl zwischen %min|und %limit",
  "Math.randomRange|param|max": "die obere Grenze, einschließlich dieser Zahl, z. B.: 10",
  "Math.randomRange|param|min": "die untere Grenze, einschließlich dieser Zahl, z. B.: 0",
  "Math.round": "Gibt einen gegebenen numerischen Ausdruck auf die nächste Zahl gerundet aus.",
  "Math.round|param|x": "Der Wert, der auf die nächste Zahl gerundet werden soll.",
  "Math.sign": "Gibt das Vorzeichen von x aus und zeigt an, ob dieses positiv, negativ oder null ist.",
  "Math.sign|param|x": "Der numerische Ausdruck, der getestet werden soll",
  "Math.sin": "Gibt den Sinus einer Zahl aus.",
  "Math.sin|param|x": "Ein Winkel im Bogenmaß",
  "Math.sqrt|param|x": "Ein numerischer Ausdruck.",
  "Math.tan": "Gibt den Tangens einer Zahl aus.",
  "Math.tan|param|x": "Ein Winkel im Bogenmaß",
  "Math.trunc": "Gibt die Zahl mit abgeschnittenem Dezimalteil aus.",
  "Math.trunc|param|x": "Ein numerischer Ausdruck.",
  "Math|block": "Mathematik",
  "Melodies.BaDing|block": "Ping ping",
  "Melodies.Baddy|block": "Baddy",
  "Melodies.Birthday|block": "Geburtstag",
  "Melodies.Blues|block": "Blues",
  "Melodies.Chase|block": "Verfolgungsjagd",
  "Melodies.Dadadadum|block": "Dadadum",
  "Melodies.Entertainer|block": "Entertainer",
  "Melodies.Funeral|block": "Beerdigung",
  "Melodies.Funk|block": "Funk",
  "Melodies.JumpDown|block": "Runterspringen",
  "Melodies.JumpUp|block": "Hochspringen",
  "Melodies.Nyan|block": "Nyan",
  "Melodies.Ode|block": "Ode",
  "Melodies.PowerDown|block": "Ausschalten",
  "Melodies.PowerUp|block": "Einschalten",
  "Melodies.Prelude|block": "Präludium",
  "Melodies.Punchline|block": "Pointe",
  "Melodies.Ringtone|block": "Klingelton",
  "Melodies.Wawawawaa|block": "wawawawaa",
  "Melodies.Wedding|block": "Hochzeit",
  "MelodyOptions.ForeverInBackground|block": "dauerhaft im Hintergrund",
  "MelodyOptions.Forever|block": "dauerhaft",
  "MelodyOptions.OnceInBackground|block": "einmal im Hintergrund",
  "MelodyOptions.Once|block": "einmal",
  "MelodyStopOptions.All|block": "alle",
  "MesAlertEvent.DisplayToast|block": "Toast-Benachrichtigung anzeigen",
  "MesAlertEvent.FindMyPhone|block": "mein Handy finden",
  "MesAlertEvent.PlayRingtone|block": "Klingelton abspielen",
  "MesAlertEvent.PlaySound|block": "Ton abspielen",
  "MesAlertEvent.RingAlarm2|block": "Alarm 2 auslösen",
  "MesAlertEvent.RingAlarm3|block": "Alarm 3 auslösen",
  "MesAlertEvent.RingAlarm4|block": "Alarm 4 auslösen",
  "MesAlertEvent.RingAlarm5|block": "Alarm 5 auslösen",
  "MesAlertEvent.RingAlarm6|block": "Alarm 6 auslösen",
  "MesAlertEvent.RingAlarm|block": "Alarm auslösen",
  "MesAlertEvent.Vibrate|block": "vibrieren",
  "MesCameraEvent.LaunchPhotoMode|block": "Fotomodus starten",
  "MesCameraEvent.LaunchVideoMode|block": "Videomodus starten",
  "MesCameraEvent.StartVideoCapture|block": "Videoaufnahme starten",
  "MesCameraEvent.StopPhotoMode|block": "Fotomodus anhalten",
  "MesCameraEvent.StopVideoCapture|block": "Videoaufnahme anhalten",
  "MesCameraEvent.StopVideoMode|block": "Videomodus anhalten",
  "MesCameraEvent.TakePhoto|block": "Foto aufnehmen",
  "MesCameraEvent.ToggleFrontRear|block": "umschalten vorne-hinten",
  "MesDeviceInfo.DisplayOff|block": "Bildschirm aus",
  "MesDeviceInfo.DisplayOn|block": "Bildschirm an",
  "MesDeviceInfo.IncomingCall|block": "eingehender Anruf",
  "MesDeviceInfo.IncomingMessage|block": "eingehende Nachricht",
  "MesDeviceInfo.OrientationLandscape|block": "Ausrichtung Querformat",
  "MesDeviceInfo.OrientationPortrait|block": "Ausrichtung Hochformat",
  "MesDeviceInfo.Shaken|block": "geschüttelt",
  "MesDpadButtonInfo.ADown|block": "A unten",
  "MesDpadButtonInfo.AUp|block": "A oben",
  "MesDpadButtonInfo.BDown|block": "B unten",
  "MesDpadButtonInfo.BUp|block": "B oben",
  "MesDpadButtonInfo.CDown|block": "C unten",
  "MesDpadButtonInfo.CUp|block": "C oben",
  "MesDpadButtonInfo.DDown|block": "D unten",
  "MesDpadButtonInfo.DUp|block": "D oben",
  "MesDpadButtonInfo._1Down|block": "1 unten",
  "MesDpadButtonInfo._1Up|block": "1 oben",
  "MesDpadButtonInfo._2Down|block": "2 unten",
  "MesDpadButtonInfo._2Up|block": "2 oben",
  "MesDpadButtonInfo._3Down|block": "3 unten",
  "MesDpadButtonInfo._3Up|block": "3 oben",
  "MesDpadButtonInfo._4Down|block": "4 unten",
  "MesDpadButtonInfo._4Up|block": "4 oben",
  "MesRemoteControlEvent.forward|block": "vorwärts",
  "MesRemoteControlEvent.nextTrack|block": "nächster Titel",
  "MesRemoteControlEvent.pause|block": "pausieren",
  "MesRemoteControlEvent.play|block": "abspielen",
  "MesRemoteControlEvent.previousTrack|block": "vorheriger Titel",
  "MesRemoteControlEvent.rewind|block": "zurückspulen",
  "MesRemoteControlEvent.stop|block": "anhalten",
  "MesRemoteControlEvent.volumeDown|block": "leiser",
  "MesRemoteControlEvent.volumeUp|block": "lauter",
  "MusicEvent.BackgroundMelodyEnded|block": "Hintergrundmelodie zu Ende",
  "MusicEvent.BackgroundMelodyNotePlayed|block": "Note aus Hintergrundmelodie gespielt",
  "MusicEvent.BackgroundMelodyPaused|block": "Hintergrundmelodie angehalten",
  "MusicEvent.BackgroundMelodyRepeated|block": "Hintergrundmelodie wiederholt",
  "MusicEvent.BackgroundMelodyResumed|block": "Hintergrundmelodie geht weiter",
  "MusicEvent.BackgroundMelodyStarted|block": "Hintergrundmelodie angefangen",
  "MusicEvent.MelodyEnded|block": "Melodie zu Ende",
  "MusicEvent.MelodyNotePlayed|block": "Note aus Melodie gespielt",
  "MusicEvent.MelodyRepeated|block": "Melodie wiederholt",
  "MusicEvent.MelodyStarted|block": "Melodie angefangen",
  "Note.CSharp3|block": "C#3",
  "Note.CSharp4|block": "C#4",
  "Note.CSharp5|block": "C#5",
  "Note.CSharp|block": "C#",
  "Note.FSharp3|block": "F#3",
  "Note.FSharp4|block": "F#4",
  "Note.FSharp5|block": "F#5",
  "Note.FSharp|block": "F#",
  "Note.GSharp3|block": "G#3",
  "Note.GSharp4|block": "G#4",
  "Note.GSharp5|block": "G#5",
  "Note.GSharp|block": "G#",
  "PinEvent.Fall|block": "fallen",
  "PinEventType.Edge|block": "Rand",
  "PinEventType.None|block": "keine",
  "PinEventType.Pulse|block": "Puls",
  "PinEventType.Touch|block": "Berührung",
  "PinPullMode.PullDown|block": "nach unten",
  "PinPullMode.PullNone|block": "keine",
  "PinPullMode.PullUp|block": "nach oben",
  "PulseValue.High|block": "hoch",
  "PulseValue.Low|block": "niedrig",
  "RadioPacketProperty.SignalStrength|block": "Signalstärke",
  "Rotation.Pitch|block": "Winkel",
  "Rotation.Roll|block": "rollen",
  "String.charAt": "Gib den Buchstaben an der angegebenen Position aus.",
  "String.charAt|block": "Zeichen aus %this=text|an %pos",
  "String.charCodeAt": "Gib den Unicode-Wert des Zeichens am vorgegebenen Ort aus.",
  "String.charCodeAt|param|index": "Der null-basierte Index des gewünschten Zeichens. Wenn kein Zeichen am angegeben Index vorhanden ist, wird NaN ausgegeben.",
  "String.compare": "Zeigt an, wie sich die Reihenfolge von Zeichen in zwei Zeichenfolgen unterscheidet (in ASCII-Codierung).",
  "String.compare|block": "vergleiche %this=text| mit %that",
  "String.compare|param|that": "Zeichenfolge, die mit der Zielzeichenfolge verglichen werden soll",
  "String.concat": "Gibt eine Zeichenfolge aus, die die Verkettung von zwei oder mehr Zeichenfolgen ist.",
  "String.fromCharCode": "Erstelle Sie eine Zeichenfolge aus dem angegebenen ASCII-Zeichencode.",
  "String.fromCharCode|block": "Text aus Zeichencode %code",
  "String.isEmpty": "Gibt einen Wert aus, der anzeigt, ob die Zeichenfolge leer ist",
  "String.length|block": "Länge von %VALUE",
  "String.slice": "Gib eine Teilzeichenfolge der aktuellen Zeichenfolge aus.",
  "String.slice|param|start": "Erster Zeichenindex, kann beim zählen vom Ende negativ sein, zum Beispiel: 0",
  "String.substr": "Gib eine Teilzeichenfolge der aktuellen Zeichenfolge aus.",
  "String.substr|block": "extrahiere aus %this=text|beginnend mit %start|%length Zeichen",
  "String|block": "Zeichenfolge",
  "basic": "Bietet Zugriff auf grundlegende mini-Funktionalität.",
  "basic.clearScreen": "Schalte alle LEDs aus",
  "basic.clearScreen|block": "Bildschirminhalt löschen",
  "basic.forever": "Wiederholt den Code dauerhaft im Hintergrund. Bei jeder Iteration ist es möglich, andere Codes auszuführen.",
  "basic.forever|block": "dauerhaft",
  "basic.pause": "Pausiere für die angegebene Zeit in Millisekunden",
  "basic.pause|block": "pausiere (ms) %pause",
  "basic.pause|param|ms": "wie lange pausieren, z.B.: 100, 200, 500, 1000, 2000",
  "basic.plotLeds": "Zeichnet ein Bild auf dem LED-Bildschirm.",
  "basic.plotLeds|param|leds": "Muster der LEDs, die ein-/ und ausgeschaltet werden",
  "basic.showAnimation": "Zeigt eine Abfolge von LED-Anzeigen als Animation.",
  "basic.showAnimation|param|interval": "Zeit in Millisekunden zwischen jedem Neuzeichnen",
  "basic.showAnimation|param|leds": "Muster der LEDs, die ein-/ und ausgeschaltet werden",
  "basic.showArrow|block": "zeige Pfeil %i=device_arrow",
  "basic.showArrow|param|direction": "die Richtung des Pfeils",
  "basic.showArrow|param|interval": "die Zeitspanne (in Millisekunden), in der das Symbol angezeigt wird. Die Standardeinstellung ist 600.",
  "basic.showIcon": "Zeichnet das ausgewählte Symbol auf dem LED-Bildschirm",
  "basic.showIcon|block": "zeige Symbol %i",
  "basic.showIcon|param|interval": "die Zeitspanne (in Millisekunden), in der das Symbol angezeigt wird. Die Standardeinstellung ist 600.",
  "basic.showLeds": "Zeichnet ein Bild auf dem LED-Bildschirm.",
  "basic.showLeds|block": "zeige LEDs",
  "basic.showLeds|param|interval": "Zeit in Millisekunden, die nach der Zeichnung gewartet wird",
  "basic.showLeds|param|leds": "Muster der LEDs, die ein- und ausgeschaltet werden",
  "basic.showNumber": "Zeige eine Nummer auf dem Display. Wenn die Nummer auf das Display passt (es sich also um eine einstellige Zahl handelt), scrolle nicht weiter.",
  "basic.showNumber|block": "zeige|Nummer %number",
  "basic.showNumber|param|interval": "Scroll-Geschwindigkeit; z.B. 150, 100, 200,-100",
  "basic.showString": "Zeige Text auf dem Display an, Buchstabe für Buchstabe. Wenn die Zeichenfolge in das Display passt (also wenn es sich um einen einzelnen Buchstaben handelt), scrolle nicht weiter.",
  "basic.showString|block": "zeige|Zeichenfolge %text",
  "basic.showString|param|interval": "Wie schnell die Zeichen geändert werden; z.B. 150, 100, 200,-100",
  "basic.showString|param|text": "Text auf dem Bildschirm dargestellt werden soll, z.B.: \"Hallo!\"",
  "basic|block": "Grundlagen",
  "bluetooth": "Unterstützung für zusätzliche Bluetooth-Dienste.\n\nUnterstützung für zusätzliche Bluetooth-Dienste.",
  "bluetooth.advertiseUid": "Übertrage eine Eddystone-UID",
  "bluetooth.advertiseUidBuffer": "Übertrage eine Eddystone-UID",
  "bluetooth.advertiseUidBuffer|param|connectable": "wahr, um Bluetooth für andere Dienste verbindbar zu machen, sonst falsch.",
  "bluetooth.advertiseUidBuffer|param|nsAndInstance": "16-Byte-Zwischenspeicher an Namensraum (Bytes 0-9) und Instanz (Bytes 10-15)",
  "bluetooth.advertiseUidBuffer|param|power": "Powerlevel zwischen 0 und 7, z. B.: 7",
  "bluetooth.advertiseUid|block": "Bluetooth-Übertragung UID|Namensraum (Bytes 6-9)%ns|Instanz (Bytes 2-6)%instance|mit Leistung %power|verbindbar %connectable",
  "bluetooth.advertiseUid|param|connectable": "wahr, um Bluetooth für andere Dienste verbindbar zu machen, sonst falsch.",
  "bluetooth.advertiseUid|param|instance": "4 letzte Bytes der Instanz-UID",
  "bluetooth.advertiseUid|param|ns": "4 letzte Bytes der Namensraum-UID",
  "bluetooth.advertiseUid|param|power": "Powerlevel zwischen 0 und 7, z. B.: 7",
  "bluetooth.advertiseUrl": "Übertrage eine Eddystone-URL",
  "bluetooth.advertiseUrl|block": "Bluetooth-Übertragung URL %url|mit Leistung %power|verbindbar %connectable",
  "bluetooth.advertiseUrl|param|connectable": "wahr, um Bluetooth für andere Dienste verbindbar zu machen, sonst falsch.",
  "bluetooth.advertiseUrl|param|power": "Powerlevel zwischen 0 und 7, z. B.: 7",
  "bluetooth.advertiseUrl|param|url": "die zu übertragende URL. Darf nicht länger sein als die unterstützte Eddystone-URL-Länge, z. B.:„https://makecode.com“",
  "bluetooth.onBluetoothConnected": "Registriere Code, der ausgeführt wird, wenn das micro:bit über Bluetooth verbunden wird",
  "bluetooth.onBluetoothConnected|block": "wenn Bluetooth verbunden",
  "bluetooth.onBluetoothConnected|param|body": "Code, der ausgeführt wird, wenn eine Bluetooth-Verbindung aufgebaut wurde",
  "bluetooth.onBluetoothDisconnected": "Registriere Code, der ausgeführt wird, wenn die Bluetooth-Verbindung zum micro:bit getrennt wurde",
  "bluetooth.onBluetoothDisconnected|block": "wenn Bluetooth getrennt ist",
  "bluetooth.onBluetoothDisconnected|param|body": "Code, der ausgeführt wird, wenn eine Bluetooth-Verbindung getrennt wurde",
  "bluetooth.onUartDataReceived": "Registriert ein Ereignis, das ausgeführt wird, wenn einer der Begrenzer erkannt wird.",
  "bluetooth.onUartDataReceived|block": "Bluetooth|wenn Daten empfangen %delimiters=serial_delimiter_conv",
  "bluetooth.onUartDataReceived|param|delimiters": "die Zeichen, mit denen die empfangenen Zeichen abgeglichen werden.",
  "bluetooth.setTransmitPower": "Legt die Bluetooth-Übertragungsstärke zwischen 0 (minimal) und 7 (maximal) fest.",
  "bluetooth.setTransmitPower|block": "Bluetooth-Übertragungsstärke %power",
  "bluetooth.setTransmitPower|param|power": "Powerlevel zwischen 0 (minimal) und 7 (maximal), z. B.: 7.",
  "bluetooth.startAccelerometerService": "Startet den Bluetooth-Beschleunigungssensor-Dienst",
  "bluetooth.startAccelerometerService|block": "Bluetooth-Beschleunigungssensor-Dienst",
  "bluetooth.startButtonService": "Startet den Bluetooth-Tasten-Dienst",
  "bluetooth.startButtonService|block": "Bluetooth-Tasten-Dienst",
  "bluetooth.startIOPinService": "Startet den Bluetooth-IO-Pin-Dienst.",
  "bluetooth.startIOPinService|block": "Bluetooth-IO-Pin-Dienst",
  "bluetooth.startLEDService": "Startet den Bluetooth-LED-Dienst",
  "bluetooth.startLEDService|block": "Bluetooth-LED-Dienst",
  "bluetooth.startMagnetometerService": "Startet den Bluetooth-Magnetometer-Dienst",
  "bluetooth.startMagnetometerService|block": "Bluetooth-Magnetometer-Dienst",
  "bluetooth.startTemperatureService": "Startet den Bluetooth-Temperatur-Dienst",
  "bluetooth.startTemperatureService|block": "Bluetooth-Temperatur-Dienst",
  "bluetooth.startUartService": "Startet den Bluetooth-UART-Service",
  "bluetooth.startUartService|block": "Bluetooth-UART-Dienst",
  "bluetooth.stopAdvertising": "Stoppt die Übertragung von Eddystone-Endpunkten",
  "bluetooth.stopAdvertising|block": "Bluetooth-Übertragung stoppen",
  "bluetooth.uartReadUntil": "Liest aus dem Bluetooth-UART-Dienst-Puffer und gibt dessen Inhalt aus, wenn das angegebene Trennzeichen aufgetreten ist.",
  "bluetooth.uartReadUntil|block": "Bluetooth-UART|lesen bis %del=serial_delimiter_conv",
  "bluetooth.uartWriteLine": "Schreibt in den Bluetooth-UART-Dienst-Puffer. Von dort werden die Daten über Bluetooth an ein angeschlossenes Gerät übertragen.",
  "bluetooth.uartWriteNumber|block": "Bluetooth-UART|schreibe Zahl %value",
  "bluetooth.uartWriteString": "Schreibt in den Bluetooth-UART-Dienst-Puffer. Von dort werden die Daten über Bluetooth an ein angeschlossenes Gerät übertragen.",
  "bluetooth.uartWriteString|block": "Bluetooth-UART|schreibe Zeichenkette %data",
  "bluetooth.uartWriteValue": "Schreibt ein ``Namen: Wert`` Wertepaar auf die serielle Schnittstelle.",
  "bluetooth.uartWriteValue|block": "Bluetooth-UART|schreibe Wert %name|= %value",
  "bluetooth.uartWriteValue|param|name": "Name des Wertestreams, z.B.: x",
  "bluetooth.uartWriteValue|param|value": "Schreiben",
  "bluetooth|block": "Bluetooth",
  "console.logValue|param|value": "Schreiben",
  "control": "Laufzeit- und Event-Dienstprogramme.",
  "control.assert": "Wenn die Bedingung falsch ist, zeige eine Nachricht auf der seriellen Konsole und gebe Panic-Code 098 aus",
  "control.createBuffer": "Erstellt einen Null-initialisierten Zwischenspeicher.",
  "control.createBuffer|param|size": "Anzahl der Bytes im Zwischenspeicher",
  "control.deviceName|block": "Gerätename",
  "control.deviceSerialNumber": "Leite eine einzigartige, einheitliche Seriennummer dieses Gerätes aus den internen Daten ab.",
  "control.deviceSerialNumber|block": "Seriennnummer",
  "control.eventSourceId": "Gibt den Wert einer C++-Laufzeitkonstanten aus",
  "control.eventSourceId|block": "%id",
  "control.eventTimestamp": "Holt den Zeitstempel des letzten Events auf dem Bus",
  "control.eventTimestamp|block": "Ereigniszeitstempel",
  "control.eventValue": "Holt den Wert des letzten ausgeführten Events auf dem Bus",
  "control.eventValueId": "Gibt den Wert einer C++-Laufzeitkonstanten aus",
  "control.eventValueId|block": "%id",
  "control.eventValue|block": "Ereigniswert",
  "control.inBackground": "Plant Code, der im Hintergrund wiedergegeben wird.",
  "control.inBackground|block": "im Hintergrund ausführen",
  "control.onEvent|block": "wenn Ereignis|von Quelle %src=control_event_source_id|mit Wert %value=control_event_value_id",
  "control.panic": "Zeigt einen spezifizierten Fehlercode und hält das Programm an.",
  "control.raiseEvent": "Startet ein Event auf dem Event-Bus.",
  "control.raiseEvent|block": "Ereignis auslösen|von Quelle %src=control_event_source_id|mit Wert %value=control_event_value_id",
  "control.raiseEvent|param|mode": "optionale Definition davon, wie ein Event nach dem Erstellen ausgeführt wird (Standard ist \"CREATE_AND_FIRE\").",
  "control.raiseEvent|param|src": "ID der Calliope mini-Komponente, die das Event generiert hat, zum Beispiel CALLIOPE_ID_BUTTON_A.",
  "control.raiseEvent|param|value": "Komponentenspezifischer Code, der den Grund des Events angibt.",
  "control.reset": "Seit den mini zurück.",
  "control.reset|block": "zurücksetzen",
  "control.runtimeWarning": "Zeige Warnmeldung im Simulator.",
  "control.waitMicros": "Sperrt die aktuelle Leitung für die Dauer der angegebenen Mikrosekunden",
  "control.waitMicros|block": "Warte (µs)%micros",
  "control.waitMicros|param|micros": "Anzahl der Mikrosekunden, die gewartet werden soll, z.B.: 4",
  "control|block": "Steuerung",
  "devices": "Eine Telefon mit dem BBC-micro:bt per Bluetooth steuern.",
  "devices.onGamepadButton": "Registriert Code, der ausgeführt werden soll, wenn der micro:bit einen Befehl vom verbundenen Gamepad erhält.",
  "devices.onGamepadButton|block": "auf Gamepad-Schaltfläche|%NAME",
  "devices.onGamepadButton|param|body": "Code, der ausgeführt werden soll, wenn die Taste gedrückt wird",
  "devices.onGamepadButton|param|name": "Name der Schaltfläche",
  "devices.onNotified": "Registriert Code, der ausgeführt werden soll, wenn das Gerät von einem bestimmten Ereignis benachrichtigt wird.",
  "devices.onNotified|block": "bei Benachrichtigung |%event",
  "devices.onNotified|param|body": "Codehandler, wenn Ereignis ausgelöst wird",
  "devices.onNotified|param|event": "Beschreibung des Ereignisses",
  "devices.onSignalStrengthChanged": "Registriert Code, der ausgeführt werden soll, wenn das Gerät über eine Änderung der Signalstärke informiert wird.",
  "devices.onSignalStrengthChanged|block": "bei veränderter Signalstärke",
  "devices.onSignalStrengthChanged|param|body": "Code, der ausgeführt wird, wenn die Signalstärke sich ändert.",
  "devices.raiseAlertTo": "Sendet den Befehl ‚‚Alarm‘‘ an das Elterngerät.",
  "devices.raiseAlertTo|block": "Alarm auslösen bei|%property",
  "devices.raiseAlertTo|param|event": "Beschreibung des Ereignisses",
  "devices.signalStrength": "Gibt die letzte vom gekoppelten Gerät gemeldete Signalstärke aus.",
  "devices.signalStrength|block": "Signalstärke",
  "devices.tellCameraTo": "Sendet einen Befehl ‚‚Alarm‘‘ an das Elterngerät.",
  "devices.tellCameraTo|block": "Kamera befehlen zu |%property",
  "devices.tellCameraTo|param|event": "Beschreibung des Ereignisses",
  "devices.tellRemoteControlTo": "Sendet einen Befehl ‚‚Fernbedienung‘‘ an das Elterngerät.",
  "devices.tellRemoteControlTo|block": "Sage der Fernbedienung |%property",
  "devices.tellRemoteControlTo|param|event": "Beschreibung des Ereignisses",
  "devices|block": "Geräte",
  "game": "Eine Einzel-LED-Sprite-Spielumgebung",
  "game.LedSprite": "Ein Spiel-Sprite, der als einzelne LED gerendert wird",
  "game.LedSprite.blink": "Meldet die ``Blink``-Dauer eines Sprites",
  "game.LedSprite.brightness": "Meldet die ``Helligkeit`` eines Sprites auf dem LED-Bildschirm",
  "game.LedSprite.change": "Ändert eine Eigenschaft des Sprites",
  "game.LedSprite.changeBlinkBy": "Ändert die ``Blink``-Dauer um die angegebene Anzahl an Millisekunden",
  "game.LedSprite.changeBrightnessBy": "Ändert die ``Y``-Position um die angegebene Anzahl",
  "game.LedSprite.changeBrightnessBy|param|value": "der Wert zum Ändern der Helligkeit",
  "game.LedSprite.changeDirectionBy": "Ändert die Position der ``Richtung`` um die angegebene Anzahl durch Drehen nach rechts",
  "game.LedSprite.changeXBy": "Ändert die ``X``-Position um die angegebene Anzahl",
  "game.LedSprite.changeYBy": "Ändert die ``Y``-Position um die angegebene Anzahl",
  "game.LedSprite.change|block": "%sprite|ändere %property|um %value",
  "game.LedSprite.change|param|property": "der Name der Eigenschaft zum Ändern",
  "game.LedSprite.change|param|value": "Anzahl der Veränderung, z. B.: 1",
  "game.LedSprite.delete": "Löscht den Sprite aus der Spielumgebung. Der Sprite erscheint nicht mehr auf dem Bildschirm und interagiert nicht mehr mit anderen Sprites.",
  "game.LedSprite.direction": "Meldet die aktuelle Richtung eines Sprites",
  "game.LedSprite.get": "Ruft eine Eigenschaft des Sprites ab",
  "game.LedSprite.get|block": "%sprite|%property",
  "game.LedSprite.get|param|property": "der Name der Eigenschaft zum Ändern",
  "game.LedSprite.goTo": "Gehe zu dieser Position auf dem Bildschirm",
  "game.LedSprite.ifOnEdgeBounce": "Wenn der Bildschirmrand berührt wird und die Sichtrichtung geradeaus ist, wegdrehen.",
  "game.LedSprite.ifOnEdgeBounce|block": "%sprite|pralle vom Rand ab",
  "game.LedSprite.isTouching": "Meldet wahr, wenn der Sprite dieselbe Position hat wie der angegebene Sprite",
  "game.LedSprite.isTouchingEdge": "Meldet wahr, wenn der Sprite einen Rand berührt",
  "game.LedSprite.move": "Bewege eine bestimmte Anzahl von LEDs in die aktuelle Richtung",
  "game.LedSprite.move|block": "%sprite|bewegen um %leds",
  "game.LedSprite.move|param|leds": "Anzahl der zu bewegenden LEDs, z. B.: 1, -1",
  "game.LedSprite.off": "Schaltet den Sprite aus (bei Standardeinstellung ein)",
  "game.LedSprite.on": "Schaltet den Sprite ein (bei Standardeinstellung ein)",
  "game.LedSprite.set": "Legt eine Eigenschaft des Sprites fest",
  "game.LedSprite.setBlink": "Legt das Blinkdauer-Intervall in Millisekunden fest.",
  "game.LedSprite.setBrightness": "Lege die ``Helligkeit`` eines Sprites fest",
  "game.LedSprite.setBrightness|param|brightness": "die Helligkeit von 0 (aus) bis 255 (ein), z. B.: 255.",
  "game.LedSprite.setDirection": "Lege die Richtung des aktuellen Sprites fest, gerundet auf das nächste Vielfache von 45",
  "game.LedSprite.setX": "Lege die ``X``-Position eines Sprites fest",
  "game.LedSprite.setY": "Lege die ``Y``-Position eines Sprites fest",
  "game.LedSprite.set|block": "%sprite|stelle %property ein|auf %value",
  "game.LedSprite.set|param|property": "der Name der Eigenschaft zum Ändern",
  "game.LedSprite.turn": "Drehe den Sprite",
  "game.LedSprite.turnLeft": "Drehe nach links (gegen den Uhrzeigersinn)",
  "game.LedSprite.turnRight": "Drehe nach rechts (im Uhrzeigersinn)",
  "game.LedSprite.turn|block": "%sprite|drehe %direction|um (°) %degrees",
  "game.LedSprite.turn|param|degrees": "Winkel zum Drehen in Grad z. B.: 45, 90, 180, 135",
  "game.LedSprite.turn|param|direction": "links oder rechts",
  "game.LedSprite.x": "Meldet die ``X``-Position eines Sprites auf dem LED-Bildschirm",
  "game.LedSprite.y": "Meldet die ``Y``-Position eines Sprites auf dem LED-Bildschirm",
  "game.addScore": "Fügt zum aktuellen Spielstand Punkte hinzu und zeigt eine Animation",
  "game.addScore|block": "Ändere Spielstand um|%points",
  "game.addScore|param|points": "Anzahl von zu verändernden Punkten, z. B.: 1",
  "game.createSprite": "Erzeugt einen neuen LED-Sprite, der nach rechts zeigt.",
  "game.createSprite|block": "erzeuge Sprite an Position|x: %x|y:%y",
  "game.createSprite|param|x": "horizontale Koordinate des Sprites, z.B. 2",
  "game.createSprite|param|y": "vertikale Koordinate des Sprites, z.B. 2",
  "game.currentTime": "Ruft die verbliebene Zeit (seit `starte Countdown`) oder die aktuelle Zeit (seit das Gerät gestartet wurde oder eine Stoppuhr aktiviert wurde) ab.",
  "game.gameOver": "Zeigt bei Spiel-Ende eine Animation und den Punktestand.",
  "game.gameOver|block": "Spiel beendet",
  "game.invalidSprite": "Ruft einen invaliden Sprite ab; wird genutzt, um Locale zu initialisieren.",
  "game.isPaused": "Zeigt an, ob das Spiel-Rendering angehalten wurde, um andere Animationen zu ermöglichen",
  "game.level": "Ruft das aktuelle Level ab",
  "game.levelUp": "Erhöht das Level und zeigt eine Nachricht an.",
  "game.life": "Ruft das aktuelle Leben ab",
  "game.pause": "Pausiert das Spiel-Rendering, um andere Animationen zu ermöglichen",
  "game.pause|block": "pausieren",
  "game.resume": "Setzt das Spiel-Rendering fort",
  "game.resume|block": "fortsetzen",
  "game.score": "Ruft den aktuellen Punktestand ab",
  "game.score|block": "Spielstand",
  "game.setLife": "Setzt den aktuellen Wert der Leben",
  "game.setScore": "Setzt den aktuellen Wert des Spielstands",
  "game.setScore|block": "setze Punktestand auf %points",
  "game.setScore|param|value": "neuer Punktestandwert.",
  "game.showScore": "Zeigt den Spielstand auf dem Display.",
  "game.startCountdown": "Zeigt eine Animation, startet dann einen Spiel-Countdown-Timer, der beim Erreichen von 0 zum Spielende führt",
  "game.startCountdown|block": "Countdown| starten (ms) %duration",
  "game.startCountdown|param|ms": "Countdown-Dauer in Millisekunden, z.B.: 10000",
  "game.startStopwatch": "Startet eine Stoppuhr.`aktuelle Zeit`gibt die vergangene Zeit an.",
  "game|block": "Spiel",
  "images": "Erstellung, Bearbeitung und Anzeige von LED-Bildern.",
  "images.arrowImage|block": "Pfeilbild %i=device_arrow",
  "images.arrowNumber|block": "%arrow",
  "images.createBigImage": "Erstellt ein Bild mit zwei Einzelbildern.",
  "images.createBigImage|block": "erstelle großes Bild",
  "images.createImage": "Erstellt ein Bild, das auf den LED-Bildschirm passt.",
  "images.createImage|block": "Erstelle Bild",
  "images.iconImage|block": "Bildsymbol %i",
  "images|block": "Bilder",
  "input": "Ereignisse und Daten der Sensoren",
  "input.acceleration": "Holt den Beschleunigungswert in Milli-Erdanziehung (wenn das Board flach mit dem Display nach oben liegt, X = 0, y = 0 und Z =-1024)",
  "input.acceleration|block": "Beschleunigung (mg) |%NAME",
  "input.buttonIsPressed": "Erhalte den Sie den Tastenstatus (gepresst oder nicht) für ``A`` und ``B``.",
  "input.buttonIsPressed|block": "Button|%NAME|ist gedrückt",
  "input.buttonIsPressed|param|button": "die Taste für die Anfrage, z. B.: Button.A",
  "input.calibrate": "Veraltet, verwende stattdessen Input.calibrateCompass.",
  "input.calibrateCompass|block": "Kompass kalibrieren",
  "input.compassHeading": "Holt die aktuelle Kompassrichtung in Grad.",
  "input.compassHeading|block": "Kompassausrichtung (°)",
  "input.lightLevel": "Liest die Lichtintensität auf dem LED-Bildschirm im Bereich von ``0`` (dunkel) und `` 255`` (hell).",
  "input.lightLevel|block": "Lichtstärke",
  "input.magneticForce": "Ruft den Wert der Magnetkraft in ``Mikro-Tesla`` (``µT``) ab. Diese Funktion wird im Simulator nicht unterstützt.",
  "input.magneticForce|block": "Magnetkraft (µT) |%NAME",
  "input.onButtonPressed": "Tue etwas, wenn eine Taste (A, B oder beide A + B) gedrückt und wieder losgelassen wird.",
  "input.onButtonPressed|block": "wenn Knopf|%NAME|gedrückt",
  "input.onGesture": "Mache etwas, wenn eine Geste gemacht wird (wie den mini zu schütteln).",
  "input.onGesture|block": "wenn |%NAME",
  "input.onGesture|param|gesture": "die Art der zu verfolgenden Geste, z. B.: Gesture.Shake",
  "input.onLogoDown": "Fügt Code hinzu, der ausgeführt wird, wenn das Logo nach unten zeigt und das Board vertikal ausgerichtet ist.",
  "input.onLogoUp": "Fügt Code hinzu, der ausgeführt wird, wenn das Logo nach oben zeigt und das Board vertikal ausgerichtet ist.",
  "input.onPinPressed": "Tue etwas, wenn ein Pin berührt und wieder losgelassen wird (während auch der GND-Pin berührt wird).",
  "input.onPinPressed|block": "wenn Pin %name |gedrückt",
  "input.onPinPressed|param|body": "Code, der ausführt wird, wenn ein Pin gehalten wird",
  "input.onPinPressed|param|name": "der Pin, der gedrückt werden muss, z. B.: TouchPin.P0",
  "input.onPinReleased": "Mache etwas, wenn der Pin losgelassen wird.",
  "input.onPinReleased|block": "wenn Pin %NAME|losgelassen",
  "input.onPinReleased|param|body": "Code, der ausgeführt werden soll, wenn der Pin losgelassen wird",
  "input.onPinReleased|param|name": "der Pin, der losgelassen werden muss (z. B. TouchPin.P0 )",
  "input.onScreenDown": "Hängt Code an, der ausgeführt wird, wenn der Bildschirm nach unten zeigt.",
  "input.onScreenUp": "Hängt Code an, der ausgeführt wird, wenn der Bildschirm nach oben zeigt.",
  "input.onShake": "Hängt Code an, der ausgeführt wird, wenn der mini geschüttelt wird.",
  "input.pinIsPressed": "Ruft den Pin-Zustand (gehalten oder nicht) ab. Die Erdung muss gehalten werden, um den Stromkreis zu schließen.",
  "input.pinIsPressed|block": "Pin %NAME|ist gedrückt",
  "input.pinIsPressed|param|name": "Pin, der verwendet wird, um eine Berührung zu erkennen (z. B.: TouchPin.P0 )",
  "input.rotation": "Die Neigung und Drehung des mini Drehung auf ``X-Achse``oder ``Y-Achse``, in Grad.",
  "input.rotation|block": "Rotation (°)|%NAME",
  "input.runningTime": "Ruft die Anzahl der Millisekunden auf, die seit dem Einschalten vergangen sind.",
  "input.runningTimeMicros": "Ruft die Anzahl der Mikrosekunden ab, die seit dem Einschalten vergangen sind.",
  "input.runningTimeMicros|block": "Laufzeit (micros)",
  "input.runningTime|block": "Laufzeit (ms)",
  "input.setAccelerometerRange": "Legt die Stichprobenbereich des Beschleunigungssensors in Schwerkraft fest.",
  "input.setAccelerometerRange|block": "setze Bewegungsmesser auf|%range",
  "input.setAccelerometerRange|param|range": "Ein Wert, der die maximale Stärke der gemessenen Beschleunigung beschreibt",
  "input.temperature": "Ruft die aktuelle Temperatur in Grad Celsius (°C) ab.",
  "input.temperature|block": "Temperatur (°C)",
  "input|block": "Eingabe",
  "led": "Steuerung des LED-Bildschirms.",
  "led.brightness": "Ruft die Helligkeit des Bildschirms ab, von 0 (aus) bis 255 (volle Helligkeit).",
  "led.brightness|block": "Helligkeit",
  "led.displayMode": "Ruft den aktuellen Bildschirmmodus ab",
  "led.enable": "Schaltet das Display an und aus",
  "led.enable|block": "LED aktivieren %on",
  "led.fadeIn": "Blendet die Bildschirmanzeige ein.",
  "led.fadeOut": "Blendet die Bildschirmhelligkeit aus.",
  "led.plot": "Schalte die angegebene LED mit Hilfe von X- und Y-Koordinaten ein (X ist horizontal, Y ist vertikal). (0,0) ist die obere linke Ecke.",
  "led.plotAll": "Schaltet alle LEDs an",
  "led.plotBarGraph": "Zeigt ein vertikales Balkendiagramm an, basierend auf dem `Wert`und dem `Hoch`-Wert. Wenn `Hoch`0 ist, wird das Diagramm automatisch angepasst.",
  "led.plotBarGraph|param|high": "maximalen Wert. Wenn dieser 0 ist, wird der Maximalwert automatisch angepasst, z.B.: 0",
  "led.plotBarGraph|param|value": "aktueller Wert zum Darstellen",
  "led.plotBrightness": "Schalte die angegebene LED mit bestimmter Helligkeit mit Hilfe von X- und Y-Koordinaten ein (X ist horizontal, Y ist vertikal). (0,0) ist die obere linke Ecke.",
  "led.plotBrightness|block": "Zeichne|x %x|y %y|Helligkeit %brightness",
  "led.plotBrightness|param|brightness": "die Helligkeit von 0 (aus) bis 255 (hell), z. B.: 255",
  "led.plot|block": "Zeichne|x %x|y %y",
  "led.point": "Ruft den An/Aus-Status einer vorgegebenen LED mittels X-/Y-Koordinaten ab. (0,0) ist oben links.",
  "led.point|block": "Punkt|x %x|y %y",
  "led.screenshot": "Macht einen Screenshot vom LED-Bildschirm und gibt ein Bild aus.",
  "led.setBrightness": "Lege die Helligkeit des Bildschirms fest, von 0 (aus) bis 255 (volle Helligkeit).",
  "led.setBrightness|block": "Setze Helligkeit auf %value",
  "led.setBrightness|param|value": "Helligkeitswert, z.B.: 255, 127, 0",
  "led.setDisplayMode": "Legt den Anzeigemodus von Wiedergabe-LEDs zwischen Schwarz und Weiß und Graustufen fest.",
  "led.setDisplayMode|param|mode": "TODO",
  "led.stopAnimation": "Bricht die aktuelle Animation ab und löscht andere ausstehende Animationen.",
  "led.stopAnimation|block": "Halte Animation an",
  "led.toggle": "Schaltet ein bestimmtes Pixel ein",
  "led.toggleAll": "Invertiert die aktuelle LED-Anzeige",
  "led.toggle|block": "schalte um |x %x|y %y",
  "led.unplot": "Schalte die angegebene LED mit x-und y-Koordinaten ab (X ist horizontal, y ist vertikal). (0,0) ist oben links.",
  "led.unplot|block": "schalte Pixel|x %x|y %y aus",
  "led|block": "LED",
  "music": "Erzeugung von Musiktönen.",
  "music.beat": "Gibt die Dauer eines Taktes in Milli-Sekunden aus",
  "music.beat|block": "%fraction|Takt",
  "music.beginMelody": "Beginnt mit der Wiedergabe einer Melodie.\nNoten werden als Zeichenfolgen in diesem Format ausgedrückt: NOTE[octave][:duration]",
  "music.beginMelody|block": "Beginne Melodie %melody=device_builtin_melody| Wiederhole %options",
  "music.beginMelody|param|options": "Melodie-Optionen, einmal/dauerhaft, im Vordergrund/im Hintergrund",
  "music.builtInMelody": "Ruft das Melodie-Array einer eingebauten Melodie ab.",
  "music.builtInMelody|block": "%melody",
  "music.changeTempoBy": "Ändere die Geschwindigkeit um den angegebenen Wert",
  "music.changeTempoBy|block": "ändere die Geschwindigkeit (bpm)|%value",
  "music.changeTempoBy|param|bpm": "Die Änderung in Schlägen pro Minute auf das Tempo, z.B.: 20",
  "music.noteFrequency": "Ruft die Frequenz einer Note ab.",
  "music.onEvent": "Registriert Code, der bei verschiedenen Melodie-Ereignissen ausgeführt wird",
  "music.onEvent|block": "Musik bei %value",
  "music.playTone": "Spielt einen Ton für den angegebenen Zeitraum über Pin ``P0`` ab.",
  "music.playTone|block": "spiele|Note %note=device_note|für %duration=device_beat",
  "music.playTone|param|ms": "Tondauer in Millisekunden (ms)",
  "music.rest": "Ruht (spielt nichts) für eine bestimmte Zeit auf Pin ``P0``.",
  "music.rest|block": "pausiere (ms)|%duration=device_beat",
  "music.rest|param|ms": "Restdauer in Millisekunden (ms)",
  "music.ringTone": "Spielt einen Ton über Pin ``P0``.",
  "music.ringTone|block": "Klingelton (Hz)|%note=device_note",
  "music.setPlayTone": "Legt eine benutzerdefinierte playTone-Funktion zum Abspielen von Melodien fest",
  "music.setTempo": "Legt die Geschwindigkeit auf den angegebenen Wert fest.",
  "music.setTempo|block": "ändere Geschwindigkeit auf (bpm)|%value",
  "music.setTempo|param|bpm": "Die neue Geschwindigkeit in Schlägen pro Minute, z.B.: 120",
  "music.tempo": "Gibt die Geschwindigkeit in Schlägen pro Minute aus. Die Geschwindigkeit ist Schnelligkeit (Bpm = Beats pro Minute), in der Töne abgespielt werden. Je größer der Wert, desto schneller werden die Töne abgespielt.",
  "music.tempo|block": "Geschwindkeit (bpm)",
  "music|block": "Musik",
  "parseInt": "Konvertiert eine Zeichenfolge in eine Ganzzahl.",
  "parseInt|block": "parse %text in eine Ganzzahl",
  "pins.analogPitch|block": "analoge Tonhöhe %frequency|für (ms) %ms",
  "pins.analogPitch|param|frequency": "TODO",
  "pins.analogPitch|param|ms": "TODO",
  "pins.analogReadPin": "Lese den Anschlusswert als Analog aus, d. h. als einen Wert zwischen 0 und 1023.",
  "pins.analogReadPin|block": "analoge Werte von|Pin %name",
  "pins.analogReadPin|param|name": "Pin, auf den geschrieben werden soll (z. B.: AnalogPin.P0)",
  "pins.analogSetPeriod|block": "setze Zeitraum für analogen|Pin %pin|auf (µs)%micros",
  "pins.analogSetPeriod|param|micros": "Zeit in Mikrosekunden. z.B.: 20000",
  "pins.analogSetPeriod|param|name": "analoger Pin, der zeitlich festgelegt werden soll, z. B. AnalogPin.P0",
  "pins.analogSetPitchPin|block": "analog Tonhöhe einstellen von Pin %name",
  "pins.analogSetPitchPin|param|name": "TODO",
  "pins.analogWritePin": "Legt den Wert des Verbinders auf analog fest. Der Wert muss zwischen 0 und 1023 liegen.",
  "pins.analogWritePin|block": "schreibe analogen|Pin %name|auf %value",
  "pins.analogWritePin|param|name": "Name des Pins, auf den geschrieben werden soll, z. B.: AnalogPin.P0",
  "pins.analogWritePin|param|value": "Wert, der auf den Pin geschrieben werden soll, zwischen ``0`` und ``1023`` z.B.: 1023,0",
  "pins.createBuffer": "Erstellt einen Null-initialisierten Zwischenspeicher.",
  "pins.createBuffer|param|size": "Anzahl der Bytes im Zwischenspeicher",
  "pins.digitalReadPin": "Lese den angegebene Pin oder Verbinder als 0 oder 1",
  "pins.digitalReadPin|block": "digitale Werte von|Pin %name",
  "pins.digitalReadPin|param|name": "Pin, von dem gelesen werden soll, z. B. DigitalPin.P0",
  "pins.digitalWritePin": "Setzt einen Pin- oder Verbinder-Wert auf 0 oder 1.",
  "pins.digitalWritePin|block": "schreibe digitalen Wert von|Pin %name|auf %value",
  "pins.digitalWritePin|param|value": "Wert, der auf dem Pin 1 gesetzt werden soll, z.B. 0",
  "pins.i2cReadBuffer": "Lese `Größe`bytes aus einer 7-bit I2C-Adresse.",
  "pins.i2cReadNumber": "Lese eine Nummer aus einer 7-bit I2C-Adresse.",
  "pins.i2cWriteBuffer": "Schreibt Bytes in eine 7-bit I2C-Adresse.",
  "pins.i2cWriteNumber": "Schreibe eine Nummer in eine 7-bit I2C-Adresse.",
  "pins.map|block": "verteile %value|von niedrig %fromLow|von hoch %fromHigh| bis niedrig %toLow|bis hoch %toHigh",
  "pins.map|param|fromHigh": "die obere Grenze des aktuellen Wertebereichs, z.B.: 1023",
  "pins.map|param|fromLow": "die untere Grenze des aktuellen Wertebereichs",
  "pins.map|param|toHigh": "die Obergrenze des Wertezielbereichs, z.B.: 4",
  "pins.map|param|toLow": "die Untergrenze des Wertezielbereichs",
  "pins.map|param|value": "Wert in Bereichen zuordnen",
  "pins.onPulsed|block": "wenn|Pin %pin|gepulst %pulse",
  "pins.onPulsed|param|name": "digitaler Pin, auf dem registriert werden soll, z. B.: DigitalPin.P0",
  "pins.onPulsed|param|pulse": "der Wert des Pulses, z. B.: PulseValue.High",
  "pins.pulseDuration|block": "Impulsdauer (µs)",
  "pins.pulseIn|block": "Impuls in (µs)|Pin %name|mit %value",
  "pins.pulseIn|param|name": "der Pin, der den Puls misst, z. B.: DigitalPin.P0",
  "pins.pulseIn|param|value": "der Wert des Pulses, z. B.: PulseValue.High",
  "pins.servoSetPulse|block": "setze den Puls von Servo an|Pin %value|auf (µs) %micros",
  "pins.servoSetPulse|param|micros": "Impulsdauer in Mikrosekunden, z.B.: 1500",
  "pins.servoSetPulse|param|name": "PIN-Name",
  "pins.servoWritePin|block": "schreibe Servo an|Pin %name|auf %value",
  "pins.servoWritePin|param|name": "Pin, auf den geschrieben werden soll (z. B.: AnalogPin.P0)",
  "pins.servoWritePin|param|value": "Winkel oder Rotationsbeschleunigung, z.B.: 180,90,0",
  "pins.setEvents|block": "Stelle Pin %pin ein|zum Ausgeben von %type|-Ereignissen",
  "pins.setEvents|param|name": "Pin, auf dem der Ereignismodus festgelegt wird, z. B.: DigitalPin.P0",
  "pins.setEvents|param|type": "die Art der von diesem Pin ausgegebenen Ereignisse, z. B.: PinEventType.Edge",
  "pins.setPull|block": "setze Anziehungskraft von|Pin %pin|auf %pull",
  "pins.setPull|param|name": "Pin, auf dem der Pull-Modus aktiviert wird, z. B. DigitalPin.P0",
  "pins.setPull|param|pull": "eine der mbed-Pull-Konfigurationen, z. B. PinPullMode.PullUp",
  "pins.sizeOf": "Ruft die Bytegröße im spezifierten Nummernformat ab.",
  "pins.spiFormat|block": "SPI-Format|Bits %bits|Modus %mode",
  "pins.spiFormat|param|bits": "die Anzahl der Bits, z. B.: 8",
  "pins.spiFormat|param|mode": "der Modus, z. B.: 3",
  "pins.spiFrequency|block": "SPI-Frequenz %frequency",
  "pins.spiFrequency|param|frequency": "die Taktfrequenz, z. B.: 1000000",
  "pins.spiPins|block": "SPI Pins einstellen|MOSI %mosi|MISO %miso|SCK %sck",
  "pins.spiWrite": "Schreibe in den SPI-Slave und gebe die Antwort aus",
  "pins.spiWrite|block": "schreibe %value in SPI",
  "pins.spiWrite|param|value": "Daten, die an den SPI-Slave geschickt werden sollen",
  "pins|block": "Pins",
  "radio": "Daten mithilfe von Funk-Paketen übertragen",
  "radio.Packet.receivedBuffer": "Die Puffernutzdaten, wenn in diesem Paket ein Puffer gesendet wurde,\noder der leere Puffer",
  "radio.Packet.receivedNumber": "Die Nummer-Nutzdaten, wenn in diesem Paket eine Nummer gesendet wurde (über ``sendNumber()`` oder ``sendValue()``) oder 0, wenn das Paket keine Nummer enthielt.",
  "radio.Packet.receivedString": "Die Zeichenfolge-Nutzdaten, wenn in diesem Paket eine Zeichenfolge gesendet wurde (über ``sendString()`` oder ``sendValue()``) oder die leere Zeichenfolge, wenn das Paket keine Zeichenfolge enthielt.",
  "radio.Packet.serial": "Die Seriennummer des Senders des Paketes oder 0, wenn der Sender seine Seriennummer nicht gesendet hat.",
  "radio.Packet.signal": "Indikator für die Empfangsfeldstärke (RSSI) des Paketes.",
  "radio.Packet.time": "Die Systemzeit des Senders des Paketes zu dem Zeitpunkt, an dem das Paket gesendet wurde.",
  "radio.onDataPacketReceived|block": "wenn Datenpaket empfangen",
  "radio.onDataReceived": "Registriert Code der ausgeführt wird, wenn ein Paket über Funk empfangen wird.",
  "radio.onDataReceived|block": "Funk auf empfangenen Daten",
  "radio.onReceivedBufferDeprecated|block": "wenn Datenpaket empfangen",
  "radio.onReceivedBuffer|block": "wenn Datenpaket empfangen",
  "radio.onReceivedNumberDeprecated|block": "wenn Datenpaket empfangen",
  "radio.onReceivedNumber|block": "wenn Datenpaket empfangen",
  "radio.onReceivedStringDeprecated|block": "wenn Datenpaket empfangen",
  "radio.onReceivedString|block": "wenn Datenpaket empfangen",
  "radio.onReceivedValueDeprecated|block": "wenn Datenpaket empfangen",
  "radio.onReceivedValue|block": "wenn Datenpaket empfangen",
  "radio.receiveNumber": "Liest das nächste Paket aus der Funk-Warteschlange und gibt die Paketnummer oder 0 aus, wenn das Paket keine Nummer enthält.",
  "radio.receiveNumber|block": "empfange Nummer über Funk",
  "radio.receiveString": "Liest das nächste Paket aus der Funk-Warteschlange und gibt die enthaltene Zeichenfolge oder die leere Zeichenfolge aus, wenn das Paket keine Zeichenfolge enthält.",
  "radio.receiveString|block": "empfange Zeichenfolge über Funk",
  "radio.receivedBuffer": "Liefert die Zwischenspeicher-Nutzdaten des letzten Pakets, das aus der Funkwarteschlange entnommen wurde (über ``receiveNumber```, ``receiveString``` etc) oder den leeren String, wenn das Paket keine Zeichenkette enthielt.",
  "radio.receivedNumber": "Extrahiert eine Zahl aus dem Inhalt des letzten Datenpakets, welches aus der Warteschlange des Radios (via ``Zahl empfangen``, ``Zeichenkette empfangen``, etc) entnommen wurde oder eine 0, wenn das Paket keine Zahl enthält.",
  "radio.receivedSerial": "Extrahiert die Seriennummer des Calliope mini Senders aus dem Inhalt des letzten Datenpakets, welches aus der Warteschlange des Radios entnommen wurde oder eine 0, wenn der Absender keine Seriennummer gesendet hat.",
  "radio.receivedSignalStrength": "Ruft den empfangenen Signalstärkeindikator (RSSI) aus dem letzten Paket aus der Funk-Warteschlange aus (via ``receiveNumber``, ``receiveString``, etc). Wird im Simulator nicht unterstützt.\nnamespace=radio",
  "radio.receivedSignalStrength|block": "über Funk empfangene Signalstärke",
  "radio.receivedString": "Extrahiert die Zeichenkette aus dem Inhalt des letzten Datenpakets, welches aus der Warteschlange des Radios (via ``Zahl empfangen``, ``Zeichenkette empfangen``, etc) entnommen wurde oder eine leere Zeichenkette, wenn das Paket keine Zeichenkette enthält.",
  "radio.receivedTime": "Extrahiert die Systemzeit des Absenders aus dem Inhalt des letzten Datenpakets, welches aus der Warteschlange des Radios (via ``Zahl empfangen``, ``Zeichenkette empfangen``, etc) entnommen wurde.",
  "radio.sendBuffer": "Sendet einen Zwischenspeicher (bis zu 19 Byte lang) zusammen mit der Geräteseriennummer \nund der Laufzeit an jeden verbundenen micro:bit in der Gruppe.",
  "radio.sendNumber": "Überträgt eine Nummer über Funk an jeden angeschlossenen mini in der Gruppe.",
  "radio.sendNumber|block": "sende Zahl %value über Funk",
  "radio.sendString": "Überträgt eine Zeichenfolge über Funk mit Seriennummer des Geräts und Laufzeit an jeden angeschlossenen mini in der Gruppe.",
  "radio.sendString|block": "sende Zeichenfolge %msg über Funk",
  "radio.sendValue|block": "schicke | Wert %name |=%value über Funk",
  "radio.setGroup": "Legt die Gruppen-ID für Funkverbindungen fest. Ein micro:bit kann gleichzeitig nur auf eine Gruppen-ID hören.",
  "radio.setGroup|block": "setze Gruppe %ID über Funk",
  "radio.setGroup|param|id": "die Gruppen-ID zwischen ``0`` und ``255``, z. B.: 1",
  "radio.setTransmitPower": "Ändere die Ausgabeleistung des Senders auf den angegebenen Wert.",
  "radio.setTransmitPower|block": "lege Übertragungsstärke %power über Funk fest",
  "radio.setTransmitPower|param|power": "ein Wert im Bereich 0..7, wo 0 die niedrigste Leistung und 7 ist ist die höchste. z. B. 7",
  "radio.setTransmitSerialNumber": "Stelle den Dunk so ein, dass die Seriennummer in jeder Nachricht übertragen wird.",
  "radio.setTransmitSerialNumber|block": "übertrage Übertragungs-Seriennummer %transmit über Funk",
  "radio.setTransmitSerialNumber|param|transmit": "Wert, der anzeigt, ob die Seriennummer übertragen wird, z.B. wahr",
  "radio.writeReceivedPacketToSerial": "Schreibt das letzte empfangene Paket als JSON auf Seriell. Sollte in einem ´´onDataPacketReceived``-Callback aufgerufen werden.",
  "radio.writeReceivedPacketToSerial|block": "schreibe das über Funk emfangene Paket auf Seriell",
  "radio.writeValueToSerial": "Liest das nächste Paket aus der Funk-Warteschlange und schreibt dieses als JSON auf Seriell.",
  "radio.writeValueToSerial|block": "schreibe Wert über Funk auf Seriell",
  "radio|block": "radio",
  "serial": "Lesen und Schreiben von Daten über eine serielle Verbindung.",
  "serial.delimiters|block": "%del",
  "serial.onDataReceived": "Registriert ein Ereignis, das ausgeführt wird, wenn einer der Begrenzer erkannt wird.",
  "serial.onDataReceived|block": "seriell|wenn Daten empfangen %delimiters=serial_delimiter_conv",
  "serial.onDataReceived|param|delimiters": "die Zeichen, mit denen die empfangenen Zeichen abgeglichen werden.",
  "serial.readBuffer": "Liest mehrere Zeichen aus dem Empfangszwischenspeicher. Pausiert, bis genügend Zeichen vorhanden sind.",
  "serial.readBuffer|block": "seriell|lese Zwischenspeicher %length",
  "serial.readBuffer|param|length": "Standard-Zwischenspeicherlänge, z. B.: 64",
  "serial.readLine": "Liest eine Textzeile aus der seriellen Schnittstelle.",
  "serial.readLine|block": "seriell|Zeile lesen",
  "serial.readString": "Liest die gepufferten empfangenen Daten als Zeichenfolge",
  "serial.readString|block": "seriell|Zeichenfolge lesen",
  "serial.readUntil|block": "seriell|lesen bis %delimiter=serial_delimiter_conv",
  "serial.readUntil|param|delimiter": "Text-Begrenzung, die die Textblöcke voneinander trennt",
  "serial.redirect": "Legt den seriellen Eingang und Ausgang auf Pins statt der USB-Verbindung.",
  "serial.redirectToUSB": "Lege den seriellen Eingang und Ausgang auf die USB-Verbindung.",
  "serial.redirectToUSB|block": "seriell|Umleitung auf USB",
  "serial.redirect|block": "seriell|umleiten auf|TX %tx|RX %rx|mit Baudrate %rate",
  "serial.redirect|param|rate": "die neue Baudrate, z. B.: 115200",
  "serial.redirect|param|rx": "der neue Empfangs-Pin, z. B. SerialPin.P1",
  "serial.redirect|param|tx": "der neue Übertragungs-Pin, z. B. SerialPin.P0",
  "serial.writeBuffer": "Sendet einen Zwischenspeicher über serielle Verbindung",
  "serial.writeLine|block": "seriell|Zeile ausgeben %text",
  "serial.writeNumber": "Gibt einen numerischen Wert an die serielle Schnittstelle",
  "serial.writeNumber|block": "seriell|Zahl ausgeben %value",
  "serial.writeString|block": "seriell|Zeichenkette ausgeben %text",
  "serial.writeValue|block": "seriell|Wert ausgeben %name|= %value",
  "serial.writeValue|param|name": "Name des Wertestreams, z.B.: x",
  "serial.writeValue|param|value": "Schreiben",
  "serial|block": "seriell",
  "{id:category}Array": "Array",
  "{id:category}Arrays": "Arrays",
  "{id:category}Basic": "Grundlagen",
  "{id:category}Bluetooth": "Bluetooth",
  "{id:category}Boolean": "Boolean",
  "{id:category}Buffer": "Zwischenspeicher",
  "{id:category}Console": "Konsole",
  "{id:category}Control": "Steuerung",
  "{id:category}Devices": "Geräte",
  "{id:category}Game": "Spiel",
  "{id:category}Helpers": "Helfer",
  "{id:category}Image": "Bild",
  "{id:category}Images": "Bilder",
  "{id:category}Input": "Eingabe",
  "{id:category}Led": "LED",
  "{id:category}Math": "Mathematik",
  "{id:category}Music": "Musik",
  "{id:category}Number": "Zahl",
  "{id:category}Pins": "Pins",
  "{id:category}Radio": "Funk",
  "{id:category}Serial": "Serielle",
  "{id:category}String": "Zeichenfolge",
  "{id:category}Text": "Text"
}