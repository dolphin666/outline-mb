{
  "AcceleratorRange.EightG": "L'accélérateur mesure la force jusqu'à une gravité de 8",
  "AcceleratorRange.EightG|block": "8g",
  "AcceleratorRange.FourG": "L'accélérateur mesure la force jusqu'à une gravité de 4",
  "AcceleratorRange.FourG|block": "4g",
  "AcceleratorRange.OneG": "L'accélérateur mesure la force jusqu'à une gravité de 1",
  "AcceleratorRange.OneG|block": "1g",
  "AcceleratorRange.TwoG": "L'accélérateur mesure la force jusqu'à une gravité de 2",
  "AcceleratorRange.TwoG|block": "2g",
  "AnalogPin.P11|block": "P11 (écriture seule)",
  "AnalogPin.P12|block": "P12 (écriture seule)",
  "AnalogPin.P13|block": "P13 (écriture seule)",
  "AnalogPin.P14|block": "P14 (écriture seule)",
  "AnalogPin.P15|block": "P15 (écriture seule)",
  "AnalogPin.P16|block": "P16 (écriture seule)",
  "AnalogPin.P19|block": "P19 (écriture seule)",
  "AnalogPin.P20|block": "P20 (écriture seule)",
  "AnalogPin.P5|block": "P5 (écriture seule)",
  "AnalogPin.P6|block": "P6 (écriture seule)",
  "AnalogPin.P7|block": "P7 (écriture seule)",
  "AnalogPin.P8|block": "P8 (écriture seule)",
  "AnalogPin.P9|block": "P9 (écriture seule)",
  "Array.every": "Vérifie si tous les éléments du tableau passent le test correspondant à la fonction fournie.",
  "Array.every|param|callbackfn": "Une fonction qui accepte jusqu'à deux arguments. La méthode every appelle la fonction callbackfn une fois pour chaque élément du tableau.",
  "Array.filter": "Renvoyez les éléments d'un tableau qui correspondent aux conditions spécifiées dans une fonction callback.",
  "Array.filter|param|callbackfn": "Une fonction qui accepte jusqu'à deux arguments. La méthode de filtre appelle une fonction callbackfn une fois pour chaque élément du tableau.",
  "Array.forEach": "Appelle une fonction de callback pour chaque élément d'un tableau.",
  "Array.forEach|param|callbackfn": "Une fonction qui accepte jusqu'à deux arguments. La méthode forEach appelle la fonction callbackfn une fois pour chaque élément du tableau.",
  "Array.get": "Obtient la valeur à un index en particulier.",
  "Array.get|param|index": "la position de l'objet dans la liste, basée sur zéro. Ex : 0",
  "Array.indexOf": "Renvoyez l'index de la première occurrence d'une valeur dans un tableau.",
  "Array.indexOf|block": "%list| trouver l'index de %value",
  "Array.indexOf|param|fromIndex": "L'index du tableau à partir duquel commencer la recherche. Si fromIndex est omis, la recherche démarre à l'index 0.",
  "Array.indexOf|param|item": "La valeur à localiser dans le tableau.",
  "Array.insertAt": "Insère la valeur à un index en particulier, augmente de 1 la longueur du tableau.",
  "Array.insertAt|block": "%list| insérer à %index| la valeur %value",
  "Array.insertAt|param|index": "la position où insérer la valeur dans la liste, basée sur zéro. Ex : 0",
  "Array.join": "joint tous les éléments d'un tableau dans une chaîne et retourne cette chaîne.",
  "Array.join|param|sep": "le séparateur de chaînes",
  "Array.length": "Obtient ou définit la longueur du tableau. Ce nombre est supérieur de un à l'indice du dernier élément du tableau.",
  "Array.length|block": "longeur de %VALUE",
  "Array.map": "Appelez une fonction callback définie sur chaque élément d'un tableau, et renvoyez un tableau contenant les résultats.",
  "Array.map|param|callbackfn": "Une fonction qui accepte jusqu'à deux arguments. La méthode de cartographie appelle une fonction callbackfn une fois pour chaque élément du tableau.",
  "Array.pop": "Supprimez le dernier élément d'un tableau et renvoyez-le.",
  "Array.pop|block": "récupérer et supprimer la dernière valeur de %list",
  "Array.push": "Ajoute un nouvel élément à un tableau.",
  "Array.push|block": "%list| ajoute la valeur %value| à la fin",
  "Array.reduce": "Appelez la fonction callback spécifiée pour tous les éléments d'un tableau. La valeur de renvoi de la fonction callback correspond au résultat des accumulations, et est fournie sous la forme d'un argument dans le prochain appel de la fonction callback.",
  "Array.reduce|param|callbackfn": "Une fonction qui accepte jusqu'à trois arguments. La méthode de réduction appelle une fonction callbackfn une fois pour chaque élément du tableau.",
  "Array.reduce|param|initialValue": "La valeur initiale pour commencer l'accumulation. Le premier appel de la fonction callbackfn fournit cette valeur sous la forme d'un argument au lieu d'une valeur de tableau.",
  "Array.removeAt": "Supprimez l'élément à un certain index.",
  "Array.removeAt|block": "%list| supprimer la valeur à %index",
  "Array.removeElement": "Supprime la première occurrence d'un objet. Retourne Vrai si l'objet est effectivement supprimé.",
  "Array.reverse": "Inversez les éléments d'un tableau. Le premier élément du tableau devient le dernier, et le dernier élément du tableau devient le premier.",
  "Array.reverse|block": "renverser %list",
  "Array.set": "Conserve une valeur à un index en particulier.",
  "Array.set|param|index": "la position où conserver la valeur dans la liste, basée sur zéro. Ex : 0",
  "Array.shift": "Supprimez le premier élément d'un tableau et renvoyez-le. Cette méthode modifie la longueur du tableau.",
  "Array.shift|block": "récupérer et supprimer la première valeur de %list",
  "Array.slice": "Renvoyez une section d'un tableau.",
  "Array.slice|param|end": "La fin de la portion spécifiée du tableau. Ex : 0",
  "Array.slice|param|start": "Le début de la portion spécifiée du tableau. Ex : 0",
  "Array.some": "Teste si au moins un élément du tableau passe le test implémenté par la fonction fournie.",
  "Array.some|param|callbackfn": "Une fonction qui accepte jusqu'à deux arguments. La méthode some appelle la fonction callbackfn une fois pour chaque élément du tableau.",
  "Array.sort": "Trie les éléments d'un tableau en place et renvoie le tableau. Le tri n'est pas nécessairement stable.",
  "Array.splice": "Supprimez les éléments d'un tableau.",
  "Array.splice|param|deleteCount": "Le nombre d'éléments à supprimer. Ex : 0",
  "Array.splice|param|start": "L'emplacement, basé sur zéro, dans un tableau à partir duquel commencer à supprimer des éléments. Ex : 0",
  "Array.unshift": "Ajoutez un élément au début d'un tableau et renvoyez la nouvelle longueur du tableau.",
  "Array.unshift|block": "%list| insérer %value| au début",
  "Array|block": "Tableau",
  "ArrowNames.East|block": "Est",
  "ArrowNames.NorthEast|block": "Nord-est",
  "ArrowNames.NorthWest|block": "Nord-ouest",
  "ArrowNames.North|block": "Nord",
  "ArrowNames.SouthEast|block": "Sud-est",
  "ArrowNames.SouthWest|block": "Sud-ouest",
  "ArrowNames.South|block": "Sud",
  "ArrowNames.West|block": "Ouest",
  "BaudRate.BaudRate115200|block": "115200",
  "BaudRate.BaudRate1200|block": "1200",
  "BaudRate.BaudRate14400|block": "14400",
  "BaudRate.BaudRate19200|block": "19200",
  "BaudRate.BaudRate2400|block": "2400",
  "BaudRate.BaudRate28800|block": "28800",
  "BaudRate.BaudRate31250|block": "31250",
  "BaudRate.BaudRate38400|block": "38400",
  "BaudRate.BaudRate4800|block": "4800",
  "BaudRate.BaudRate57600|block": "57600",
  "BaudRate.BaudRate9600|block": "9600",
  "BeatFraction.Breve|block": "4",
  "BeatFraction.Double|block": "2",
  "BeatFraction.Eighth|block": "1/8",
  "BeatFraction.Half|block": "1/2",
  "BeatFraction.Quarter|block": "1/4",
  "BeatFraction.Sixteenth|block": "1/16",
  "BeatFraction.Whole|block": "1",
  "Boolean.toString": "Renvoie la représentation d'une chaîne d'un objet.",
  "Buffer.fill": "Remplissez (un fragment) du tampon avec la valeur donnée.",
  "Buffer.getNumber": "Lisez un nombre au format spécifié du tampon.",
  "Buffer.length": "Renvoie la longueur d'un objet du tampon.",
  "Buffer.rotate": "Pivotez le tampon laissé en place.",
  "Buffer.rotate|param|length": "nombre d'éléments du tampon. Si négatif, la longueur est définie comme longueur du tampon moins le début. ex : -1",
  "Buffer.rotate|param|offset": "nombre d'octets à transférer ; utilisez une valeur négative pour transférer à droite",
  "Buffer.rotate|param|start": "décalage de départ du tampon. La valeur par défaut est 0.",
  "Buffer.setNumber": "Écrivez un nombre au format spécifié dans le tampon.",
  "Buffer.shift": "Déplacez le tampon laissé sur place, avec zéro espacement.",
  "Buffer.shift|param|length": "nombre d'éléments du tampon. Si négatif, la longueur est définie comme longueur du tampon moins le début. ex : -1",
  "Buffer.shift|param|offset": "nombre d'octets à transférer ; utilisez une valeur négative pour transférer à droite",
  "Buffer.shift|param|start": "décalage de départ du tampon. La valeur par défaut est 0.",
  "Buffer.slice": "Renvoyez une copie d'un fragment d'un tampon.",
  "Buffer.write": "Écrivez le contenu de `src` à `dstOffset` dans le tampon actuel.",
  "Button.AB|block": "A + B",
  "Delimiters.Colon|block": ":",
  "Delimiters.Comma|block": ",",
  "Delimiters.Dollar|block": "$",
  "Delimiters.Fullstop|block": ".",
  "Delimiters.Hash|block": "#",
  "Delimiters.NewLine|block": "nouvelle ligne",
  "Dimension.Strength|block": "force",
  "Dimension.X|block": "x",
  "Dimension.Y|block": "y",
  "Dimension.Z|block": "z",
  "Direction.Left|block": "gauche",
  "Direction.Right|block": "droite",
  "DisplayMode.BlackAndWhite|block": "noir et blanc",
  "DisplayMode.Greyscale|block": "niveaux de gris",
  "EventCreationMode": "Comment créer l'événement.",
  "EventCreationMode.CreateAndFire": "MicroBitEvent est initialisé, et ses gestionnaires d’événements sont déclenchés immédiatement (ne convient pas pour une utilisation dans les interruptions !).",
  "EventCreationMode.CreateOnly": "MicroBitEvent est initialisé, et aucune autre procédure ne se déroule.",
  "Gesture.EightG": "Déclenché quand un choc 8G est détecté",
  "Gesture.EightG|block": "8g",
  "Gesture.FreeFall": "Déclenché quand la carte tombe !",
  "Gesture.FreeFall|block": "chute libre",
  "Gesture.LogoDown": "Déclenché lorsque le logo est vers le bas et l’écran est vertical",
  "Gesture.LogoDown|block": "logo vers le bas",
  "Gesture.LogoUp": "Déclenché quand le logo est vers le haut et l’écran est vertical",
  "Gesture.LogoUp|block": "logo vers le haut",
  "Gesture.ScreenDown": "Déclenché quand l’écran est vers le haut et la carte est horizontale",
  "Gesture.ScreenDown|block": "écran vers le bas",
  "Gesture.ScreenUp": "Déclenché quand l’écran est vers le bas et la carte est horizontale",
  "Gesture.ScreenUp|block": "écran vers le haut",
  "Gesture.Shake": "Déclenché en cas de secousse",
  "Gesture.Shake|block": "secouer",
  "Gesture.SixG": "Déclenché quand un choc 6G est détecté",
  "Gesture.SixG|block": "6g",
  "Gesture.ThreeG": "Déclenché quand un choc 3G est détecté",
  "Gesture.ThreeG|block": "3g",
  "Gesture.TiltLeft": "Déclenché quand l’écran est orienté à gauche",
  "Gesture.TiltLeft|block": "incliner à gauche",
  "Gesture.TiltRight": "Déclenché quand l’écran est orienté à droite",
  "Gesture.TiltRight|block": "incliner à droite",
  "IconNames.Angry|block": "fâché",
  "IconNames.Asleep|block": "endormi",
  "IconNames.Butterfly|block": "papillon",
  "IconNames.Chessboard|block": "échiquier",
  "IconNames.Confused|block": "confus",
  "IconNames.Cow|block": "vache",
  "IconNames.Diamond|block": "diamant",
  "IconNames.Duck|block": "canard",
  "IconNames.EigthNote|block": "croche",
  "IconNames.Fabulous|block": "fabuleux",
  "IconNames.Ghost|block": "fantôme",
  "IconNames.Giraffe|block": "girafe",
  "IconNames.Happy|block": "heureux",
  "IconNames.Heart|block": "coeur",
  "IconNames.House|block": "maison",
  "IconNames.LeftTriangle|block": "triangle gauche",
  "IconNames.Meh|block": "meh",
  "IconNames.No|block": "non",
  "IconNames.Pitchfork|block": "pitchfork",
  "IconNames.QuarterNote|block": "note",
  "IconNames.Rabbit|block": "lapin",
  "IconNames.Rollerskate|block": "patins à roulette",
  "IconNames.Sad|block": "triste",
  "IconNames.Scissors|block": "ciseaux",
  "IconNames.Silly|block": "bête",
  "IconNames.Skull|block": "crâne",
  "IconNames.SmallDiamond|block": "petit diamant",
  "IconNames.SmallHeart|block": "petit coeur",
  "IconNames.SmallSquare|block": "petit carré",
  "IconNames.Snake|block": "serpent",
  "IconNames.Square|block": "carré",
  "IconNames.StickFigure|block": "bonhomme",
  "IconNames.Surprised|block": "surprise",
  "IconNames.Sword|block": "épée",
  "IconNames.TShirt|block": "t-shirt",
  "IconNames.Target|block": "cible",
  "IconNames.Tortoise|block": "tortue",
  "IconNames.Triangle|block": "triangle",
  "IconNames.Umbrella|block": "parapluie",
  "IconNames.Yes|block": "oui",
  "Image.clear": "Désactive tous les pixels.",
  "Image.height": "Obtient la hauteur en lignes (toujours 5)",
  "Image.pixel": "Obtient l'état du pixel à la position (x,y)",
  "Image.pixelBrightness": "Obtient la luminosité du pixel ([0..255]) à la position donnée",
  "Image.plotFrame": "Dessine à l'écran la ``index``-ème trame d'une image.",
  "Image.plotFrame|param|xOffset": "index de la colonne pour commencer à afficher l'image",
  "Image.plotImage": "Attache l'image à une colonne donnée de l'écran",
  "Image.scrollImage": "Fait défiler une image.",
  "Image.scrollImage|block": "faire défiler l'image %sprite|avec un décalage de %frameoffset|et une intervalle (ms) de %delay",
  "Image.scrollImage|param|frameOffset": "décalage x déplacé à chaque étape de l'animation. Ex : 1, 2, 5",
  "Image.scrollImage|param|interval": "délai entre chaque étape d'une animation en millisecondes. Ex : 200",
  "Image.setPixel": "Définissez un état de pixel à la position ``(x,y)``",
  "Image.setPixelBrightness": "Définit la luminosité d'un pixel spécifique à une position donnée",
  "Image.showImage": "Affiche une trame d'une image au décalage ``x offset``.",
  "Image.showImage|block": "afficher l'image %sprite|au décalage %offset",
  "Image.showImage|param|xOffset": "index de la colonne pour commencer à afficher l'image",
  "Image.width": "Obtient la largeur en colonnes",
  "LedSpriteProperty.Blink|block": "clignotement",
  "LedSpriteProperty.Brightness|block": "luminosité",
  "LedSpriteProperty.Direction|block": "direction",
  "LedSpriteProperty.X|block": "x",
  "LedSpriteProperty.Y|block": "y",
  "Math": "Plus d'opérations complexes avec des nombres.",
  "Math.abs": "Renvoie la valeur absolue d'un nombre (la valeur sans son signe qu'il soit positif ou négatif).\nExemple : La valeur absolue de -5 est 5, la valeur absolue de 5 est 5.",
  "Math.abs|param|x": "Expression numérique dont la valeur absolue est nécessaire.",
  "Math.acos": "Renvoie l'arc cosinus (en radians) d'un nombre",
  "Math.acos|param|x": "Un nombre",
  "Math.asin": "Renvoie l'arc sinus (en radians) d'un nombre",
  "Math.asin|param|x": "Un nombre",
  "Math.atan": "Renvoie l'arc tangente (en radians) d'un nombre",
  "Math.atan2": "Renvoie l'arc tangente du quotient de ses arguments.",
  "Math.atan2|param|x": "Un nombre",
  "Math.atan2|param|y": "Un nombre",
  "Math.atan|param|x": "Un nombre",
  "Math.ceil": "Renvoie le plus petit nombre supérieur ou égal à son argument numérique.",
  "Math.ceil|param|x": "Une expression numérique.",
  "Math.constrain|block": "limiter %value|entre %low|et %high",
  "Math.cos": "Renvoie le cosinus d'un nombre.",
  "Math.cos|param|x": "Un angle en radians",
  "Math.exp": "Renvoie ``e^x``.",
  "Math.exp|param|x": "Un nombre",
  "Math.floor": "Renvoie le plus grand nombre inférieur ou égal à son argument numérique.",
  "Math.floor|param|x": "Une expression numérique.",
  "Math.icos|param|theta": "angle d'entrée de 0-255",
  "Math.idiv": "Renvoie la valeur de la division 32 bit signée et entière de deux nombres.",
  "Math.idiv|param|x": "Le premier nombre",
  "Math.idiv|param|y": "Le second nombre",
  "Math.imul": "Renvoie la valeur de la multiplication 32 bit signée et entière de deux nombres.",
  "Math.imul|param|x": "Le premier nombre",
  "Math.imul|param|y": "Le second nombre",
  "Math.isin|param|theta": "angle d'entrée de 0-255",
  "Math.log": "Renvoie le logarithme népérien (base e) d'un nombre.",
  "Math.log|param|x": "Un nombre",
  "Math.map|block": "projeter %value|de %fromLow|et %fromHigh|à %toLow|et %toHigh",
  "Math.map|param|fromHigh": "limite supérieure de la plage actuelle de la valeur. Ex. : 1023",
  "Math.map|param|fromLow": "limite inférieure de la plage actuelle de la valeur",
  "Math.map|param|toHigh": "limite supérieure de la plage actuelle de la valeur. Ex. : 4",
  "Math.map|param|toLow": "limite inférieure de la plage actuelle de la valeur",
  "Math.map|param|value": "valeur à assigner dans les plages",
  "Math.max": "Renvoie la plus grande des deux expressions numériques soumises.",
  "Math.min": "Renvoie la plus petite des deux expressions numériques soumises.",
  "Math.pow": "Renvoie le nombre initial élevé à la puissance demandée.",
  "Math.pow|param|x": "La valeur de base de l'expression.",
  "Math.pow|param|y": "La valeur de l'exposant de l'expression.",
  "Math.random": "Retourne un nombre pseudoaléatoire entre 0 et 1.",
  "Math.randomBoolean": "Génère une valeur « true » ou « false » au hasard, comme si vous lanciez une pièce de monnaie.",
  "Math.randomBoolean|block": "choisir au hasard vrai ou faux",
  "Math.randomRange": "Renvoie un nombre pseudoaléatoire compris entre min et max inclus. \nSi les deux nombres sont intégraux, le résultat est intégral.",
  "Math.randomRange|block": "choisir au hasard de %min|à %limit",
  "Math.randomRange|param|max": "la limite haute inclusive. Ex : 10",
  "Math.randomRange|param|min": "la limite basse inclusive. Ex : 0",
  "Math.round": "Renvoie l'expression numérique fournie arrondie au nombre le plus proche.",
  "Math.roundWithPrecision": "Arrondit ``x`` à un nombre avec le nombre donné de ``chiffres``",
  "Math.roundWithPrecision|param|digits": "le nombre de chiffres résultants",
  "Math.roundWithPrecision|param|x": "le nombre à arrondir",
  "Math.round|param|x": "La valeur à arrondir au nombre le plus proche.",
  "Math.sign": "Renvoie le signe de x, indiquant si x est positif, négatif ou nul.",
  "Math.sign|param|x": "L'expression dont on veut tester le signe",
  "Math.sin": "Renvoie le sinus d'un nombre.",
  "Math.sin|param|x": "Un angle en radians",
  "Math.sqrt": "Renvoie la racine carrée d'un nombre.",
  "Math.sqrt|param|x": "Une expression numérique.",
  "Math.tan": "Renvoie la tangente d'un nombre.",
  "Math.tan|param|x": "Un angle en radians",
  "Math.trunc": "Renvoie le nombre, avec la décimale tronquée.",
  "Math.trunc|param|x": "Une expression numérique.",
  "Math|block": "Maths",
  "Melodies.BaDing|block": "ba ding",
  "Melodies.Baddy|block": "baddy",
  "Melodies.Birthday|block": "anniversaire",
  "Melodies.Blues|block": "blues",
  "Melodies.Chase|block": "poursuite",
  "Melodies.Dadadadum|block": "dadadum",
  "Melodies.Entertainer|block": "divertissement",
  "Melodies.Funeral|block": "funérailles",
  "Melodies.Funk|block": "funk",
  "Melodies.JumpDown|block": "jump down",
  "Melodies.JumpUp|block": "jump up",
  "Melodies.Nyan|block": "nyan",
  "Melodies.Ode|block": "ode",
  "Melodies.PowerDown|block": "mise hors tension",
  "Melodies.PowerUp|block": "mise sous tension",
  "Melodies.Prelude|block": "prélude",
  "Melodies.Punchline|block": "punchline",
  "Melodies.Ringtone|block": "sonnerie",
  "Melodies.Wawawawaa|block": "wawawawaa",
  "Melodies.Wedding|block": "mariage",
  "MelodyOptions.ForeverInBackground|block": "toujours en fond",
  "MelodyOptions.Forever|block": "toujours",
  "MelodyOptions.OnceInBackground|block": "une fois en fond",
  "MelodyOptions.Once|block": "une fois",
  "MelodyStopOptions.All|block": "tous",
  "MesAlertEvent.DisplayToast|block": "afficher le toast",
  "MesAlertEvent.FindMyPhone|block": "trouver mon téléphone",
  "MesAlertEvent.PlayRingtone|block": "jouer la sonnerie",
  "MesAlertEvent.PlaySound|block": "jouer un son",
  "MesAlertEvent.RingAlarm2|block": "sonner l'alarme 2",
  "MesAlertEvent.RingAlarm3|block": "sonner l'alarme 3",
  "MesAlertEvent.RingAlarm4|block": "sonner l'alarme 4",
  "MesAlertEvent.RingAlarm5|block": "sonner l'alarme 5",
  "MesAlertEvent.RingAlarm6|block": "sonner l'alarme 6",
  "MesAlertEvent.RingAlarm|block": "sonner l'alarme",
  "MesAlertEvent.Vibrate|block": "vibrer",
  "MesCameraEvent.LaunchPhotoMode|block": "lancer le mode photo",
  "MesCameraEvent.LaunchVideoMode|block": "lancer le mode vidéo",
  "MesCameraEvent.StartVideoCapture|block": "démarrer la capture vidéo",
  "MesCameraEvent.StopPhotoMode|block": "arrêter le mode photo",
  "MesCameraEvent.StopVideoCapture|block": "arrêter la capture vidéo",
  "MesCameraEvent.StopVideoMode|block": "arrêter le mode vidéo",
  "MesCameraEvent.TakePhoto|block": "prendre une photo",
  "MesCameraEvent.ToggleFrontRear|block": "basculer avant/arrière",
  "MesDeviceInfo.DisplayOff|block": "écran éteint",
  "MesDeviceInfo.DisplayOn|block": "écran allumé",
  "MesDeviceInfo.IncomingCall|block": "appel entrant",
  "MesDeviceInfo.IncomingMessage|block": "message entrant",
  "MesDeviceInfo.OrientationLandscape|block": "orientation paysage",
  "MesDeviceInfo.OrientationPortrait|block": "orientation portrait",
  "MesDeviceInfo.Shaken|block": "secoué",
  "MesDpadButtonInfo.ADown|block": "A bas",
  "MesDpadButtonInfo.AUp|block": "A haut",
  "MesDpadButtonInfo.BDown|block": "B bas",
  "MesDpadButtonInfo.BUp|block": "B haut",
  "MesDpadButtonInfo.CDown|block": "C bas",
  "MesDpadButtonInfo.CUp|block": "C haut",
  "MesDpadButtonInfo.DDown|block": "D bas",
  "MesDpadButtonInfo.DUp|block": "D haut",
  "MesDpadButtonInfo._1Down|block": "1 bas",
  "MesDpadButtonInfo._1Up|block": "1 haut",
  "MesDpadButtonInfo._2Down|block": "2 bas",
  "MesDpadButtonInfo._2Up|block": "2 haut",
  "MesDpadButtonInfo._3Down|block": "3 bas",
  "MesDpadButtonInfo._3Up|block": "3 haut",
  "MesDpadButtonInfo._4Down|block": "4 bas",
  "MesDpadButtonInfo._4Up|block": "4 haut",
  "MesRemoteControlEvent.forward|block": "avance",
  "MesRemoteControlEvent.nextTrack|block": "piste suivante",
  "MesRemoteControlEvent.pause|block": "pause",
  "MesRemoteControlEvent.play|block": "lire",
  "MesRemoteControlEvent.previousTrack|block": "piste précédente",
  "MesRemoteControlEvent.rewind|block": "rembobiner",
  "MesRemoteControlEvent.stop|block": "stop",
  "MesRemoteControlEvent.volumeDown|block": "diminuer le volume",
  "MesRemoteControlEvent.volumeUp|block": "augmenter le volume",
  "MusicEvent.BackgroundMelodyEnded|block": "mélodie de fond terminée",
  "MusicEvent.BackgroundMelodyNotePlayed|block": "note de mélodie de fond jouée",
  "MusicEvent.BackgroundMelodyPaused|block": "mélodie de fond en pause",
  "MusicEvent.BackgroundMelodyRepeated|block": "mélodie de fond répétée",
  "MusicEvent.BackgroundMelodyResumed|block": "mélodie de fond reprise",
  "MusicEvent.BackgroundMelodyStarted|block": "mélodie de fond démarrée",
  "MusicEvent.MelodyEnded|block": "mélodie terminée",
  "MusicEvent.MelodyNotePlayed|block": "note de la mélodie jouée",
  "MusicEvent.MelodyRepeated|block": "mélodie répétée",
  "MusicEvent.MelodyStarted|block": "mélodie commencée",
  "Note.CSharp3|block": "Do# 3",
  "Note.CSharp4|block": "Do# 4",
  "Note.CSharp5|block": "Do# 5",
  "Note.CSharp|block": "Do#",
  "Note.FSharp3|block": "Fa# 3",
  "Note.FSharp4|block": "Fa# 4",
  "Note.FSharp5|block": "Fa# 5",
  "Note.FSharp|block": "Fa#",
  "Note.GSharp3|block": "Sol# 3",
  "Note.GSharp4|block": "Sol# 4",
  "Note.GSharp5|block": "Sol# 5",
  "Note.GSharp|block": "Sol#",
  "Number.toString": "Renvoie une représentation sous forme de chaîne d'un nombre.",
  "Number|block": "Nombres",
  "PinEvent.Fall|block": "chute",
  "PinEvent.PulseHigh|block": "impulsion haute",
  "PinEvent.PulseLow|block": "impulsion basse",
  "PinEvent.Rise|block": "montée",
  "PinEventType.Edge|block": "front",
  "PinEventType.None|block": "aucun",
  "PinEventType.Pulse|block": "impulsion",
  "PinEventType.Touch|block": "toucher",
  "PinPullMode.PullDown|block": "bas",
  "PinPullMode.PullNone|block": "aucun",
  "PinPullMode.PullUp|block": "haut",
  "PulseValue.High|block": "haut",
  "PulseValue.Low|block": "bas",
  "RadioPacketProperty.SerialNumber|block": "numéro de série",
  "RadioPacketProperty.SignalStrength|block": "force du signal",
  "RadioPacketProperty.Time|block": "temps",
  "Rotation.Pitch|block": "pitch",
  "Rotation.Roll|block": "rouleau",
  "String.charAt": "Renvoyez le caractère à l'index spécifié.",
  "String.charAt|block": "car de %this=text|à %pos",
  "String.charAt|param|index": "La position partant de 0 du caractère désiré. Ex : 0",
  "String.charCodeAt": "Renvoyez la valeur unicode d'un caractère à l'emplacement spécifié.",
  "String.charCodeAt|param|index": "L'index basé sur zéro du caractère désiré. Si aucun caractère n'est à l'index spécifié, NaN est renvoyé.",
  "String.compare": "Affichez la différence d'ordre des caractères de deux chaînes (en codage ASCII).",
  "String.compare|block": "comparer %this=text| à %that",
  "String.compare|param|that": "Chaîne à comparer à la chaîne cible",
  "String.concat": "Renvoie une chaîne qui contient la concaténation de deux chaînes ou plus.",
  "String.concat|param|other": "Le texte à ajouter à la fin du texte. Ex : \"ajoutez-moi !\"",
  "String.fromCharCode": "Construit une chaîne à partir du code ASCII d'un caractère donné.",
  "String.fromCharCode|block": "texte du code de charactère %code",
  "String.includes": "Détermine si une chaîne contient les caractères d'une chaîne spécifiée.",
  "String.includes|param|searchValue": "le texte à trouver",
  "String.includes|param|start": "index du début de la recherche ( optionnel )",
  "String.indexOf": "Retourne la position de la première occurrence d'une valeur spécifiée dans une chaîne.",
  "String.indexOf|param|searchValue": "le texte à trouver",
  "String.indexOf|param|start": "index du début de la recherche ( optionnel )",
  "String.isEmpty": "Renvoie une valeur indiquant si la chaîne est vide",
  "String.length": "Renvoie la longueur d'un objet Chaîne.",
  "String.length|block": "longeur de %VALUE",
  "String.slice": "Renvoyez une sous-chaîne de la chaîne actuelle.",
  "String.substr": "Renvoyez une sous-chaîne de la chaîne actuelle.",
  "String.substr|block": "sous-chaîne de %this=text|de %start|longue de %length",
  "String.substr|param|length": "nombre de caractères à extraire",
  "String.substr|param|start": "index du premier caractère ; peut être négatif en comptant à partir de la fin. Ex : 0",
  "String|block": "Texte",
  "basic": "Permet d’accéder aux fonctionnalités de base de la micro:bit.",
  "basic.clearScreen": "Éteindre toutes les LEDs",
  "basic.clearScreen|block": "efface l’écran",
  "basic.forever": "Répète le code indéfiniment en tâche de fond. A chaque itération, permet aux autres codes de s’exécuter.",
  "basic.forever|block": "toujours",
  "basic.pause": "Pause pendant la durée indiquée en millisecondes",
  "basic.pause|block": "pause (ms) %pause",
  "basic.pause|param|ms": "combien de temps dure une pause, par ex. : 100, 200, 500, 1000, 2000",
  "basic.plotLeds": "Dessine une image sur l’écran de LEDs.",
  "basic.plotLeds|param|leds": "motif de LEDs à allumer/éteindre",
  "basic.showAnimation": "Montre une séquence de motifs LED comme une animation.",
  "basic.showAnimation|param|interval": "temps en millisecondes entre chaque rafraîchissement",
  "basic.showAnimation|param|leds": "motif de LEDs à allumer/éteindre",
  "basic.showArrow": "Affiche une flèche à l'écran",
  "basic.showArrow|block": "montrer la flèche %i=device_arrow",
  "basic.showArrow|param|direction": "la direction de la flèche",
  "basic.showArrow|param|interval": "le temps (millisecondes) d'affichage de l'icône. 600 par défaut.",
  "basic.showIcon": "Affiche l'icône sélectionnée sur l'écran LED",
  "basic.showIcon|block": "montrer l'icône %i",
  "basic.showIcon|param|interval": "le temps (millisecondes) d'affichage de l'icône. 600 par défaut.",
  "basic.showLeds": "Dessine une image sur l’écran de LEDs.",
  "basic.showLeds|block": "montrer LEDs",
  "basic.showLeds|param|interval": "temps de pause en millisecondes après avoir dessiné",
  "basic.showLeds|param|leds": "le motif de LED à allumer/éteindre",
  "basic.showNumber": "Fait défiler un nombre à l'écran. Si le nombre rentre dans l'écran (i.e. un seul chiffre), ne défile pas.",
  "basic.showNumber|block": "montrer|nombre %number",
  "basic.showNumber|param|interval": "vitesse de défilement ; par ex : 150, 100, 200, -100",
  "basic.showString": "Afficher du texte à l’écran, un caractère à la fois. Si la chaîne rentre sur l’écran (c'est-à-dire une seule lettre), ne défile pas.",
  "basic.showString|block": "afficher|texte %text",
  "basic.showString|param|interval": "à quelle vitesse se déplacent les caractères ; par ex. : 150, 100, 200, -100",
  "basic.showString|param|text": "le texte à faire défiler sur l’écran, par exemple : « Bonjour ! »",
  "basic|block": "base",
  "bluetooth": "Prise en charge de services Bluetooth supplémentaires.\n\nPrise en charge de services Bluetooth supplémentaires.",
  "bluetooth.advertiseUid": "Diffuser une UID Eddystone",
  "bluetooth.advertiseUidBuffer": "Diffuser une UID Eddystone",
  "bluetooth.advertiseUidBuffer|param|connectable": "vrai pour garder la possibilité de connexion bluetooth pour les autres services, faux dans le cas contraire.",
  "bluetooth.advertiseUidBuffer|param|nsAndInstance": "tampon 16 octets pour le nom d'espace (octets 0-9) et l'instance (octets 10-15)",
  "bluetooth.advertiseUidBuffer|param|power": "niveau de puissance enter 0 et 7, eg: 7",
  "bluetooth.advertiseUid|block": "bluetooth diffusion de l'UID|nom de l'espace (octets 6-9)%ns|instance (octets 2-6)%instance|avec puissance %power|connectable %connectable",
  "bluetooth.advertiseUid|param|connectable": "vrai pour garder la possibilité de connexion bluetooth pour les autres services, faux dans le cas contraire.",
  "bluetooth.advertiseUid|param|instance": "4 derniers octets de l'uid de l'instance",
  "bluetooth.advertiseUid|param|ns": "4 derniers octets de l'uid du nom d'espace",
  "bluetooth.advertiseUid|param|power": "niveau de puissance enter 0 et 7, eg: 7",
  "bluetooth.advertiseUrl": "Diffuser une URL Eddystone",
  "bluetooth.advertiseUrl|block": "bluetooth diffusion de l'url %url|avec puissance %power|connectable %connectable",
  "bluetooth.advertiseUrl|param|connectable": "vrai pour garder la possibilité de connexion bluetooth pour les autres services, faux dans le cas contraire.",
  "bluetooth.advertiseUrl|param|power": "niveau de puissance enter 0 et 7, eg: 7",
  "bluetooth.advertiseUrl|param|url": "l'url à transmettre. Ne peut pas être plus longue que la longueur d'url eddystone prise en charge. Ex : \"https://makecode.com\"",
  "bluetooth.onBluetoothConnected": "Inscrire le code à exécuter quand le micro:bit est connecté via Bluetooth",
  "bluetooth.onBluetoothConnected|block": "en cas de connexion bluetooth",
  "bluetooth.onBluetoothConnected|param|body": "Code à exécuter quand une connexion Bluetooth est établie",
  "bluetooth.onBluetoothDisconnected": "Inscrire le code à exécuter quand une connexion Bluetooth avec le micro:bit est interrompue",
  "bluetooth.onBluetoothDisconnected|block": "en cas de déconnexion bluetooth",
  "bluetooth.onBluetoothDisconnected|param|body": "Code à exécuter quand une connexion Bluetooth est interrompue",
  "bluetooth.onUartDataReceived": "Enregistre un événement à déclencher quand un des délimiteurs correspond.",
  "bluetooth.onUartDataReceived|block": "bluetooth|si données reçues %delimiters=serial_delimiter_conv",
  "bluetooth.onUartDataReceived|param|delimiters": "les caractères avec lesquels les caractères reçus doivent être associés.",
  "bluetooth.setTransmitPower": "Règle la puissance de transmission en bluetooth entre 0 (minimum) et 7 (maximum).",
  "bluetooth.setTransmitPower|block": "bluetooth puissance de transmission %power",
  "bluetooth.setTransmitPower|param|power": "niveau de puissance entre 0 (minimum) et 7 (maximum). Ex : 7.",
  "bluetooth.startAccelerometerService": "Démarre le service d’accéléromètre Bluetooth",
  "bluetooth.startAccelerometerService|block": "service d’accéléromètre bluetooth",
  "bluetooth.startButtonService": "Démarre le service de bouton Bluetooth",
  "bluetooth.startButtonService|block": "service de bouton bluetooth",
  "bluetooth.startIOPinService": "Démarre le service de broche IO Bluetooth .",
  "bluetooth.startIOPinService|block": "service de broche io bluetooth",
  "bluetooth.startLEDService": "Démarre le service LED Bluetooth",
  "bluetooth.startLEDService|block": "service led bluetooth",
  "bluetooth.startMagnetometerService": "Démarre le service de magnétomètre Bluetooth",
  "bluetooth.startMagnetometerService|block": "service de magnétomètre bluetooth",
  "bluetooth.startTemperatureService": "Démarre le service de température Bluetooth",
  "bluetooth.startTemperatureService|block": "service température bluetooth",
  "bluetooth.startUartService": "Démarre le service UART Bluetooth",
  "bluetooth.startUartService|block": "bluetooth service uart",
  "bluetooth.stopAdvertising": "Arrête la diffusion des points de terminaison Eddystone",
  "bluetooth.stopAdvertising|block": "bluetooth arrêt de la diffusion",
  "bluetooth.uartReadUntil": "Lit le tampon du service UART Bluetooth et renvoie son contenu quand le caractère de délimitation indiqué est rencontré.",
  "bluetooth.uartReadUntil|block": "bluetooth uart|lecture jusqu'à %del=serial_delimiter_conv",
  "bluetooth.uartWriteLine": "Écrit dans le tampon du service UART Bluetooth. Les données sont alors transmises via Bluetooth au périphérique connecté.",
  "bluetooth.uartWriteLine|block": "bluetooth uart|écriture ligne %data",
  "bluetooth.uartWriteNumber": "Imprime une valeur numérique via le port série",
  "bluetooth.uartWriteNumber|block": "bluetooth uart|écriture numéro %value",
  "bluetooth.uartWriteString": "Écrit dans le tampon du service UART Bluetooth. Les données sont alors transmises via Bluetooth au périphérique connecté.",
  "bluetooth.uartWriteString|block": "bluetooth uart|écriture chaîne %data",
  "bluetooth.uartWriteValue": "Écrit une ligne paire ``nom: valeur`` via le port série.",
  "bluetooth.uartWriteValue|block": "bluetooth uart|écriture valeur %name|= %value",
  "bluetooth.uartWriteValue|param|name": "nom du flux de valeurs. Ex : x",
  "bluetooth.uartWriteValue|param|value": "à envoyer",
  "bluetooth|block": "bluetooth",
  "console.addListener": "Ajoute un écouteur pour les messages du journal",
  "console.log": "Écrit une ligne de texte dans la sortie console.",
  "console.logValue": "Écrit un couple nom:valeur sous forme de ligne de texte dans la sortie console.",
  "console.logValue|param|name": "nom du flux de valeur, par exemple: \"x\"",
  "console.logValue|param|value": "à envoyer",
  "console|block": "console",
  "control": "Utilitaires d'exécution et d’événements.",
  "control.assert": "Si la condition est fausse, affiche un message sur la console série et une panique avec code 098.",
  "control.createBuffer": "Crée un nouveau tampon initialisé à zéro.",
  "control.createBuffer|param|size": "nombre d'octets dans la mémoire tampon",
  "control.deviceName": "Récupère un nom convivial pour le périphérique, dérivé de son numéro de série",
  "control.deviceName|block": "nom du périphérique",
  "control.deviceSerialNumber": "Dérive un numéro de série unique et consistant de ce périphérique, à partir des données internes.",
  "control.deviceSerialNumber|block": "numéro de série du périphérique",
  "control.eventSourceId": "Renvoie la valeur d'une constante d'exécution C++",
  "control.eventSourceId|block": "%id",
  "control.eventTimestamp": "Obtient l'horodatage du dernier événement exécuté sur le bus",
  "control.eventTimestamp|block": "horodatage de l'événement",
  "control.eventValue": "Obtient la valeur du dernier événement exécuté sur le bus",
  "control.eventValueId": "Renvoie la valeur d'une constante d'exécution C++",
  "control.eventValueId|block": "%id",
  "control.eventValue|block": "valeur de l'événement",
  "control.inBackground": "Planifie le code qui s’exécute en arrière-plan.",
  "control.inBackground|block": "exécuter en arrière-plan",
  "control.onEvent": "Déclenche un événement dans le bus d'événement.",
  "control.onEvent|block": "lors de l'événement|de %src=control_event_source_id|dont la valeur est %value=control_event_value_id",
  "control.panic": "Afficher un code d'erreur spécifié et arrêter le programme.",
  "control.raiseEvent": "Déclenche un événement dans le bus d'événement.",
  "control.raiseEvent|block": "déclencher l'événement|de la source %src=control_event_source_id|avec la valeur %value=control_event_value_id",
  "control.raiseEvent|param|mode": "définition facultative de comment un événement doit être traité après construction (par défaut : CREATE_AND_FIRE).",
  "control.raiseEvent|param|src": "ID du composant MicroBit générateur de l'événement. Ex. : MICROBIT_ID_BUTTON_A.",
  "control.raiseEvent|param|value": "Code de composant spécifique indiquant la cause de l'événement.",
  "control.reset": "Réinitialise le micro:bit de BBC.",
  "control.reset|block": "remise à zéro",
  "control.runtimeWarning": "Afficher un avertissement dans le simulateur.",
  "control.waitMicros": "Bloque la fibre courante pour le nombre de microsecondes donné",
  "control.waitMicros|block": "attendre (µs) %micros",
  "control.waitMicros|param|micros": "nombre de microsecondes à attendre. par ex. : 4",
  "control|block": "contrôle",
  "devices": "Contrôler un téléphone avec le BBC micro : bit via Bluetooth.",
  "devices.onGamepadButton": "Inscrire le code à exécuter quand le micro:bit reçoit une commande de la manette de jeu associée.",
  "devices.onGamepadButton|block": "à l'activation du bouton de la manette|%NAME|",
  "devices.onGamepadButton|param|body": "code à exécuter quand le bouton est pressé",
  "devices.onGamepadButton|param|name": "nom du bouton",
  "devices.onNotified": "Inscrit le code à exécuter quand l'appareil envoie une notification à propos d'un événement en particulier.",
  "devices.onNotified|block": "en cas de notification|%event",
  "devices.onNotified|param|body": "gestionnaire de code quand l'événement est déclenché",
  "devices.onNotified|param|event": "description de l’événement",
  "devices.onSignalStrengthChanged": "Inscrit le code à exécuter quand l'appareil envoie une notification à propos d'une modification de la force du signal.",
  "devices.onSignalStrengthChanged|block": "au changement de force du signal",
  "devices.onSignalStrengthChanged|param|body": "Code exécuté quand la force du signal change.",
  "devices.raiseAlertTo": "Envoie une commande ``alert`` au périphérique parent.",
  "devices.raiseAlertTo|block": "monter l’alerte à|%property",
  "devices.raiseAlertTo|param|event": "description de l’événement",
  "devices.signalStrength": "Renvoie la force du dernier signal donnée par le périphérique associé.",
  "devices.signalStrength|block": "force du signal",
  "devices.tellCameraTo": "Envoie une commande ``camera`` au périphérique parent.",
  "devices.tellCameraTo|block": "dire à caméra de|%property",
  "devices.tellCameraTo|param|event": "description de l’événement",
  "devices.tellRemoteControlTo": "Envoie une commande ``remote control`` au périphérique parent.",
  "devices.tellRemoteControlTo|block": "dire à télécommande de|%property",
  "devices.tellRemoteControlTo|param|event": "description de l’événement",
  "devices|block": "périphériques",
  "game": "Un moteur de jeu avec une unique LED",
  "game.LedSprite": "Une image-objet de jeu rendue comme LED unique",
  "game.LedSprite.blink": "Signale la durée de ``blink`` d'une image-objet",
  "game.LedSprite.brightness": "Signale la ``brightness` d'une image-objet sur un écran LED",
  "game.LedSprite.change": "Modifie la propriété d'une image-objet",
  "game.LedSprite.changeBlinkBy": "Modifie la durée de ``blink`` par le nombre de millisecondes donné",
  "game.LedSprite.changeBrightnessBy": "Modifie la position ``y`` par le montant donné",
  "game.LedSprite.changeBrightnessBy|param|value": "la valeur pour modifier la luminosité",
  "game.LedSprite.changeDirectionBy": "Modifie la position ``direction`` par le montant donné en tournant vers la droite",
  "game.LedSprite.changeXBy": "Modifie la position ``x`` par le montant donné",
  "game.LedSprite.changeYBy": "Modifie la position ``y`` par le montant donné",
  "game.LedSprite.change|block": "%sprite|modifie %property|de %value",
  "game.LedSprite.change|param|property": "le nom de la propriété à modifier",
  "game.LedSprite.change|param|value": "montant de la modification. Ex : 1",
  "game.LedSprite.delete": "Supprime l'image-objet du moteur de jeu. L'image-objet n'apparaîtra plus à l'écran ou n'interagira plus avec les autres images-objets.",
  "game.LedSprite.delete|block": "supprimer %this",
  "game.LedSprite.direction": "Signale la direction actuelle d'une image-objet",
  "game.LedSprite.get": "Obtient la propriété du sprite",
  "game.LedSprite.get|block": "%sprite|%property",
  "game.LedSprite.get|param|property": "le nom de la propriété à modifier",
  "game.LedSprite.goTo": "Allez à cette position à l'écran",
  "game.LedSprite.ifOnEdgeBounce": "Si touche le bord de l'écran en y faisant face, alors demi-tour.",
  "game.LedSprite.ifOnEdgeBounce|block": "%sprite|si au bord, rebondir",
  "game.LedSprite.isTouching": "Signale vrai si l'image-objet a la même position que l'image-objet spécifiée",
  "game.LedSprite.isTouchingEdge": "Signale vrai si l'image-objet touche un bord",
  "game.LedSprite.isTouchingEdge|block": "%sprite|touche le bord ?",
  "game.LedSprite.isTouching|block": "%sprite|touche %other| ?",
  "game.LedSprite.move": "Déplacez un certain nombre de LED dans la direction actuelle",
  "game.LedSprite.move|block": "%sprite|se déplace de %leds",
  "game.LedSprite.move|param|leds": "nombre de LED à déplacer. Ex : 1, -1",
  "game.LedSprite.off": "Désactive l'image-objet (activée par défaut)",
  "game.LedSprite.on": "Active l'image-objet (activée par défaut)",
  "game.LedSprite.set": "Attribue une propriété à l'image-objet",
  "game.LedSprite.setBlink": "Définit l'intervalle de durée du clignotement en millisecondes.",
  "game.LedSprite.setBrightness": "Définissez la ``brightness`` d'une image-objet",
  "game.LedSprite.setBrightness|param|brightness": "la luminosité de 0 (désactivée) à 255 (activée). Ex : 255.",
  "game.LedSprite.setDirection": "Définissez la direction de l'image-objet actuelle, arrondi au plus proche multiple de 45",
  "game.LedSprite.setX": "Définissez la position ``x`` d'une image-objet",
  "game.LedSprite.setY": "Définissez la position ``y`` d'une image-objet",
  "game.LedSprite.set|block": "%sprite|règle %property|à %value",
  "game.LedSprite.set|param|property": "le nom de la propriété à modifier",
  "game.LedSprite.turn": "Tournez l'image-objet",
  "game.LedSprite.turnLeft": "Tournez à gauche (dans le sens inverse des aiguilles d'une montre)",
  "game.LedSprite.turnRight": "Tournez à droite (dans le sens des aiguilles d'une montre)",
  "game.LedSprite.turn|block": "%sprite|tourne vers la %direction|de (°) %degrees",
  "game.LedSprite.turn|param|degrees": "angle du virage en degrés. Ex : 45, 90, 180, 135",
  "game.LedSprite.turn|param|direction": "gauche ou droite",
  "game.LedSprite.x": "Signale la position ``x`` d'une image-objet sur l'écran LED",
  "game.LedSprite.y": "Signale la position ``y`` d'une image-objet sur l'écran LED",
  "game.addLife": "Ajoute des points de vie à la vie actuelle",
  "game.addLife|block": "ajoute de la vie %lives",
  "game.addScore": "Ajoute des points au le score actuel et affiche une animation",
  "game.addScore|block": "changer le score par|%points",
  "game.addScore|param|points": "nombre de points à changer, par ex. : 1",
  "game.createSprite": "Crée un nouveau sprite LED pointant vers la droite.",
  "game.createSprite|block": "créer un sprite à|x: %x|y: %y",
  "game.createSprite|param|x": "coordonnée horizontale du sprite. Ex. : 2",
  "game.createSprite|param|y": "coordonnée verticale du sprite. Ex. : 2",
  "game.currentTime": "Obtient le temps, en millisecondes, restant (depuis 'commencemment du compte à rebours') ou le temps actuel (depuis le démarrage du périphérique ou 'le démarrage du chronomètre') .",
  "game.gameOver": "Affiche une animation de fin de jeu et le score.",
  "game.gameOver|block": "fin du jeu",
  "game.invalidSprite": "Obtient un sprite non valide ; utilisé pour initialiser les locaux.",
  "game.isPaused": "Indique si le rendu du jeu est en pause pour permettre d'autres animations",
  "game.isRunning": "Obtient la valeur indiquant si le jeu est encore en cours d'exécution. Renvoie 'faux' si le jeu est terminé.",
  "game.level": "Obtient le niveau actuel",
  "game.levelUp": "Incrémente le niveau et affiche un message.",
  "game.life": "Obtient la vie actuelle",
  "game.pause": "Met en pause le rendu du jeu par le moteur pour permettre d'autres animations",
  "game.pause|block": "pause",
  "game.removeLife": "Supprime de la vie",
  "game.removeLife|block": "supprime de la vie %life",
  "game.resume": "Reprend le rendu du jeu par le moteur",
  "game.resume|block": "reprendre",
  "game.score": "Obtient le score actuel",
  "game.score|block": "score",
  "game.setLife": "Définit la valeur actuelle de la vie",
  "game.setLife|block": "définir la %valeur de la vie",
  "game.setScore": "Définit la valeur du score actuel",
  "game.setScore|block": "définir le score à %points",
  "game.setScore|param|value": "nouvelle valeur du score.",
  "game.showScore": "Affiche le score à l'écran.",
  "game.startCountdown": "Affiche une animation, puis démarre un compte à rebours avant de déclencher la fin de la partie dès que 0 est atteint",
  "game.startCountdown|block": "commencer compte à rebours|(ms) %duration",
  "game.startCountdown|param|ms": "durée du compte à rebours en millisecondes, par ex. : 10000",
  "game.startStopwatch": "Démarre un chronomètre. `temps actuel` renverra le temps écoulé.",
  "game|block": "jeu",
  "images": "Création, manipulation et affichage d’images LED.",
  "images.arrowImage|block": "image flèche %i=device_arrow",
  "images.arrowNumber|block": "%arrow",
  "images.createBigImage": "Crée une image à partir de 2 images.",
  "images.createBigImage|block": "créer grande image",
  "images.createImage": "Crée une image qui s’adapte aux dimensions de l’écran LED.",
  "images.createImage|block": "créer image",
  "images.iconImage|block": "image d'icône %i",
  "images|block": "images",
  "input": "Événements et des données provenant de capteurs",
  "input.acceleration": "Obtient la valeur de l'accélération en milli-g (quand la carte est à plat avec l'écran vers le haut, x=0, y=0 et z=-1024)",
  "input.acceleration|block": "accélération (mg) |%NAME",
  "input.buttonIsPressed": "Obtient l'état du bouton (appuyé ou non) pour 'A' et' B'.",
  "input.buttonIsPressed|block": "bouton|%NAME|est pressé",
  "input.buttonIsPressed|param|button": "Le bouton pour demander la requête. Ex. : Button.A",
  "input.calibrate": "Obsolète, utilisez input.calibrateCompass à la place.",
  "input.calibrateCompass|block": "calibrer la boussole",
  "input.compassHeading": "Obtient la direction actuelle du compas en degrés.",
  "input.compassHeading|block": "direction de la boussole (°)",
  "input.lightLevel": "Lit le niveau de lumière appliqué à l'écran LED de ``0`` (sombre) à ``255`` lumineux.",
  "input.lightLevel|block": "niveau d’intensité lumineuse",
  "input.magneticForce": "Obtient la valeur l'induction magnétique en 'micro-Teslas' ('µT'). Cette fonction n’est pas supportée par le simulateur.",
  "input.magneticForce|block": "force magnétique (µT) |%NAME",
  "input.onButtonPressed": "Faire quelque chose quand un bouton (A, B ou A+B) est appuyé et relâché.",
  "input.onButtonPressed|block": "lorsque le bouton|%NAME|est pressé",
  "input.onGesture": "Faire quelque chose lorsque lorsqu’un geste est fait (par exemple secouer le micro:bit).",
  "input.onGesture|block": "lorsque|%NAME",
  "input.onGesture|param|gesture": "le type de mouvement à suivre. Ex. : Gesture.Shake",
  "input.onLogoDown": "Associe le code à exécuter quand le logo est orienté vers le bas et que la carte est verticale.",
  "input.onLogoUp": "Associe le code à exécuter quand le logo est orienté vers le haut et que la carte est verticale.",
  "input.onPinPressed": "Faire quelque chose lorsque qu'une broche est pressée puis relâchée de nouveau (tout en touchant la broche GND).",
  "input.onPinPressed|block": "lorsque la broche %name|est activée",
  "input.onPinPressed|param|body": "code à exécuter lorsque la broche est enfoncée",
  "input.onPinPressed|param|name": "broche à presser. Ex. : TouchPin.P0",
  "input.onPinReleased": "Faire quelque chose quand une broche est relâchée.",
  "input.onPinReleased|block": "lorsque la broche %NAME|est relachée",
  "input.onPinReleased|param|body": "le code à exécuter lorsque la broche est relâchée",
  "input.onPinReleased|param|name": "broche à relâcher. Ex. : TouchPin.P0",
  "input.onScreenDown": "Associe le code à exécuter quand l'écran est orienté vers le bas.",
  "input.onScreenUp": "Associe le code à exécuter quand l'écran est orienté vers le haut.",
  "input.onShake": "Associe le code à exécuter quand l'appareil est secoué.",
  "input.pinIsPressed": "Obtient l’état de la broche (pressée ou non). Nécessite de se connecter à la masse pour fermer le circuit.",
  "input.pinIsPressed|block": "broche %NAME| est pressée",
  "input.pinIsPressed|param|name": "broche utilisée pour détecter le contact. Ex. : TouchPin.P0",
  "input.rotation": "L'inclinaison ou le roulement de l'appareil, rotation autour de l'``axe X`` ou de l'``axe Y``, en degrés.",
  "input.rotation|block": "rotation (°)|%NAME",
  "input.runningTime": "Obtient le nombre de millisecondes écoulées depuis la mise en route.",
  "input.runningTimeMicros": "Obtient le nombre de microsecondes écoulées depuis la mise en route.",
  "input.runningTimeMicros|block": "temps d'exécution (micros)",
  "input.runningTime|block": "temps d’exécution (ms)",
  "input.setAccelerometerRange": "Définit la plage de l'accéléromètre en g.",
  "input.setAccelerometerRange|block": "spécifier|la gamme de l'acceleromètre %range",
  "input.setAccelerometerRange|param|range": "Une valeur qui décrit la force maximale d'accélération mesurée.",
  "input.temperature": "Obtient la température en degrés Celsius (°C).",
  "input.temperature|block": "température (° C)",
  "input|block": "entrées",
  "led": "Contrôle de l’écran LED.",
  "led.brightness": "Obtient la luminosité de l'écran comprise entre 0 (éteint) à 255 (luminosité au maximum).",
  "led.brightness|block": "luminosité",
  "led.displayMode": "Obtient le mode d'affichage actuel",
  "led.enable": "Active ou désactive l’affichage",
  "led.enable|block": "activer LED %on",
  "led.fadeIn": "Augmentation de la luminosité sous forme de fondu",
  "led.fadeOut": "Réduction de la luminosité sous forme de fondu",
  "led.plot": "Allume la LED spécifiée en utilisant des coordonnées de type (x, y) ( x est horizontal, y est vertical). (0, 0) est la LED tout en haut à gauche.",
  "led.plotAll": "Allume toutes les LEDS",
  "led.plotBarGraph": "Affiche un graphique à barres verticale basée sur les valeurs 'valeur' et 'hauteur'.\nSi 'hauteur' est à 0, le graphique est automatiquement ajusté.",
  "led.plotBarGraph|block": "tracer le graphe de %value|à %high",
  "led.plotBarGraph|param|high": "valeur maximum. Si 0, la valeur maximum est automatiquement ajustée. Ex. : 0",
  "led.plotBarGraph|param|value": "valeur actuelle à tracer",
  "led.plotBrightness": "Allume la LED spécifiée avec la luminosité spécifiée en utilisant des coordonnées de type (x, y) (x est horizontal, y est vertical). (0,0) est la LED tout en haut à gauche.",
  "led.plotBrightness|block": "tracer|x %x|y %y|luminosité %brightness",
  "led.plotBrightness|param|brightness": "la luminosité de 0 (désactivée) à 255 (lumineux). Ex : 255",
  "led.plot|block": "allumer|x %x|y %y",
  "led.point": "Obtient l'état activée/désactivée de la LED spécifiée grâce à ses coordonnées (x, y). \n(0, 0) désigne celle tout en haut et à gauche.",
  "led.point|block": "allumée à|x %x|y %y",
  "led.screenshot": "Prend une capture d'écran des LED allumées et renvoie une image.",
  "led.setBrightness": "Règle la luminosité de l'écran sur 0 (éteint) à 255 (luminosité au maximum).",
  "led.setBrightness|block": "spécifier la luminosité %value",
  "led.setBrightness|param|value": "valeur de la luminosité, par ex. : 255, 127, 0",
  "led.setDisplayMode": "Règle le mode d’affichage entre noir et blanc et niveaux de gris pour le rendu des LED.",
  "led.setDisplayMode|block": "définir le mode d'affichage $mode",
  "led.setDisplayMode|param|mode": "mode d'affichage dans lequel l'écran fonctionne",
  "led.stopAnimation": "Annule l'animation en cours et supprime toutes les animations en attente.",
  "led.stopAnimation|block": "arrêter l’animation",
  "led.toggle": "Active/désactive un pixel en particulier",
  "led.toggleAll": "Inverse l'état de toutes les LED",
  "led.toggle|block": "activer/désactiver|x %x|y %y",
  "led.unplot": "Éteint la LED désignée par les coordonnées (x, y) (x est horizontal, y est vertical). (0, 0) désigne celle tout en haut à gauche.",
  "led.unplot|block": "éteindre|x %x|y %y",
  "led|block": "LED",
  "msgpack.packNumberArray": "Place un tableau de nombres dans une mémoire tampon.",
  "msgpack|block": "msgpack",
  "music": "Génération de tonalités musicales.",
  "music.beat": "Renvoie la durée d'un temps en millisecondes",
  "music.beat|block": "%fraction|temps",
  "music.beginMelody": "Démarre une mélodie.\nLes notes sont exprimées sous la forme d'une chaîne de caractères au format suivant : NOTE[octave][:durée]",
  "music.beginMelody|block": "démarrer la mélodie %melody=device_builtin_melody| répétition %options",
  "music.beginMelody|param|melodyArray": "le tableau de mélodie à jouer",
  "music.beginMelody|param|options": "options de mélodie, une fois / définitivement, au premier plan / en arrière plan",
  "music.builtInMelody": "Obtient le tableau d'une mélodie intégrée.",
  "music.builtInMelody|block": "%melody",
  "music.changeTempoBy": "Modifie le tempo de la valeur spécifiée",
  "music.changeTempoBy|block": "changer le tempo par (bpm) | %value",
  "music.changeTempoBy|param|bpm": "La modification au tempo, en temps par minute. Ex. : 20",
  "music.noteFrequency": "Obtient la fréquence d'une note.",
  "music.noteFrequency|block": "%note",
  "music.noteFrequency|param|name": "le nom de la note en standard US. Ex. : Note.C (A = La, B = Si, C = Do, [...], G = Sol)",
  "music.onEvent": "Enregistrer le code à exécuter sur divers événements mélodiques",
  "music.onEvent|block": "musique sur %value",
  "music.playTone": "Joue un son par la broche ``P0`` pendant la durée donnée.",
  "music.playTone|block": "jouer|ton %note=device_note|pendant %duration=device_beat",
  "music.playTone|param|frequency": "Fréquence de la note en Hertz (HZ) (ex. : La = 440Hz)",
  "music.playTone|param|ms": "durée du son en millisecondes (ms)",
  "music.rest": "Repose (joue rien) pendant une durée spécifiée via broche '' P0''.",
  "music.rest|block": "repos (ms) |%duration=device_beat",
  "music.rest|param|ms": "durée de la pause en millisecondes (ms)",
  "music.ringTone": "Joue un son par la broche ``P0``.",
  "music.ringTone|block": "buzz (Hz)|%note=device_note",
  "music.ringTone|param|frequency": "Fréquence de la note en Hertz (HZ) (ex. : La = 440Hz)",
  "music.setPlayTone": "Définit une fonction playTone personnalisée pour jouer des mélodies",
  "music.setTempo": "Règle le tempo sur la valeur spécifiée",
  "music.setTempo|block": "régler le tempo à (bpm)|%value",
  "music.setTempo|param|bpm": "Le nouveau tempo, en battements par minute. Ex. : 120",
  "music.tempo": "Renvoie le tempo en battements par minute. Le tempo est la vitesse (bpm = battements par minute) à laquelle une note est jouée. Plus le tempo est élevé, plus la note sera jouée vite.",
  "music.tempo|block": "tempo (bpm)",
  "music|block": "musique",
  "parseFloat": "Convertit une chaîne en nombre.",
  "parseFloat|block": "convertir en nombre %text",
  "parseInt": "Convertissez une chaîne en entier.",
  "parseInt|block": "analyser en entier %text",
  "pins.P0": "Broche P0",
  "pins.P1": "Broche P1",
  "pins.P10": "Broche P10",
  "pins.P11": "Broche P3",
  "pins.P12": "Broche P12",
  "pins.P13": "Broche P13",
  "pins.P14": "Broche P14",
  "pins.P15": "Broche P15",
  "pins.P16": "Broche P16",
  "pins.P19": "Broche P19",
  "pins.P2": "Broche P2",
  "pins.P20": "Broche P19",
  "pins.P3": "Broche P3",
  "pins.P4": "Broche P4",
  "pins.P5": "Broche P5",
  "pins.P6": "Broche P6",
  "pins.P7": "Broche P7",
  "pins.P8": "Broche P8",
  "pins.P9": "Broche P9",
  "pins.analogPitch|block": "analogique hauteur %frequency|pour (ms) %ms",
  "pins.analogPitch|param|frequency": "TODO",
  "pins.analogPitch|param|ms": "TODO",
  "pins.analogReadPin": "Lit la valeur du connecteur comme analogique, c'est à dire comme une valeur comprise entre 0 et 1023.",
  "pins.analogReadPin|block": "lire|la broche analogique %name",
  "pins.analogReadPin|param|name": "broche sur laquelle envoyer une valeur. Ex. : AnalogPin.P0",
  "pins.analogSetPeriod|block": "régler la période|de la broche %pin|à (µs)%micros",
  "pins.analogSetPeriod|param|micros": "période en microsecondes. Ex. : 20 000",
  "pins.analogSetPeriod|param|name": "broche analogique sur laquelle régler la période. Ex. : AnalogPin.P0",
  "pins.analogSetPitchPin|block": "analogique régler la broche de hauteur %name",
  "pins.analogSetPitchPin|param|name": "TODO",
  "pins.analogWritePin": "Règle la valeur du connecteur sur analogique. La valeur doit être comprise entre 0 et 1023.",
  "pins.analogWritePin|block": "écrire sur|la broche %name|la valeur %value",
  "pins.analogWritePin|param|name": "nom de la broche sur laquelle envoyer une valeur. Ex. : AnalogPin.P0",
  "pins.analogWritePin|param|value": "valeur à envoyer à la broche, comprise entre ``0`` et``1023``. Ex. : 1023,0",
  "pins.createBuffer": "Créer un nouveau tampon initialisé à zéro.",
  "pins.createBufferFromArray": "Crée un nouveau tampon initialisé avec les octets d'un tableau donné.",
  "pins.createBufferFromArray|param|bytes": "données à initialiser avec",
  "pins.createBuffer|param|size": "nombre d'octets dans le tampon",
  "pins.digitalReadPin": "Lit la broche ou le connecteur indiqué comme 0 ou 1",
  "pins.digitalReadPin|block": "lire la broche numérique|%name",
  "pins.digitalReadPin|param|name": "broche à lire. Ex. : DigitalPin.P0",
  "pins.digitalWritePin": "Règle la valeur d'une broche ou d'un connecteur sur 0 ou 1.",
  "pins.digitalWritePin|block": "écrire sur |la broche %name|la valeur %value",
  "pins.digitalWritePin|param|name": "broche sur laquelle envoyer une valeur. Ex. : DigitalPin.P0",
  "pins.digitalWritePin|param|value": "valeur à définir sur la broche. Ex. : 1 ou 0",
  "pins.i2cReadBuffer": "Lire les octets `taille` depuis une `adresse` 7-bit I2C.",
  "pins.i2cReadNumber": "Lit un nombre provenant d'une adresse I2C en 7-bit",
  "pins.i2cReadNumber|block": "i2c lire un nombre|à l’adresse %address|au format %format|répété %repeat",
  "pins.i2cWriteBuffer": "Écrire des octets dans une `adresse` 7-bit I2C.",
  "pins.i2cWriteNumber": "Écrit un nombre à une adresse I2C en 7-bit.",
  "pins.i2cWriteNumber|block": "i2c écrire un nombre|à l’adresse %address|avec la valeur %value|au format %format|répété %repeat",
  "pins.map|block": "cartographier %value|de bas %fromLow|de haut %fromHigh|à bas %toLow|à haut %toHigh",
  "pins.map|param|fromHigh": "limite supérieure de la plage actuelle de la valeur. Ex. : 1023",
  "pins.map|param|fromLow": "limite inférieure de la plage actuelle de la valeur",
  "pins.map|param|toHigh": "limite supérieure de la plage actuelle de la valeur. Ex. : 4",
  "pins.map|param|toLow": "limite inférieure de la plage actuelle de la valeur",
  "pins.map|param|value": "valeur à assigner dans les plages",
  "pins.onPulsed|block": "sur|la broche %pin|front %pulse",
  "pins.onPulsed|param|name": "broche numérique à laquelle s'enregistrer. Ex. : DigitalPin.P0",
  "pins.onPulsed|param|pulse": "valeur de l'impulsion. Ex. : PulseValue.High",
  "pins.pulseDuration|block": "durée de l’impulsion (µs)",
  "pins.pulseIn|block": "impulsion dans (µs)|broche %name|pulsation %value",
  "pins.pulseIn|param|name": "broche utilisée pour mesurer l'impulsion. Ex. : DigitalPin.P0",
  "pins.pulseIn|param|value": "valeur de l'impulsion. Ex. : PulseValue.High",
  "pins.servoSetPulse|block": "régler impulsion servo|sur la broche %value|à (µs) %micros",
  "pins.servoSetPulse|param|micros": "durée de l'impulsion en microsecondes (ms). Ex. : 1500",
  "pins.servoSetPulse|param|name": "nom de la broche",
  "pins.servoWritePin|block": "régler position servo|broche %name|à %value",
  "pins.servoWritePin|param|name": "broche sur laquelle envoyer une valeur. Ex. : AnalogPin.P0",
  "pins.servoWritePin|param|value": "angle ou vitesse de rotation. Ex. : 180, 90, 0",
  "pins.setEvents|block": "régler la broche %pin|pour émettre %type|événements",
  "pins.setEvents|param|name": "broche pour activer le mode événement. Ex : DigitalPin.P0",
  "pins.setEvents|param|type": "le type d'événement que cette broche émet. Ex : PinEventType.Edge",
  "pins.setPull|block": "régler le levier|en broche %pin|sur %pull",
  "pins.setPull|param|name": "broche dont il faut activer le mode traction. Ec. : DigitalPin.P0",
  "pins.setPull|param|pull": "une des configurations de traction mbed. Ex. : PinPullMode.PullUp",
  "pins.sizeOf": "Obtient la taille en octets du format numérique spécifié.",
  "pins.spiFormat|block": "format spi |bits %bits |mode %mode",
  "pins.spiFormat|param|bits": "le nombre de bits. Ex : 8",
  "pins.spiFormat|param|mode": "le mode. Ex : 3",
  "pins.spiFrequency|block": "fréquence spi %frequency",
  "pins.spiFrequency|param|frequency": "la fréquence de l'horloge. Ex 1000000",
  "pins.spiPins|block": "régler les broches spi|MOSI %mosi|MISO %miso|SCK %sck",
  "pins.spiWrite": "Écrivez sur l'esclave SPI et renvoyez une réponse",
  "pins.spiWrite|block": "écrire sur spi %value",
  "pins.spiWrite|param|value": "Données à envoyer à l'esclave SPI",
  "pins|block": "broches",
  "radio": "Communique les données via des paquets radio",
  "radio.Packet.receivedBuffer": "La charge du tampon si un tampon est envoyé dans ce paquet\nou le tampon vide",
  "radio.Packet.receivedNumber": "La charge utile de numéro si un numéro a été envoyé dans ce paquet (via ``sendNumber()`` ou ``sendValue()``)\nou 0 si ce paquet ne contient pas de numéro.",
  "radio.Packet.receivedString": "La charge utile de chaîne si une chaîne a été envoyée dans ce paquet (via ``sendString()`` ou ``sendValue()``)\nou la chaîne vide si ce paquet ne contenait pas de chaîne.",
  "radio.Packet.serial": "Le numéro de série de l'expéditeur du paquet ou 0 si l'expéditeur n'a pas envoyé de numéro de série.",
  "radio.Packet.signal": "L'indicateur de force du signal reçu (RSSI) du paquet.",
  "radio.Packet.time": "L'heure du système de l'expéditeur du paquet au moment de l'envoi du paquet.",
  "radio._packetProperty": "Obtient une propriété du paquet.",
  "radio._packetProperty|block": "%note",
  "radio._packetProperty|param|type": "le type de propriété de paquet, par exemple: PacketProperty.time",
  "radio.onDataPacketReceived|block": "Quand une donnée est reçue par radio",
  "radio.onDataReceived": "Enregistre le code à exécuter quand un paquet est reçu par radio.",
  "radio.onDataReceived|block": "Quand une donnée est reçue par radio",
  "radio.onReceivedBuffer": "Enregistre le code à exécuter quand la radio reçoit un tampon.",
  "radio.onReceivedBufferDeprecated|block": "Quand une donnée est reçue par onde radio",
  "radio.onReceivedBuffer|block": "Quand une donnée est reçue par radio",
  "radio.onReceivedMessage|block": "lorsque $msg est reçu par radio",
  "radio.onReceivedNumber": "Enregistre le code à exécuter quand la radio reçoit un nombre.",
  "radio.onReceivedNumberDeprecated|block": "Quand une donnée est reçue par onde radio",
  "radio.onReceivedNumber|block": "Quand une donnée est reçue par radio",
  "radio.onReceivedString": "Enregistre le code à exécuter quand la radio reçoit une chaîne de caractères.",
  "radio.onReceivedStringDeprecated|block": "Quand une donnée est reçue par onde radio",
  "radio.onReceivedString|block": "Quand une donnée est reçue par radio",
  "radio.onReceivedValue": "Enregistre le code à exécuter quand la radio reçoit un nom / une valeur.",
  "radio.onReceivedValueDeprecated|block": "Quand une donnée est reçue par onde radio",
  "radio.onReceivedValue|block": "Quand une donnée est reçue par radio",
  "radio.raiseEvent": "Envoie un événement par radio aux périphériques avoisinants",
  "radio.raiseEvent|block": "radio déclencher l'événement|de la source %src=control_event_source_id|avec la valeur %value=control_event_value_id",
  "radio.receiveNumber": "Lit le prochain paquet d'une file d'attente radio et renvoie la charge utile du numéro\ndu paquet ou 0 si le paquet ne contient pas de numéro.",
  "radio.receiveNumber|block": "Réception d'un nombre par onde radio",
  "radio.receiveString": "Lit le prochain paquet d'une file d'attente radio et renvoie la charge utile de la chaîne\ndu paquet ou une chaîne vide si le paquet ne contient pas de chaîne.",
  "radio.receiveString|block": "réception d'une chaîne de caractère par onde radio",
  "radio.receivedBuffer": "Renvoie la charge du tampon du dernier paquet pris dans la file d'attente de la radio\n(via ``receiveNumber``, ``receiveString``, etc.) ou la chaîne vide si ce\npaquet ne contenait aucune chaîne.",
  "radio.receivedNumber": "Renvoie la charge du numéro du dernier paquet pris dans la file d'attente de la radio\n(via ``receiveNumber``, ``receiveString``, etc.) ou 0 si ce paquet ne contenait\naucun numéro.",
  "radio.receivedPacket": "Retourne les propriétés du dernier paquet radio reçu.",
  "radio.receivedPacket|block": "paquet reçu %type=radio_packet_property",
  "radio.receivedPacket|param|type": "le type de propriété à récupérer du dernier paquet",
  "radio.receivedSerial": "Renvoie le numéro de série de l'expéditeur micro:bit du dernier paquet\npris dans la file d'attente de la radio (via ``receiveNumber``, ``receiveString``, etc.)\nou 0 si ce paquet ne contenait aucun numéro de série.",
  "radio.receivedSignalStrength": "Obtient l'indicateur de la force du signal reçu (RSSI) du dernier paquet pris dans la file d'attente radio (via 'receiveNumber', 'receiveString', etc.). Non pris en charge par le simulateur.\nnamespace=radio",
  "radio.receivedSignalStrength|block": "force force du signal reçu",
  "radio.receivedString": "Renvoie la charge de la chaîne du dernier paquet pris dans la file d'attente de la radio\n(via ``receiveNumber``, ``receiveString``, etc.) ou la chaîne vide si ce\npaquet ne contenait aucune chaîne.",
  "radio.receivedTime": "Renvoie l'heure du système de l'expéditeur micro:bit au moment où il a envoyé\nle dernier paquet pris dans la file d'attente de la radio (via ``receiveNumber``,\n``receiveString``, etc.).",
  "radio.sendBuffer": "Diffuse un tampon (taille max : 19 octets) en même temps que le numéro de série\ndu périphérique et le temps d'exécution de tout micro:bit connecté au groupe.",
  "radio.sendMessage|block": "envoyer $msg par radio",
  "radio.sendNumber": "Diffuse un nombre par radio à tout micro:bit connecté au groupe.",
  "radio.sendNumber|block": "envoyer le nombre %value par radio",
  "radio.sendString": "Diffuse une chaîne avec le numéro de série de l'appareil et le temps d'exécution à tout micro:bit connecté au groupe.",
  "radio.sendString|block": "envoyer la chaîne %msg par radio",
  "radio.sendValue|block": "radio envoyer|valeur %name|= %value",
  "radio.setGroup": "Définit l'id du groupe pour les communications par radio. Un micro:bit ne peut écouter qu'une id de groupe à la fois.",
  "radio.setGroup|block": "radio définir groupe %ID",
  "radio.setGroup|param|id": "l'id de groupe entre ``0`` et ``255``. Ex : 1",
  "radio.setTransmitPower": "Modifie le niveau de puissance de sortie de l’émetteur en lui attribuant la valeur donnée.",
  "radio.setTransmitPower|block": "radio définir puissance de transmission %power",
  "radio.setTransmitPower|param|power": "une valeur de la plage 0..7, 0 correspondant à la puissance la plus faible et 7 à la plus élevée. Ex. : 7",
  "radio.setTransmitSerialNumber": "Régle la radio pour qu'elle puisse transmettre le numéro de série dans chaque message.",
  "radio.setTransmitSerialNumber|block": "radio régler le numéro de série de transmission %transmit",
  "radio.setTransmitSerialNumber|param|transmit": "la valeur indiquant si le numéro de série est transmis. Ex : vrai",
  "radio.writeReceivedPacketToSerial": "Écrit le dernier paquet reçu en série en tant que JSON. Cela devrait être appelé\ndans un rappel ``onDataPacketReceived``.",
  "radio.writeReceivedPacketToSerial|block": "Rediriger les données reçues par onde radio sur le port série",
  "radio.writeValueToSerial": "Lit le prochain paquet de la file d'attente radio et l'envoie sur le série en tant que JSON.",
  "radio.writeValueToSerial|block": "radio envoyer la valeur sur le série",
  "radio|block": "radio",
  "serial": "Lire et écrire des données sur une connexion série.",
  "serial.delimiters": "Renvoie la chaîne correspondant au délimiteur",
  "serial.delimiters|block": "%del",
  "serial.onDataReceived": "Enregistre un événement à déclencher quand un des délimiteurs correspond.",
  "serial.onDataReceived|block": "série|si données reçues %delimiters=serial_delimiter_conv",
  "serial.onDataReceived|param|delimiters": "les caractères avec lesquels les caractères reçus doivent être associés.",
  "serial.readBuffer": "Lit plusieurs caractères du tampon reçu. Marque une pause jusqu'à ce que suffisamment de caractères soient présents.",
  "serial.readBuffer|block": "série|lire le tampon %length",
  "serial.readBuffer|param|length": "longueur par défaut du tampon. Ex : 64",
  "serial.readLine": "Lit une ligne de texte d'un port série.",
  "serial.readLine|block": "série|lire ligne",
  "serial.readString": "Lit les données reçues du tampon sous la forme d'une chaîne",
  "serial.readString|block": "série|lire chaîne",
  "serial.readUntil": "Lit une ligne de texte d'un port série et renvoie le tampon quand le délimiteur est atteint.",
  "serial.readUntil|block": "série|lire jusque %delimiter=serial_delimiter_conv",
  "serial.readUntil|param|delimiter": "le délimiteur de texte qui sépare chaque morceau de texte",
  "serial.redirect": "Configure l'entrée et la sortie série pour utiliser les broches à la place de la connexion USB.",
  "serial.redirectToUSB": "Redirige l'entrée et la sortie série pour utiliser la connexion USB.",
  "serial.redirectToUSB|block": "série|rediriger vers USB",
  "serial.redirect|block": "série|rediriger vers|TX %tx|RX %rx|au débit en baudes %rate",
  "serial.redirect|param|rate": "le nouveau débit en bauds. Ex : 115200",
  "serial.redirect|param|rx": "la nouvelle broche de réception. Ex : SerialPin.P1",
  "serial.redirect|param|tx": "nouvelle broche de transmission. Ex : SerialPin.P0",
  "serial.writeBuffer": "Envoie un tampon via la connexion Série",
  "serial.writeBuffer|block": "série|écrire tampon %buffer=serial_readbuffer",
  "serial.writeLine": "Imprime une ligne de texte via le port série",
  "serial.writeLine|block": "série|écrire ligne %text",
  "serial.writeNumber": "Imprime une valeur numérique via le port série",
  "serial.writeNumbers": "Imprime un tableau de valeurs numériques dans le format de valeurs séparées par des virgules (CSV) sur le port série",
  "serial.writeNumbers|block": "série|écrire nombres %values",
  "serial.writeNumber|block": "série|écrire nombre %value",
  "serial.writeString": "Envoie du texte via la connexion série.",
  "serial.writeString|block": "série|écrire texte %text",
  "serial.writeValue": "Écrit une ligne paire ``nom: valeur`` via le port série.",
  "serial.writeValue|block": "série|écrire valeur %name|= %value",
  "serial.writeValue|param|name": "nom du flux de valeurs. Ex : x",
  "serial.writeValue|param|value": "à envoyer",
  "serial|block": "Communication Série",
  "servos.P0|block": "servo P0",
  "servos.P1|block": "servo P1",
  "servos.P2|block": "servo P2",
  "servos.Servo.run": "Régle la puissance sur un servomoteur à rotation continue",
  "servos.Servo.run|block": "%servo à rotation continue fonctionne à %speed=speedPicker \\%",
  "servos.Servo.run|param|speed": "La puissance appliquée au moteur de -100% à 100%",
  "servos.Servo.setAngle|block": "règle l'angle du %servo à %degrees=protractorPicker °",
  "servos.Servo.setPulse|block": "règle la largeur d'impulsion du %servo à %micros μs",
  "{id:category}AnalogInPin": "AnalogInPin",
  "{id:category}AnalogOutPin": "AnalogOutPin",
  "{id:category}Array": "Tableau",
  "{id:category}Arrays": "Tableaux",
  "{id:category}Basic": "Base",
  "{id:category}Bluetooth": "Bluetooth",
  "{id:category}Boolean": "Booléen",
  "{id:category}Buffer": "Tampon",
  "{id:category}Console": "Console",
  "{id:category}Control": "Contrôle",
  "{id:category}Devices": "Périphériques",
  "{id:category}DigitalInOutPin": "DigitalInOutPin",
  "{id:category}Game": "Jeu",
  "{id:category}Helpers": "Assistants",
  "{id:category}Image": "Image",
  "{id:category}Images": "Images",
  "{id:category}Input": "Entrées",
  "{id:category}Led": "LED",
  "{id:category}Math": "Maths",
  "{id:category}MicrobitPin": "MicrobitPin",
  "{id:category}Msgpack": "Msgpack",
  "{id:category}Music": "Musique",
  "{id:category}Number": "Nombres",
  "{id:category}Pins": "Broches",
  "{id:category}PwmOnlyPin": "PwmOnlyPin",
  "{id:category}Radio": "Radio",
  "{id:category}Serial": "Communication Série",
  "{id:category}Servos": "Servos",
  "{id:category}String": "Texte",
  "{id:category}Text": "Texte"
}