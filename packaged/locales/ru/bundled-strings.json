{
  "AcceleratorRange.EightG": "Акселерометр измеряет силу до 8 g",
  "AcceleratorRange.EightG|block": "8g",
  "AcceleratorRange.FourG": "Акселерометр измеряет силу до 4 g",
  "AcceleratorRange.FourG|block": "4g",
  "AcceleratorRange.OneG": "Акселерометр измеряет силу до 1 g",
  "AcceleratorRange.OneG|block": "1g",
  "AcceleratorRange.TwoG": "Акселерометр измеряет силу до 2 g",
  "AcceleratorRange.TwoG|block": "2g",
  "AnalogPin.P11|block": "P11 (только запись)",
  "AnalogPin.P12|block": "P12 (только запись)",
  "AnalogPin.P13|block": "P13 (только запись)",
  "AnalogPin.P14|block": "P14 (только запись)",
  "AnalogPin.P15|block": "P15 (только запись)",
  "AnalogPin.P16|block": "P16 (только запись)",
  "AnalogPin.P19|block": "P19 (только запись)",
  "AnalogPin.P20|block": "P20 (только запись)",
  "AnalogPin.P5|block": "P5 (только запись)",
  "AnalogPin.P6|block": "P6 (только запись)",
  "AnalogPin.P7|block": "P7 (только запись)",
  "AnalogPin.P8|block": "P8 (только запись)",
  "AnalogPin.P9|block": "P9 (только запись)",
  "Array.filter": "Возврат элементов массива, удовлетворяющих условию, указанному в функции обратного вызова.",
  "Array.filter|param|callbackfn": "Функция принимает не более двух аргументов. Метод «filter» для каждого элемента массива один раз вызывает функцию «callbackfn».",
  "Array.get|param|index": "отсчитываемая от нуля позиция в списке элементов, например: 0",
  "Array.indexOf": "Возвращает индекс первого вхождения значения в массиве.",
  "Array.indexOf|block": "%list| найти индекс %value",
  "Array.indexOf|param|fromIndex": "Индекс в массиве, с которого начинается поиск. Если параметр «fromIndex» опущен, поиск начинается с индекса 0.",
  "Array.indexOf|param|item": "Значение, которое нужно найти в массиве.",
  "Array.insertAt|block": "%list| вставить по индексу %index| значение %value",
  "Array.insertAt|param|index": "отсчитываемая от нуля позиция в списке элементов для вставки значения, например: 0",
  "Array.length|block": "длина %VALUE",
  "Array.map": "Вызвать определенную функцию обратного вызова для каждого элемента массива и вернуть массив с результатами вызова.",
  "Array.map|param|callbackfn": "Функция принимает не более двух аргументов. Метод «map» для каждого элемента массива один раз вызывает функцию «callbackfn».",
  "Array.pop": "Удалить последний элемент из массива и вернуть его.",
  "Array.pop|block": "получить и удалить последнее значение из %list",
  "Array.push|block": "%list| добавить значение %value| в конец",
  "Array.reduce": "Вызвать указанную функцию обратного вызова для всех элементов массива. Возвращаемое значение функции обратного вызова представляет собой накопленный результат и при следующем вызове функции обратного вызова передается в качестве аргумента.",
  "Array.reduce|param|callbackfn": "Функция принимает не более трех аргументов. Метод «reduce» для каждого элемента массива один раз вызывает функцию «callbackfn».",
  "Array.reduce|param|initialValue": "Исходное значение для начала накопления. При первом вызове функции «callbackfn» это значение передается в качестве аргумента вместо значения массива.",
  "Array.removeAt": "Удалить элемент с определенным индексом.",
  "Array.removeAt|block": "%list| удалить значение по индексу %index",
  "Array.reverse": "Обратить порядок элементов массива. Первый элемент массива становится последним, а последний — первым.",
  "Array.reverse|block": "обратить %list",
  "Array.set|param|index": "отсчитываемая от нуля позиция в списке элементов для сохранения значения, например: 0",
  "Array.shift": "Удалить первый элемент из массива и вернуть его. Этот метод изменяет длину массива.",
  "Array.shift|block": "получить и удалить первое значение из %list",
  "Array.slice": "Возвращает часть массива.",
  "Array.slice|param|end": "Конец указанной части массива. Например: 0",
  "Array.slice|param|start": "Начало указанной части массива. Например: 0",
  "Array.sort": "Упорядочить элементы массива и вернуть упорядоченный массив. Метод «sort» не обязательно стабильный.",
  "Array.splice": "Удалить элементы из массива.",
  "Array.splice|param|deleteCount": "Количество удаляемых элементов. Например: 0",
  "Array.splice|param|start": "Отсчитываемая от нуля позиция в массиве, с которой начинать удаление элементов. Например: 0",
  "Array.unshift": "Добавить один элемент в начало массива и вернуть новую длину массива.",
  "Array.unshift|block": "%list| вставить %value| в начало",
  "Array|block": "Массив",
  "ArrowNames.East|block": "восток",
  "ArrowNames.NorthEast|block": "северо-восток",
  "ArrowNames.NorthWest|block": "северо-запад",
  "ArrowNames.North|block": "север",
  "ArrowNames.SouthEast|block": "юго-восток",
  "ArrowNames.SouthWest|block": "юго-запад",
  "ArrowNames.South|block": "юг",
  "ArrowNames.West|block": "запад",
  "BaudRate.BaudRate115200|block": "115200",
  "BaudRate.BaudRate1200|block": "1200",
  "BaudRate.BaudRate14400|block": "14400",
  "BaudRate.BaudRate19200|block": "19200",
  "BaudRate.BaudRate2400|block": "2400",
  "BaudRate.BaudRate28800|block": "28800",
  "BaudRate.BaudRate31250|block": "31250",
  "BaudRate.BaudRate38400|block": "38400",
  "BaudRate.BaudRate4800|block": "4800",
  "BaudRate.BaudRate57600|block": "57600",
  "BaudRate.BaudRate9600|block": "9600",
  "BeatFraction.Breve|block": "4",
  "BeatFraction.Double|block": "2",
  "BeatFraction.Eighth|block": "1/8",
  "BeatFraction.Half|block": "1/2",
  "BeatFraction.Quarter|block": "1/4",
  "BeatFraction.Sixteenth|block": "1/16",
  "BeatFraction.Whole|block": "1",
  "Boolean.toString": "Возвращает строковое представление объекта.",
  "Buffer.fill": "Заполнить (фрагмент) буфера заданным значением.",
  "Buffer.getNumber": "Прочитать число в указанном формате из буфера.",
  "Buffer.length": "Возвращает длину объекта «буфер».",
  "Buffer.rotate|param|offset": "число сдвигаемых байтов; отрицательное значение сдвигает вправо",
  "Buffer.rotate|param|start": "начальное смещение в буфере. По умолчанию — 0.",
  "Buffer.setNumber": "Записать в буфере число в указанном формате.",
  "Buffer.shift|param|offset": "число сдвигаемых байтов; отрицательное значение сдвигает вправо",
  "Buffer.shift|param|start": "начальное смещение в буфере. По умолчанию — 0.",
  "Buffer.slice": "Вернуть копию фрагмента буфера.",
  "Buffer.write": "Записать содержимое источника «src» в «dstOffset» в текущем буфере.",
  "Button.AB|block": "A+B",
  "Delimiters.Colon|block": ":",
  "Delimiters.Comma|block": ",",
  "Delimiters.Dollar|block": "$",
  "Delimiters.Fullstop|block": ".",
  "Delimiters.Hash|block": "#",
  "Delimiters.NewLine|block": "новая строка",
  "Dimension.Strength|block": "сила",
  "Dimension.X|block": "x",
  "Dimension.Y|block": "y",
  "Dimension.Z|block": "z",
  "Direction.Left|block": "влево",
  "Direction.Right|block": "вправо",
  "DisplayMode.BlackAndWhite|block": "черно-белый",
  "DisplayMode.Greyscale|block": "оттенки серого",
  "EventCreationMode": "Как создать событие.",
  "EventCreationMode.CreateAndFire": "Событие MicroBitEvent инициализируется, и сразу же запускаются его обработчики событий (не подходит для прерываний!).",
  "EventCreationMode.CreateOnly": "Событие MicroBitEvent инициализируется, дальнейшая обработка не происходит.",
  "Gesture.EightG": "Вызывается при обнаружении удара в 8G",
  "Gesture.EightG|block": "8g",
  "Gesture.FreeFall": "Вызывается при падении платы!",
  "Gesture.FreeFall|block": "свободное падение",
  "Gesture.LogoDown": "Вызывается, когда логотип ориентирован вниз, а экран вертикально",
  "Gesture.LogoDown|block": "логотип вниз",
  "Gesture.LogoUp": "Вызывается, когда логотип ориентирован вверх, а экран вертикально",
  "Gesture.LogoUp|block": "логотип вверх",
  "Gesture.ScreenDown": "Вызывается, когда экран направлен вверх, а плата стоит горизонтально",
  "Gesture.ScreenDown|block": "экран вниз",
  "Gesture.ScreenUp": "Вызывается, когда экран направлен вниз, а плата стоит горизонтально",
  "Gesture.ScreenUp|block": "экран вверх",
  "Gesture.Shake": "Вызывается при встряхивание",
  "Gesture.Shake|block": "встряхивание",
  "Gesture.SixG": "Вызывается при обнаружении удара в 6G",
  "Gesture.SixG|block": "6g",
  "Gesture.ThreeG": "Вызывается при обнаружении удара в 3G",
  "Gesture.ThreeG|block": "3g",
  "Gesture.TiltLeft": "Вызывается, когда экран направлен влево",
  "Gesture.TiltLeft|block": "наклон влево",
  "Gesture.TiltRight": "Вызывается, когда экран направлен вправо",
  "Gesture.TiltRight|block": "наклон вправо",
  "IconNames.Angry|block": "злой",
  "IconNames.Asleep|block": "спящий",
  "IconNames.Butterfly|block": "бабочка",
  "IconNames.Chessboard|block": "шахматная доска",
  "IconNames.Confused|block": "смущенный",
  "IconNames.Cow|block": "корова",
  "IconNames.Diamond|block": "алмаз",
  "IconNames.Duck|block": "утка",
  "IconNames.EigthNote|block": "восьмая нота",
  "IconNames.Fabulous|block": "великолепный",
  "IconNames.Ghost|block": "призрак",
  "IconNames.Giraffe|block": "жираф",
  "IconNames.Happy|block": "счастливый",
  "IconNames.Heart|block": "сердечко",
  "IconNames.House|block": "дом",
  "IconNames.LeftTriangle|block": "левый треугольник",
  "IconNames.Meh|block": "ме",
  "IconNames.No|block": "нет",
  "IconNames.Pitchfork|block": "вилы",
  "IconNames.QuarterNote|block": "четвертная нота",
  "IconNames.Rabbit|block": "кролик",
  "IconNames.Rollerskate|block": "роликовые коньки",
  "IconNames.Sad|block": "грустный",
  "IconNames.Scissors|block": "ножницы",
  "IconNames.Silly|block": "глупый",
  "IconNames.Skull|block": "череп",
  "IconNames.SmallDiamond|block": "маленький алмаз",
  "IconNames.SmallHeart|block": "маленькое сердечко",
  "IconNames.SmallSquare|block": "маленький квадрат",
  "IconNames.Snake|block": "змея",
  "IconNames.Square|block": "квадрат",
  "IconNames.StickFigure|block": "фигурка",
  "IconNames.Surprised|block": "удивленный",
  "IconNames.Sword|block": "меч",
  "IconNames.TShirt|block": "футболка",
  "IconNames.Target|block": "мишень",
  "IconNames.Tortoise|block": "черепаха",
  "IconNames.Triangle|block": "треугольник",
  "IconNames.Umbrella|block": "зонтик",
  "IconNames.Yes|block": "да",
  "Image.clear": "Выключает все пиксели.",
  "Image.height": "Получает высоту в строках (всегда 5)",
  "Image.pixel": "Получить состояние пикселя в положении «(x,y)»",
  "Image.pixelBrightness": "Получает яркость пикселя ([0…255]) в заданном положении",
  "Image.plotFrame": "Рисует на экране кадр номер «index» изображения.",
  "Image.plotFrame|param|xOffset": "индекс столбца, с которого начинать отображать изображение",
  "Image.plotImage": "Рисует на экране изображение в данном столбце",
  "Image.scrollImage": "Прокручивает изображение .",
  "Image.scrollImage|param|frameOffset": "смещение x на каждом шаге анимации, например: 1, 2, 5",
  "Image.scrollImage|param|interval": "время между шагами анимации в миллисекундах, например: 200",
  "Image.setPixel": "Задать состояние пикселя в положении «(x,y)»",
  "Image.setPixelBrightness": "Задает определенную яркость пикселей в заданном положении",
  "Image.showImage": "Показывает кадр из изображения со смещением «x offset».",
  "Image.showImage|param|xOffset": "индекс столбца, с которого начинать отображать изображение",
  "Image.width": "Получает ширину в столбцах",
  "LedSpriteProperty.Blink|block": "мигание",
  "LedSpriteProperty.Brightness|block": "яркость",
  "LedSpriteProperty.Direction|block": "направление",
  "LedSpriteProperty.X|block": "x",
  "LedSpriteProperty.Y|block": "y",
  "Math": "Более сложные операции с числами.",
  "Math.abs": "Возвращает абсолютное значение числа (это значение не зависит от того положительное это число или отрицательное).\nНапример, абсолютное значение -5 равно абсолютному значению 5.",
  "Math.acos": "Возвращает для числа арккосинус (в радианах)",
  "Math.acos|param|x": "Число",
  "Math.asin": "Возвращает для числа арксинус (в радианах)",
  "Math.asin|param|x": "Число",
  "Math.atan": "Возвращает для числа арктангенс (в радианах)",
  "Math.atan2": "Возвращает арктангенс отношения данных аргументов.",
  "Math.atan2|param|x": "Число",
  "Math.atan2|param|y": "Число",
  "Math.atan|param|x": "Число",
  "Math.ceil": "Возвращает наименьшее число, которое больше или равно данному числовому аргументу.",
  "Math.cos": "Возвращает косинус числа.",
  "Math.cos|param|x": "Угол в радианах",
  "Math.exp": "Возвращает «e^x».",
  "Math.exp|param|x": "Число",
  "Math.floor": "Возвращает наибольшее число, которое меньше или равно данному числовому аргументу.",
  "Math.idiv": "Возвращает значение целочисленного (со знаком) 32-битного деления двух чисел.",
  "Math.idiv|param|x": "Первое число",
  "Math.idiv|param|y": "Второе число",
  "Math.imul": "Возвращает значение целочисленного (со знаком) 32-битного произведения двух чисел.",
  "Math.imul|param|x": "Первое число",
  "Math.imul|param|y": "Второе число",
  "Math.log": "Возвращает натуральный (по основанию «e») логарифм числа.",
  "Math.log|param|x": "Число",
  "Math.map": "Повторно отображает число из одного диапазона в другой. То есть, значение «from low» будет отображено на значение «to low», а «from high» — на «to high»; причем значения внутри исходного диапазона будут отображены на значения внутри целевого диапазона.",
  "Math.map|param|fromHigh": "верхняя граница текущего диапазона значений, например: 1023",
  "Math.map|param|fromLow": "нижняя граница текущего диапазона значений, например:",
  "Math.map|param|toHigh": "верхняя граница целевого диапазона значений, например: 4",
  "Math.map|param|toLow": "нижняя граница целевого диапазона значений, например:",
  "Math.map|param|value": "значение для отображения в диапазонах",
  "Math.randomBoolean": "Произвольно генерирует значения «true» и «false», как при подбрасывании монеты.",
  "Math.randomBoolean|block": "выбрать случайно «истину» или «ложь»",
  "Math.randomRange": "Возвращает псевдослучайное число в диапазоне от «min» до «max». \nЕсли оба числа целые, результат тоже целый.",
  "Math.randomRange|block": "выбрать случайно от %min|до %limit",
  "Math.randomRange|param|max": "верхняя включенная граница, например: 10",
  "Math.randomRange|param|min": "нижняя включенная граница, например: 0",
  "Math.round": "Возвращает данное числовое выражение, округленное до ближайшего числа.",
  "Math.round|param|x": "Округляемое до ближайшего числа значение.",
  "Math.sin": "Возвращает синус числа.",
  "Math.sin|param|x": "Угол в радианах",
  "Math.tan": "Возвращает тангенс числа.",
  "Math.tan|param|x": "Угол в радианах",
  "Math.trunc": "Возвращает число с отброшенной десятичной частью.",
  "Math|block": "Математика",
  "Melodies.BaDing|block": "ба-динь",
  "Melodies.Baddy|block": "злодей",
  "Melodies.Birthday|block": "день рождения",
  "Melodies.Blues|block": "блюз",
  "Melodies.Chase|block": "погоня",
  "Melodies.Dadadadum|block": "да-да-дам",
  "Melodies.Entertainer|block": "конферансье",
  "Melodies.Funeral|block": "похоронный",
  "Melodies.Funk|block": "фанк",
  "Melodies.JumpDown|block": "соскок",
  "Melodies.JumpUp|block": "подскок",
  "Melodies.Nyan|block": "нян",
  "Melodies.Ode|block": "ода",
  "Melodies.PowerDown|block": "выключение",
  "Melodies.PowerUp|block": "включение",
  "Melodies.Prelude|block": "вступление",
  "Melodies.Punchline|block": "кульминация",
  "Melodies.Ringtone|block": "мелодия звонка",
  "Melodies.Wawawawaa|block": "ва-ва-ва",
  "Melodies.Wedding|block": "свадьба",
  "MelodyOptions.ForeverInBackground|block": "постоянно в фоновом режиме",
  "MelodyOptions.Forever|block": "постоянно",
  "MelodyOptions.OnceInBackground|block": "один раз в фоновом режиме",
  "MelodyOptions.Once|block": "один раз",
  "MelodyStopOptions.All|block": "все",
  "MesAlertEvent.DisplayToast|block": "показать всплывающее уведомление",
  "MesAlertEvent.FindMyPhone|block": "поиск телефона",
  "MesAlertEvent.PlayRingtone|block": "проиграть мелодию звонка",
  "MesAlertEvent.PlaySound|block": "проиграть звук",
  "MesAlertEvent.RingAlarm2|block": "сигнал будильника 2",
  "MesAlertEvent.RingAlarm3|block": "сигнал будильника 3",
  "MesAlertEvent.RingAlarm4|block": "сигнал будильника 4",
  "MesAlertEvent.RingAlarm5|block": "сигнал будильника 5",
  "MesAlertEvent.RingAlarm6|block": "сигнал будильника 6",
  "MesAlertEvent.RingAlarm|block": "сигнал будильника",
  "MesAlertEvent.Vibrate|block": "вибрация",
  "MesCameraEvent.LaunchPhotoMode|block": "запуск фоторежима",
  "MesCameraEvent.LaunchVideoMode|block": "запуск видеорежима",
  "MesCameraEvent.StartVideoCapture|block": "запуск видеозахвата",
  "MesCameraEvent.StopPhotoMode|block": "остановка фоторежима",
  "MesCameraEvent.StopVideoCapture|block": "остановка видеозахвата",
  "MesCameraEvent.StopVideoMode|block": "остановка видеорежима",
  "MesCameraEvent.TakePhoto|block": "сделать фото",
  "MesCameraEvent.ToggleFrontRear|block": "фронтальная или задняя",
  "MesDeviceInfo.DisplayOff|block": "дисплей выкл.",
  "MesDeviceInfo.DisplayOn|block": "дисплей вкл.",
  "MesDeviceInfo.IncomingCall|block": "входящий вызов",
  "MesDeviceInfo.IncomingMessage|block": "входящее сообщение",
  "MesDeviceInfo.OrientationLandscape|block": "альбомная ориентация",
  "MesDeviceInfo.OrientationPortrait|block": "книжная ориентация",
  "MesDeviceInfo.Shaken|block": "встряхивание",
  "MesRemoteControlEvent.forward|block": "вперёд",
  "MesRemoteControlEvent.nextTrack|block": "следующая дорожка",
  "MesRemoteControlEvent.pause|block": "приостановить",
  "MesRemoteControlEvent.play|block": "проиграть",
  "MesRemoteControlEvent.previousTrack|block": "предыдущая дорожка",
  "MesRemoteControlEvent.rewind|block": "назад",
  "MesRemoteControlEvent.stop|block": "остановить",
  "MesRemoteControlEvent.volumeDown|block": "тише",
  "MesRemoteControlEvent.volumeUp|block": "громче",
  "MusicEvent.BackgroundMelodyEnded|block": "фоновая мелодия закончилась",
  "MusicEvent.BackgroundMelodyNotePlayed|block": "проиграна нота фоновой мелодии",
  "MusicEvent.BackgroundMelodyPaused|block": "фоновая мелодия приостановлена",
  "MusicEvent.BackgroundMelodyRepeated|block": "фоновая мелодия повторена",
  "MusicEvent.BackgroundMelodyResumed|block": "фоновая мелодия возобновлена",
  "MusicEvent.BackgroundMelodyStarted|block": "фоновая мелодия началась",
  "MusicEvent.MelodyEnded|block": "мелодия закончилась",
  "MusicEvent.MelodyNotePlayed|block": "проиграна нота мелодии",
  "MusicEvent.MelodyRepeated|block": "мелодия повторена",
  "MusicEvent.MelodyStarted|block": "мелодия началась",
  "Note.CSharp3|block": "C#3",
  "Note.CSharp4|block": "C#4",
  "Note.CSharp5|block": "C#5",
  "Note.CSharp|block": "C#",
  "Note.FSharp3|block": "F#3",
  "Note.FSharp4|block": "F#4",
  "Note.FSharp5|block": "F#5",
  "Note.FSharp|block": "F#",
  "Note.GSharp3|block": "G#3",
  "Note.GSharp4|block": "G#4",
  "Note.GSharp5|block": "G#5",
  "Note.GSharp|block": "G#",
  "Number.toString": "Возвращает строковое представление числа.",
  "Number|block": "Число",
  "PinEvent.Fall|block": "падение",
  "PinEventType.Edge|block": "край",
  "PinEventType.None|block": "нет",
  "PinEventType.Pulse|block": "импульс",
  "PinEventType.Touch|block": "касание",
  "PinPullMode.PullDown|block": "низ",
  "PinPullMode.PullNone|block": "нет",
  "PinPullMode.PullUp|block": "верх",
  "PulseValue.High|block": "высокий",
  "PulseValue.Low|block": "низкий",
  "RadioPacketProperty.SignalStrength|block": "мощность сигнала",
  "Rotation.Pitch|block": "высота",
  "Rotation.Roll|block": "наклон",
  "String.charAt": "Вернуть символ по указанному индексу.",
  "String.charAt|block": "символ из текста %this=text|в положении %pos",
  "String.charCodeAt": "Вернуть значение в таблице «Юникод» символа в указанном положении.",
  "String.compare": "Посмотреть, как различается порядок символов в двух строках (в кодировке ASCII).",
  "String.compare|block": "сравнить %this=text| с текстом %that",
  "String.fromCharCode": "Сделать строку из заданного ASCII-кода символа.",
  "String.fromCharCode|block": "текст из символа с кодом %code",
  "String.length|block": "длина %VALUE",
  "String.slice": "Вернуть подстроку текущей строки.",
  "String.slice|param|start": "индекс первого символа; при отсчете с конца может быть отрицательным, например: 0",
  "String.substr": "Вернуть подстроку текущей строки.",
  "String.substr|block": "подстрока текста %this=text|с началом %start|длиной %length",
  "String|block": "Строка",
  "basic": "Обеспечивает доступ к основным функциям micro:bit.",
  "basic.clearScreen": "Выключить все светодиоды",
  "basic.clearScreen|block": "очистить экран",
  "basic.forever": "Постоянно повторяет код в фоновом режиме. На каждой итерации позволяет запускать другие коды.",
  "basic.forever|block": "постоянно",
  "basic.pause": "Сделать паузу на заданное время в миллисекундах",
  "basic.pause|block": "пауза (мс) %pause",
  "basic.pause|param|ms": "время приостановки, например: 100, 200, 500, 1000, 2000",
  "basic.plotLeds": "Рисует изображение на экране дисплея.",
  "basic.plotLeds|param|leds": "шаблон включения светодиодных индикаторов",
  "basic.showAnimation": "Показывает последовательность светодиодных экранов в виде анимации.",
  "basic.showAnimation|param|interval": "время в миллисекундах между перерисовкой",
  "basic.showAnimation|param|leds": "шаблон включения светодиодных индикаторов",
  "basic.showArrow|block": "показать стрелку направлением %i=device_arrow",
  "basic.showArrow|param|direction": "направление стрелки",
  "basic.showArrow|param|interval": "время показа значка (в миллисекундах). По умолчанию — 600.",
  "basic.showIcon": "Рисует выбранный значок на светодиодном экране",
  "basic.showIcon|block": "показать значок %i",
  "basic.showIcon|param|interval": "время показа значка (в миллисекундах). По умолчанию — 600.",
  "basic.showLeds": "Рисует изображение на экране дисплея.",
  "basic.showLeds|block": "показать светодиоды",
  "basic.showLeds|param|interval": "время в миллисекундах для паузы после прорисовки",
  "basic.showLeds|param|leds": "шаблон включения светодиодных индикаторов",
  "basic.showNumber": "Прокрутить на экране число. Если число влазит в экран (то есть это одна цифра), оно прокручиваться не будет.",
  "basic.showNumber|block": "показать|число %number",
  "basic.showNumber|param|interval": "скорость прокрутки; например: 150, 100, 200, -100",
  "basic.showString": "Показать текст на дисплее, по одному символу за раз. Если строка влазит в экран (то есть это одна буква), она прокручиваться не будет.",
  "basic.showString|block": "показать|строку %text",
  "basic.showString|param|interval": "как быстро смещать символы; например: 150, 100, 200, -100",
  "basic.showString|param|text": "прокручиваемый на экране текст, например: «Привет!»",
  "basic|block": "базовый",
  "bluetooth": "Поддержка дополнительных сервисов Bluetooth.\n\nПоддержка дополнительных сервисов Bluetooth.",
  "bluetooth.advertiseUid": "Объявить Eddystone UID",
  "bluetooth.advertiseUidBuffer": "Объявить Eddystone UID",
  "bluetooth.advertiseUidBuffer|param|connectable": "для поддержки подключения Bluetooth для других сервисов — «истина», иначе — «ложь».",
  "bluetooth.advertiseUidBuffer|param|nsAndInstance": "16-байтовый буфер пространства имен (байты 0–9) и экземпляр (байты 10–15)",
  "bluetooth.advertiseUidBuffer|param|power": "уровень мощности от 0 до 7, например: 7",
  "bluetooth.advertiseUid|block": "UID объявления Bluetooth|пространство имен (байты 6-9)%ns|экземпляр (байты 2-6)%instance|с мощностью %power|подключение %connectable",
  "bluetooth.advertiseUid|param|connectable": "для поддержки подключения Bluetooth для других сервисов — «истина», иначе — «ложь».",
  "bluetooth.advertiseUid|param|instance": "4 последних байта uid экземпляра",
  "bluetooth.advertiseUid|param|ns": "4 последних байта uid пространства имен",
  "bluetooth.advertiseUid|param|power": "уровень мощности от 0 до 7, например: 7",
  "bluetooth.advertiseUrl": "Объявить Eddystone URL",
  "bluetooth.advertiseUrl|block": "URL-адрес объявления Bluetooth %url|с мощностью %power|подключение %connectable",
  "bluetooth.advertiseUrl|param|connectable": "для поддержки подключения Bluetooth для других сервисов — «истина», иначе — «ложь».",
  "bluetooth.advertiseUrl|param|power": "уровень мощности от 0 до 7, например: 7",
  "bluetooth.advertiseUrl|param|url": "URL-адрес для передачи. Должен быть не длиннее, чем поддерживаемая длина URL-адресов Eddystone, например: «https://makecode.com»",
  "bluetooth.onBluetoothConnected": "Зарегистрировать код, который запускается, устройство micro:bit подключено через Bluetooth",
  "bluetooth.onBluetoothConnected|block": "по подключению Bluetooth",
  "bluetooth.onBluetoothConnected|param|body": "Код, запускаемый при установке Bluetooth-подключения",
  "bluetooth.onBluetoothDisconnected": "Зарегистрировать код, который запускается, когда Bluetooth-подключение с устройством micro:bit утрачено",
  "bluetooth.onBluetoothDisconnected|block": "по отключению Bluetooth",
  "bluetooth.onBluetoothDisconnected|param|body": "Код, запускаемый при разъединении Bluetooth-подключения",
  "bluetooth.onUartDataReceived": "Регистрирует событие, которое запускается, когда совпал один из разделителей.",
  "bluetooth.onUartDataReceived|block": "Bluetooth|по получению данных %delimiters=serial_delimiter_conv",
  "bluetooth.onUartDataReceived|param|delimiters": "символы, с которыми сравниваются принятые символы.",
  "bluetooth.setTransmitPower": "Задает мощность Bluetooth-передатчика от 0 (минимальная) до 7 (максимальная).",
  "bluetooth.setTransmitPower|block": "Bluetooth: задать мощность передачи %power",
  "bluetooth.setTransmitPower|param|power": "уровень мощности от 0 (минимальная) до 7 (максимальная), например: 7.",
  "bluetooth.startAccelerometerService": "Запускает Bluetooth-сервис акселерометра",
  "bluetooth.startAccelerometerService|block": "Bluetooth-сервис акселерометра",
  "bluetooth.startButtonService": "Запускает Bluetooth-сервис кнопок",
  "bluetooth.startButtonService|block": "Bluetooth-сервис кнопок",
  "bluetooth.startIOPinService": "Запускает Bluetooth-сервис контакта ввода-вывода.",
  "bluetooth.startIOPinService|block": "Bluetooth-сервис контакта ввода-вывода",
  "bluetooth.startLEDService": "Запускает Bluetooth-сервис светодиодов",
  "bluetooth.startLEDService|block": "Bluetooth-сервис светодиодов",
  "bluetooth.startMagnetometerService": "Запускает Bluetooth-сервис магнитометра",
  "bluetooth.startMagnetometerService|block": "Bluetooth-сервис магнитометра",
  "bluetooth.startTemperatureService": "Запускает Bluetooth-сервис температуры",
  "bluetooth.startTemperatureService|block": "Bluetooth-сервис температуры",
  "bluetooth.startUartService": "Запускает Bluetooth-сервис UART",
  "bluetooth.startUartService|block": "Bluetooth-сервис UART",
  "bluetooth.stopAdvertising": "Останавливает объявление конечных точек Eddystone",
  "bluetooth.stopAdvertising|block": "остановить объявление Bluetooth",
  "bluetooth.uartReadUntil": "Читает из буфера Bluetooth-сервиса UART и возвращает его содержимое, когда встречается указанный символ-разделитель.",
  "bluetooth.uartReadUntil|block": "Bluetooth UART|читать до %del=serial_delimiter_conv",
  "bluetooth.uartWriteLine": "Записывает в буфер Bluetooth-сервиса UART. Оттуда данные через Bluetooth передаются на подключенное устройство.",
  "bluetooth.uartWriteNumber": "Печатает числовое значение в последовательный порт",
  "bluetooth.uartWriteNumber|block": "Bluetooth UART|записать число %value",
  "bluetooth.uartWriteString": "Записывает в буфер Bluetooth-сервиса UART. Оттуда данные через Bluetooth передаются на подключенное устройство.",
  "bluetooth.uartWriteString|block": "Bluetooth UART|записать строку %data",
  "bluetooth.uartWriteValue": "Записывает парную строку «имя: значение» в последовательный порт.",
  "bluetooth.uartWriteValue|block": "Bluetooth UART|записать значение %name|= %value",
  "bluetooth.uartWriteValue|param|name": "имя потока значений, например: x",
  "bluetooth.uartWriteValue|param|value": "записываемое значение",
  "bluetooth|block": "Bluetooth",
  "console.logValue|param|value": "записываемое значение",
  "control": "Средства событий и среды выполнения.",
  "control.deviceName|block": "название устройства",
  "control.deviceSerialNumber|block": "серийный номер устройства",
  "control.eventTimestamp|block": "временная метка события",
  "control.inBackground": "Планирует запуск кода в фоновом режиме.",
  "control.inBackground|block": "запустить в фоновом режиме",
  "control.reset": "Сбрасывает BBC micro:bit.",
  "control.reset|block": "сброс",
  "control.waitMicros": "Блокирует текущее волокно на заданное в микросекундах время",
  "control.waitMicros|block": "ждать (мкс)%micros",
  "control.waitMicros|param|micros": "время ожидания в микросекундах. Например: 4",
  "control|block": "управление",
  "devices": "Управление телефоном посредством BBC micro:bit через Bluetooth.",
  "devices.onGamepadButton": "Зарегистрировать код, который запускается, когда micro:bit получает команду со связанного геймпада.",
  "devices.onGamepadButton|block": "по кнопке геймпада|%NAME",
  "devices.onGamepadButton|param|body": "код, запускаемый при нажатии на кнопку",
  "devices.onGamepadButton|param|name": "название кнопки",
  "devices.onNotified": "Регистрирует код, который запускается, когда устройство уведомляет об определенном событии.",
  "devices.onNotified|block": "по уведомлению|%event",
  "devices.onNotified|param|body": "обработчик кода при срабатывании события",
  "devices.onNotified|param|event": "описание события",
  "devices.onSignalStrengthChanged": "Регистрирует код, который запускается, когда устройство уведомляет об изменении уровня сигнала.",
  "devices.onSignalStrengthChanged|block": "по изменению мощности сигнала",
  "devices.onSignalStrengthChanged|param|body": "Код, запускаемый при изменении уровня сигнала.",
  "devices.raiseAlertTo": "Отправляет родительскому устройству команду «предупреждение».",
  "devices.raiseAlertTo|block": "вызвать предупреждение адресату|%property",
  "devices.raiseAlertTo|param|event": "описание события",
  "devices.signalStrength": "Возвращает последний уровень сигнала, переданный связанным устройством.",
  "devices.signalStrength|block": "мощность сигнала",
  "devices.tellCameraTo": "Отправляет родительскому устройству команду «камера».",
  "devices.tellCameraTo|block": "сказать камере|%property",
  "devices.tellCameraTo|param|event": "описание события",
  "devices.tellRemoteControlTo": "Отправляет родительскому устройству команду «удаленное управление».",
  "devices.tellRemoteControlTo|block": "сказать удаленному управлению|%property",
  "devices.tellRemoteControlTo|param|event": "описание события",
  "devices|block": "устройства",
  "game": "Спрайтовый игровой движок с одним светодиодным индикатором",
  "game.LedSprite": "Спрайт игры, отрисованный как один светодиод",
  "game.LedSprite.blink": "Сообщает длительность «мигания» спрайта",
  "game.LedSprite.brightness": "Сообщает «яркость» спрайта на светодиодном экране",
  "game.LedSprite.change": "Изменяет свойство спрайта",
  "game.LedSprite.changeBlinkBy": "Изменяет длительность «мигания» на заданное количество миллисекунд",
  "game.LedSprite.changeBrightnessBy": "Изменяет положение «y» на заданную величину",
  "game.LedSprite.changeBrightnessBy|param|value": "значение для изменения яркости",
  "game.LedSprite.changeDirectionBy": "Изменяет положение «direction» (направление) на заданную величину поворотом вправо",
  "game.LedSprite.changeXBy": "Изменяет положение «x» на заданную величину",
  "game.LedSprite.changeYBy": "Изменяет положение «y» на заданную величину",
  "game.LedSprite.change|block": "%sprite|изменить %property|по значению %value",
  "game.LedSprite.change|param|property": "имя изменяемого свойства",
  "game.LedSprite.change|param|value": "величина изменения, например: 1",
  "game.LedSprite.delete": "Удаляет спрайт из игрового движка. Спрайт больше не будет отображаться на экране и не будет взаимодействовать с другими спрайтами.",
  "game.LedSprite.direction": "Сообщает текущее направление спрайта",
  "game.LedSprite.get": "Получает свойство спрайта",
  "game.LedSprite.get|block": "%sprite|%property",
  "game.LedSprite.get|param|property": "имя изменяемого свойства",
  "game.LedSprite.goTo": "Перейти к этому положению на экране",
  "game.LedSprite.ifOnEdgeBounce": "В случае касания края области лицом к ней — отвернуться.",
  "game.LedSprite.ifOnEdgeBounce|block": "%sprite|если на краю — отскок",
  "game.LedSprite.isTouching": "Сообщает «истина», если у спрайта то же положение, что и указанного спрайта",
  "game.LedSprite.isTouchingEdge": "Сообщает «истина», если спрайт касается края",
  "game.LedSprite.move": "Переместить определенное количество светодиодов в текущем направлении",
  "game.LedSprite.move|block": "%sprite|переместить на %leds",
  "game.LedSprite.move|param|leds": "число перемещаемых светодиодов, например: 1, -1",
  "game.LedSprite.off": "Выключает спрайт (по умолчанию включено)",
  "game.LedSprite.on": "Включает спрайт (по умолчанию включено)",
  "game.LedSprite.set": "Задает свойство спрайта",
  "game.LedSprite.setBlink": "Задает длительность мигания в миллисекундах.",
  "game.LedSprite.setBrightness": "Задать «яркость» спрайта",
  "game.LedSprite.setBrightness|param|brightness": "яркость от 0 (выкл.) до 255 (вкл.), например: 255.",
  "game.LedSprite.setDirection": "Задать направление текущего спрайта, округленное до ближайшего кратного 45",
  "game.LedSprite.setX": "Задать положение «x» спрайта",
  "game.LedSprite.setY": "Задать положение «y» спрайта",
  "game.LedSprite.set|block": "%sprite|задать свойству %property|значение %value",
  "game.LedSprite.set|param|property": "имя изменяемого свойства",
  "game.LedSprite.turn": "Повернуть спрайт",
  "game.LedSprite.turnLeft": "Повернуть влево (против часовой стрелки)",
  "game.LedSprite.turnRight": "Повернуть вправо (по часовой стрелке)",
  "game.LedSprite.turn|block": "%sprite|повернуться %direction|на (°) %degrees",
  "game.LedSprite.turn|param|degrees": "угол поворота в градусах, например: 45, 90, 180, 135",
  "game.LedSprite.turn|param|direction": "влево или вправо",
  "game.LedSprite.x": "Сообщает положение «x» спрайта на светодиодном экране",
  "game.LedSprite.y": "Сообщает положение «y» спрайта на светодиодном экране",
  "game.addLife|param|lives": "ДОДЕЛАТЬ",
  "game.addScore": "Добавляет очки к текущему счету и показывает анимацию",
  "game.addScore|block": "изменить счет на|%points",
  "game.addScore|param|points": "сумма изменяемых баллов, например: 1",
  "game.gameOver": "Отображение анимации завершения игры и счета.",
  "game.gameOver|block": "игра окончена",
  "game.isPaused": "Показывает, приостановлена ли игра (если да, то разрешены другие анимации)",
  "game.pause": "Приостанавливает движок отрисовки игры, чтобы разрешить другие анимации",
  "game.pause|block": "приостановить",
  "game.removeLife|param|life": "ДОДЕЛАТЬ",
  "game.resume": "Вновь запускает движок отрисовки игры",
  "game.resume|block": "продолжить",
  "game.score": "Получает текущий счет",
  "game.score|block": "счет",
  "game.setLife|param|value": "ДОДЕЛАТЬ",
  "game.setScore": "Задает текущее значение счета",
  "game.setScore|block": "задать счет = %points",
  "game.setScore|param|value": "новый счет.",
  "game.startCountdown": "Показывает анимацию, затем запускает таймер обратного отсчета игры, и когда он достигает 0, игра заканчивается",
  "game.startCountdown|block": "начать обратный отсчет|(мс) %duration",
  "game.startCountdown|param|ms": "время обратного отсчета в миллисекундах, например: 10000",
  "game|block": "игра",
  "images": "Создание, обработка и отображение светодиодных изображений.",
  "images.arrowImage|block": "изображение стрелки %i=device_arrow",
  "images.arrowNumber|block": "%arrow",
  "images.createBigImage": "Создает изображение с 2 кадрами.",
  "images.createBigImage|block": "создать большое изображение",
  "images.createImage": "Создает изображение, которое помещается на светодиодный экран.",
  "images.createImage|block": "создать изображение",
  "images.iconImage|block": "изображение значка %i",
  "images|block": "изображения",
  "input": "События и данные от датчиков",
  "input.acceleration": "Получите значение ускорения в миллигравитациях (когда плата лежит плашмя с экраном вверх, x=0, y=0 и z=-1024)",
  "input.acceleration|block": "ускорение (в тысячных долях g)|%NAME",
  "input.buttonIsPressed": "Получить состояние кнопки (нажата или нет) для «A» и «B».",
  "input.buttonIsPressed|block": "кнопка|%NAME|нажата",
  "input.buttonIsPressed|param|button": "кнопка для отправки запроса, например: Button.A (кнопка A)",
  "input.calibrate": "Устарело, используйте input.calibrateCompass.",
  "input.calibrateCompass|block": "калибровать компас",
  "input.compassHeading": "Получить текущий компасный курс в градусах.",
  "input.compassHeading|block": "компасный курс (°)",
  "input.lightLevel": "Считывает уровень освещенности светодиодного экрана в диапазоне от «0» (темно) до «255» (ярко).",
  "input.lightLevel|block": "уровень освещенности",
  "input.magneticForce": "Получите значение силы магнитного поля в «микротеслах» («µT»). Эта функция в симуляторе не поддерживается.",
  "input.magneticForce|block": "сила магнитного поля в (мкТл)|%NAME",
  "input.onButtonPressed": "Сделать Выполнить действие, когда кнопка (A, B или A+B вместе) нажата и снова отпущена.",
  "input.onButtonPressed|block": "кнопка|%NAME|нажата",
  "input.onButtonPressed|param|body": "код, запускаемый при появлении события",
  "input.onButtonPressed|param|button": "кнопку, которую нужно нажать",
  "input.onGesture": "Сделать Выполнить действие, когда выполнен жест (например, когда micro:bit встряхнули).",
  "input.onGesture|block": "по жесту |%NAME",
  "input.onGesture|param|body": "код, запускаемый при выполнении жеста",
  "input.onGesture|param|gesture": "тип отслеживаемых жестов, например: Gesture.Shake (встряхивание)",
  "input.onLogoDown": "Прикрепляет код, который запускается, когда логотип ориентирован вниз, а плата стоит вертикально.",
  "input.onLogoUp": "Прикрепляет код, который запускается, когда логотип ориентирован вверх, а плата стоит вертикально.",
  "input.onPinPressed": "Сделать Выполнить действие, когда контакта коснулись и отпустили (при одновременном касании контакта GND).",
  "input.onPinPressed|block": "контакт %name|нажат",
  "input.onPinPressed|param|body": "код, запускаемый при нажатии на контакт",
  "input.onPinPressed|param|name": "контакт, который нужно нажать, например: TouchPin.P0",
  "input.onPinReleased": "Сделать Выполнить действие, когда контакт отпустили.",
  "input.onPinReleased|block": "контакт %NAME|отпущен",
  "input.onPinReleased|param|body": "код, запускаемый при отпускании контакта",
  "input.onPinReleased|param|name": "контакт, который нужно отпустить, например: TouchPin.P0",
  "input.onScreenDown": "Прикрепляет код, который запускается, когда экран ориентирован вниз.",
  "input.onScreenUp": "Прикрепляет код, который запускается, когда экран ориентирован вверх.",
  "input.onShake": "Прикрепляет код, который запускается, когда устройство потрясли.",
  "input.pinIsPressed": "Получить состояние контакта (нажат или нет). Для замыкания цепи необходимо держаться за штырь «земля».",
  "input.pinIsPressed|block": "контакт %NAME|нажат",
  "input.pinIsPressed|param|name": "контакт, используемый для обнаружения касания, например: TouchPin.P0",
  "input.rotation": "Крен или наклон устройства — вращение вдоль оси «x» или «y», в градусах.",
  "input.rotation|block": "поворот (°)|%NAME",
  "input.runningTime": "Получает время в миллисекундах, прошедшее с момента включения питания.",
  "input.runningTimeMicros": "Получает время в микросекундах, прошедшее с момента включения питания.",
  "input.runningTimeMicros|block": "время выполнения (микросекунды)",
  "input.runningTime|block": "время выполнения (мс)",
  "input.setAccelerometerRange": "Задает размах выборки акселерометра в гравитациях.",
  "input.setAccelerometerRange|block": "задать для акселерометра|диапазон %range",
  "input.setAccelerometerRange|param|range": "значение, описывающее максимальную интенсивность измеряемого ускорения",
  "input.temperature": "Получает температуру в градусах по Цельсию (°C).",
  "input.temperature|block": "температура (°C)",
  "input|block": "ввод",
  "led": "Управление светодиодным экраном.",
  "led.brightness": "Получить яркость экрана от 0 (выкл.) до 255 (полная яркость).",
  "led.brightness|block": "яркость",
  "led.displayMode": "Получает текущий режим отображения",
  "led.enable": "Включает или выключает дисплей",
  "led.enable|block": "светодиод включен %on",
  "led.fadeIn": "Выводит дисплей из затемнения.",
  "led.fadeOut": "Постепенное затемнение экрана.",
  "led.plot": "Включает указанный светодиод по координатам x, y (x — по горизонтали, y — по вертикали). (0,0) — верхний левый светодиод.",
  "led.plotAll": "Включить все светодиоды",
  "led.plotBarGraph": "Показывает вертикальную гистограмму по значениям «value» и «high».\nЕсли значение «high» равно 0, гистограмма автоматически подстраивается.",
  "led.plotBarGraph|param|high": "максимальное значение. Если равно 0, максимальное значение подстраивается автоматически, например: 0",
  "led.plotBarGraph|param|value": "текущее значение для построения графика",
  "led.plotBrightness": "Включает указанный светодиод с указанной яркостью по координатам x, y (x горизонтально, y - вертикально). (0,0) — верхний левый светодиод.",
  "led.plotBrightness|block": "построить|x %x|y %y|яркостью %brightness",
  "led.plotBrightness|param|brightness": "Получить яркость экрана от 0 (выкл.) до 255 (полная яркость), например: 255",
  "led.plotBrightness|param|x": "горизонтальная координата светодиода, начинается с 0",
  "led.plotBrightness|param|y": "вертикальная координата светодиода, начинается с 0",
  "led.plot|block": "построить|x %x|y %y",
  "led.plot|param|x": "горизонтальная координата светодиода, начинается с 0",
  "led.plot|param|y": "вертикальная координата светодиода, начинается с 0",
  "led.point": "Получить состояние «вкл» или «выкл» указанного светодиода по координатам x, y. (0,0) — верхний левый светодиод.",
  "led.point|block": "точка|x %x|y %y",
  "led.screenshot": "Делает снимок светодиодного экрана и возвращает изображение.",
  "led.setBrightness": "Задать яркость экрана от 0 (выкл.) до 255 (полная яркость).",
  "led.setBrightness|block": "задать яркость %value",
  "led.setBrightness|param|value": "значение яркости, например: 255, 127, 0",
  "led.setDisplayMode": "Задает режим отображения для отрисовки светодиодов: черно-белый или оттенки серого.",
  "led.setDisplayMode|param|mode": "режим отображения, в котором работает экран",
  "led.stopAnimation": "Отменяет текущую анимацию и очищает остальные анимации в очереди.",
  "led.stopAnimation|block": "остановить анимацию",
  "led.toggle": "Включает (выключает) определенный пиксель",
  "led.toggleAll": "Инвертирует текущий светодиодный дисплей",
  "led.toggle|block": "переключить|x %x|y %y",
  "led.unplot": "Выключает указанный светодиод по координатам x, y (x — по горизонтали, y — по вертикали). (0,0) — верхний левый светодиод.",
  "led.unplot|block": "убрать|x %x|y %y",
  "led|block": "светодиод",
  "music": "Создание музыкальных тонов.",
  "music.beat": "Возвращает длительность удара в миллисекундах",
  "music.beat|block": "%fraction|бит",
  "music.beginMelody": "Начинает проигрывать мелодию.\nНоты записываются как строка символов в следующем формате: НОТА[октава][:длительность]",
  "music.beginMelody|block": "запустить мелодию %melody=device_builtin_melody| повторять %options",
  "music.beginMelody|param|options": "параметры мелодии: один раз или постоянно, на переднем плане или в фоне",
  "music.builtInMelody": "Получает массив мелодии для встроенной мелодии.",
  "music.builtInMelody|block": "%melody",
  "music.changeTempoBy": "Изменить темп на указанное значение",
  "music.changeTempoBy|block": "изменить темп на (уд/мин)|%value",
  "music.changeTempoBy|param|bpm": "Изменение темпа (в ударах в минуту), например: 20",
  "music.noteFrequency": "Получает частоту ноты.",
  "music.onEvent": "Регистрирует код для запуска по различным событиям мелодии",
  "music.onEvent|block": "музыка по событию %value",
  "music.playTone": "Проигрывает тон заданной длительности через контакт «P0».",
  "music.playTone|block": "проиграть|тон %note=device_note|продолжительностью %duration=device_beat",
  "music.playTone|param|ms": "длительность тона в миллисекундах (мс)",
  "music.rest": "Тишина (ничего не проигрывается) в течение указанного времени на контакте «P0».",
  "music.rest|block": "тишина (мс)|%duration=device_beat",
  "music.rest|param|ms": "длительность тишины в миллисекундах (мс)",
  "music.ringTone": "Проигрывает тон через контакт «P0».",
  "music.ringTone|block": "сигнал тоном (Гц)|%note=device_note",
  "music.setPlayTone": "Задает пользовательскую функцию playTone для проигрывания мелодий",
  "music.setTempo": "Задает темпу указанное значение",
  "music.setTempo|block": "задать темп (уд/мин)|%value",
  "music.setTempo|param|bpm": "Новый темп в ударах в минуту, например: 120",
  "music.tempo": "Возвращает темп в ударах в минуту. Темп — это скорость (bpm, или уд/мин = удары в минуту), с которой проигрываются ноты. Чем выше темп, тем быстрее будут проигрываться ноты.",
  "music.tempo|block": "темп (уд/мин)",
  "music|block": "музыка",
  "parseInt": "Преобразовать строку в целое число.",
  "parseInt|block": "анализировать в целое число %text",
  "pins.analogPitch|block": "аналоговый тон %frequency|длительностью (мс) %ms",
  "pins.analogPitch|param|frequency": "модулируемая частота, Гц.",
  "pins.analogPitch|param|ms": "длительность тона в миллисекундах.",
  "pins.analogReadPin": "Прочитать значение разъема как аналоговое, то есть в виде значения от 0 до 1023.",
  "pins.analogReadPin|block": "аналоговое чтение|контакта %name",
  "pins.analogReadPin|param|name": "контакт для записи, например: AnalogPin.P0",
  "pins.analogSetPeriod|block": "аналоговый: задать период|контакта %pin|(мкс)%micros",
  "pins.analogSetPeriod|param|micros": "период в микросекундах. Например: 20000",
  "pins.analogSetPeriod|param|name": "аналоговый контакт для установки периода, например: AnalogPin.P0",
  "pins.analogSetPitchPin|block": "аналоговый: задать контакт тона %name",
  "pins.analogSetPitchPin|param|name": "контакт для модуляции тона",
  "pins.analogWritePin": "Задать значение разъема как аналоговое. Значение должно быть в промежутке от 0 до 1023.",
  "pins.analogWritePin|block": "аналоговый: запись|в контакт %name|значения %value",
  "pins.analogWritePin|param|name": "название контакта для записи, например: AnalogPin.P0",
  "pins.analogWritePin|param|value": "записываемое в контакт значение, от 0 до 1023. Например: 1023",
  "pins.digitalReadPin": "Прочитать указанный контакт или разъем как 0 или 1",
  "pins.digitalReadPin|block": "цифровой: читать|контакт %name",
  "pins.digitalReadPin|param|name": "контакт для чтения, например: DigitalPin.P0",
  "pins.digitalWritePin": "Задать значение контакта или разъема как 0 или 1.",
  "pins.digitalWritePin|block": "цифровой: записать|контакт %name|значение %value",
  "pins.digitalWritePin|param|name": "контакт для записи, например: DigitalPin.P0",
  "pins.digitalWritePin|param|value": "значение, задаваемое для контакта, например, 0",
  "pins.i2cReadNumber": "Прочитать одно число из 7-битного адреса I2C.",
  "pins.i2cWriteNumber": "Записать одно число в 7-битный адрес I2C.",
  "pins.map|block": "сопоставить значение %value|от нижней границы %fromLow|до верхней границы %fromHigh|к нижней границе %toLow|и верхней границе %toHigh",
  "pins.map|param|fromHigh": "верхняя граница текущего диапазона значений, например: 1023",
  "pins.map|param|fromLow": "нижняя граница текущего диапазона значений, например:",
  "pins.map|param|toHigh": "верхняя граница целевого диапазона значений, например: 4",
  "pins.map|param|toLow": "нижняя граница целевого диапазона значений, например:",
  "pins.map|param|value": "значение для отображения в диапазонах",
  "pins.onPulsed|block": "по событию|контакт %pin|импульс %pulse",
  "pins.onPulsed|param|name": "цифровой контакт для регистрации, например: DigitalPin.P0",
  "pins.onPulsed|param|pulse": "значение импульса, например: PulseValue.High (высокий)",
  "pins.pulseDuration|block": "длительность импульса (мкс)",
  "pins.pulseIn|param|name": "контакт, который измеряет импульс, например: DigitalPin.P0",
  "pins.pulseIn|param|value": "значение импульса, например: PulseValue.High (высокий)",
  "pins.servoSetPulse|block": "сервопривод: задать пульсацию|контакт %value|(мкс) %micros",
  "pins.servoSetPulse|param|micros": "длительность импульса в микросекундах, например: 1500",
  "pins.servoSetPulse|param|name": "название контакта",
  "pins.servoWritePin|block": "сервопривод: записать|в контакт %name|значение %value",
  "pins.servoWritePin|param|name": "контакт для записи, например: AnalogPin.P0",
  "pins.servoWritePin|param|value": "угол или скорость вращения, например: 180,90,0",
  "pins.setEvents|block": "задать для контакта %pin|выдачу типа %type|событий",
  "pins.setEvents|param|name": "контакт для установки режима событий, например: DigitalPin.P0",
  "pins.setEvents|param|type": "тип событий, выдаваемых этим контактом, например: PinEventType.Edge",
  "pins.setPull|block": "задать преобразование|контакта %pin|%pull",
  "pins.setPull|param|name": "контакт для установки режима получения, например: DigitalPin.P0",
  "pins.setPull|param|pull": "одна из конфигураций преобразования mbed, например: PinPullMode.PullUp (повышение)",
  "pins.spiFormat|block": "spi: формат|биты %bits|режим %mode",
  "pins.spiFormat|param|bits": "число бит, например: 8",
  "pins.spiFormat|param|mode": "режим, например: 3",
  "pins.spiFrequency|block": "spi: частота %frequency",
  "pins.spiFrequency|param|frequency": "тактовая частота, например: 1000000",
  "pins.spiPins|block": "spi: задать контакты|MOSI %mosi|MISO %miso|SCK %sck",
  "pins.spiWrite": "Записать в подчиненное устройство SPI и вернуть ответ",
  "pins.spiWrite|block": "spi: записать %value",
  "pins.spiWrite|param|value": "Данные, отправляемые в подчиненное устройство SPI",
  "pins|block": "контакты",
  "radio": "Обмен данными с помощью радиопакетов",
  "radio.Packet.receivedBuffer": "Полезные данные буфера, если в этом пакете был отправлен\nбуфер, или пустой буфер",
  "radio.Packet.receivedNumber": "Числовые полезные данные, если в этом пакете было отправлено число (через «sendNumber()» или «sendValue()»),\nили 0, если пакет не содержит числа.",
  "radio.Packet.receivedString": "Строковые полезные данные, если в этом пакете была отправлена строка (через «sendString()» или «sendValue()»),\nили пустая строка, если пакет не содержит строки.",
  "radio.Packet.serial": "Серийный номер отправителя пакета или 0, если отправитель не передал свой серийный номер.",
  "radio.Packet.signal": "Индикатор уровня принимаемого сигнала (RSSI) для пакета.",
  "radio.Packet.time": "Системное время отправителя пакета в момент отправки пакета.",
  "radio.onDataPacketReceived|block": "радио: при получении данных",
  "radio.onDataReceived": "Регистрирует код, который запускается, когда по радиоканалу принимается пакет.",
  "radio.onDataReceived|block": "радио: при получении данных",
  "radio.onReceivedBufferDeprecated|block": "радио: при получении данных",
  "radio.onReceivedBuffer|block": "радио: при получении данных",
  "radio.onReceivedNumberDeprecated|block": "радио: при получении данных",
  "radio.onReceivedNumber|block": "радио: при получении данных",
  "radio.onReceivedStringDeprecated|block": "радио: при получении данных",
  "radio.onReceivedString|block": "радио: при получении данных",
  "radio.onReceivedValueDeprecated|block": "радио: при получении данных",
  "radio.onReceivedValue|block": "радио: при получении данных",
  "radio.receiveNumber": "Читает следующий пакет из очереди радиоканала и возвращает числовые полезные данные\nпакета или 0, если пакет не содержит числа.",
  "radio.receiveNumber|block": "радио: получить число",
  "radio.receiveString": "Читает следующий пакет из очереди радиоканала и возвращает строковые полезные\nданные пакета или пустую строку, если пакет не содержит строки.",
  "radio.receiveString|block": "радио: получить строку",
  "radio.receivedBuffer": "Возвращает полезную нагрузку буфера из последнего пакета, взятого из очереди радиоканала\n(посредством «receiveNumber», «receiveString» и т. д.) или пустую строку, если\nэтот пакет не содержит строку.",
  "radio.receivedSignalStrength": "Получает индикатор уровня принимаемого сигнала (RSSI) из последнего пакета,\nполученного из очереди радиоканала (посредством «receiveNumber», «receiveString» и т. д.). В симуляторе не поддерживается.\nпространство имен=radio",
  "radio.receivedSignalStrength|block": "радио: уровень принимаемого сигнала",
  "radio.sendBuffer": "Передает буфер (длиной до 19 байт) вместе с серийным номером устройства\nи временем выполнения всем подключенным устройствам micro:bit в группе.",
  "radio.sendNumber": "Передает число по радиоканалу всем подключенным устройствам micro:bit в группе.",
  "radio.sendNumber|block": "радио: отправить число %value",
  "radio.sendString": "Передает строку вместе с серийным номером устройства\nи временем выполнения всем подключенным устройствам micro:bit в группе.",
  "radio.sendString|block": "радио: отправить строку %msg",
  "radio.sendValue|block": "радио: отправить|значение %name|= %value",
  "radio.setGroup": "Задает идентификатор группы для радиосвязи. Устройство micro:bit может прослушивать только один идентификатор группы в данное время.",
  "radio.setGroup|block": "радио: задать групповой %ID",
  "radio.setGroup|param|id": "идентификатор группы, от «0» до «255», например: 1",
  "radio.setTransmitPower": "Изменить уровень выходной мощности передатчика на заданное значение.",
  "radio.setTransmitPower|block": "радио: задать мощность передачи %power",
  "radio.setTransmitPower|param|power": "значение в диапазоне 0…7, где 0 — наименьшая мощность, а 7 — наибольшая. Например: 7",
  "radio.setTransmitSerialNumber": "Устанавливает радиоканал на передачу серийного номера в каждом сообщении.",
  "radio.setTransmitSerialNumber|block": "радио: задать передачу серийного номера %transmit",
  "radio.setTransmitSerialNumber|param|transmit": "значение, указывающее, передается ли серийный номер, например: истина",
  "radio.writeReceivedPacketToSerial": "Записывает последний полученный пакет в последовательный порт как JSON.\n Это следует вызывать в обратном вызове «onDataPacketReceived».",
  "radio.writeReceivedPacketToSerial|block": "радио: записать принятый пакет в последовательный порт",
  "radio.writeValueToSerial": "Читает следующий пакет из очереди радиоканала и записывает его\nв последовательный порт как JSON.",
  "radio.writeValueToSerial|block": "радио: записать значение в последовательный порт",
  "radio|block": "радио",
  "serial": "Чтение и запись данных по последовательному подключению.",
  "serial.onDataReceived": "Регистрирует событие, которое запускается, когда совпал один из разделителей.",
  "serial.onDataReceived|block": "последовательный порт|по получению данных %delimiters=serial_delimiter_conv",
  "serial.onDataReceived|param|delimiters": "символы, с которыми сравниваются принятые символы.",
  "serial.readBuffer": "Прочитать несколько символов из приемного буфера и заполнить пользовательский буфер.",
  "serial.readBuffer|block": "последовательный порт|читать буфер %length",
  "serial.readBuffer|param|length": "длина буфера по умолчанию, например: 64",
  "serial.readLine": "Читает строку текста из последовательного порта.",
  "serial.readLine|block": "последовательный порт|читать линию",
  "serial.readString": "Читает буферизованные полученные данные как строку",
  "serial.readString|block": "последовательный порт|читать строку",
  "serial.readUntil": "Читает строку текста из последовательного порта и при совпадении разделителя возвращает буфер.",
  "serial.readUntil|block": "последовательный порт|читать до %delimiter=serial_delimiter_conv",
  "serial.readUntil|param|delimiter": "текстовый разделитель для блоков текста",
  "serial.redirect": "Динамическая настройка последовательного экземпляра для использования отличных от USBTX и USBRX контактов.",
  "serial.redirectToUSB": "Направляет последовательный вход и выход для использования подключения USB.",
  "serial.redirectToUSB|block": "последовательный порт|перенаправить на USB",
  "serial.redirect|block": "последовательный порт|перенаправить на|TX %tx|RX %rx|на скорости (бит/с) %rate",
  "serial.redirect|param|rate": "новая скорость передачи, бит/с. Например: 115200",
  "serial.redirect|param|rx": "новый приемный контакт, например: SerialPin.P1",
  "serial.redirect|param|tx": "новые передающие контакты, например: SerialPin.P0",
  "serial.writeBuffer": "Отправляет буфер через последовательное подключение",
  "serial.writeLine": "Печатает строку текста в последовательный порт",
  "serial.writeLine|block": "последовательный порт|записать линию %text",
  "serial.writeNumber": "Печатает числовое значение в последовательный порт",
  "serial.writeNumber|block": "последовательный порт|записать число %value",
  "serial.writeString": "Отправляет кусок текста через последовательное подключение.",
  "serial.writeString|block": "последовательный порт|записать строку %text",
  "serial.writeValue": "Записывает парную строку «имя: значение» в последовательный порт.",
  "serial.writeValue|block": "последовательный порт|записать значение %name|= %value",
  "serial.writeValue|param|name": "имя потока значений, например: x",
  "serial.writeValue|param|value": "записываемое значение",
  "serial|block": "последовательный порт",
  "{id:category}Array": "Массив",
  "{id:category}Basic": "Основное",
  "{id:category}Bluetooth": "Bluetooth",
  "{id:category}Buffer": "Буфер",
  "{id:category}Console": "Консоль",
  "{id:category}Control": "Управление",
  "{id:category}Devices": "Устройства",
  "{id:category}Game": "Игра",
  "{id:category}Helpers": "Вспомогательное",
  "{id:category}Images": "Изображения",
  "{id:category}Input": "Ввод",
  "{id:category}Led": "Светодиоды",
  "{id:category}Math": "Математика",
  "{id:category}Music": "Музыка",
  "{id:category}Number": "Число",
  "{id:category}Pins": "Контакты",
  "{id:category}Radio": "Радио",
  "{id:category}Serial": "Последовательный порт",
  "{id:category}String": "Строка"
}