{
  "AcceleratorRange.EightG": "加速器达到 8g 重力",
  "AcceleratorRange.EightG|block": "8g",
  "AcceleratorRange.FourG": "加速器达到 4g 重力",
  "AcceleratorRange.FourG|block": "4g",
  "AcceleratorRange.OneG": "加速器达到 1g 重力",
  "AcceleratorRange.OneG|block": "1g",
  "AcceleratorRange.TwoG": "加速器达到 2g 重力",
  "AcceleratorRange.TwoG|block": "2g",
  "AnalogPin.P11|block": "P11 （只能写入）",
  "AnalogPin.P12|block": "P12 （只能写入）",
  "AnalogPin.P13|block": "P13 （只能写入）",
  "AnalogPin.P14|block": "P14 （只能写入）",
  "AnalogPin.P15|block": "P15 （只能写入）",
  "AnalogPin.P16|block": "P16 （只能写入）",
  "AnalogPin.P19|block": "P19 （只能写入）",
  "AnalogPin.P20|block": "P20 （只能写入）",
  "AnalogPin.P5|block": "P5 （只能写入）",
  "AnalogPin.P6|block": "P6 （只能写入）",
  "AnalogPin.P7|block": "P7 （只能写入）",
  "AnalogPin.P8|block": "P8 （只能写入）",
  "AnalogPin.P9|block": "P9 （只能写入）",
  "Array.filter": "返回数组中满足回调函数中指定条件的元素。",
  "Array.filter|param|callbackfn": "一个可以接受两个参数的函数。filter 方法将为数组中的每个元素调用一次 callbackfn 函数。",
  "Array.find": "返回数组中第一个满足提供的测试函数的元素的值。否则返回undefined。",
  "Array.get": "获取特定索引处的值。",
  "Array.indexOf|block": "%list| 查找 %value 的索引",
  "Array.indexOf|param|item": "要在数组中定位的值。",
  "Array.insertAt": "将值插入特定索引处，将数组长度增加 1。",
  "Array.insertAt|block": "%list| 在 %index 处插入值 %value",
  "Array.insertAt|param|index": "列表中要插入值的以零为基础的位置，例如 0",
  "Array.isArray": "检查给定对象是否是数组。",
  "Array.length": "获取或设置数组的长度。此数字比数组中定义的最高元素个数大 1。",
  "Array.length|block": "%VALUE 的长度",
  "Array.map": "在数组的每个元素上调用定义的回调函数，并返回一个包含结果的数组。",
  "Array.map|param|callbackfn": "一个可以接受两个参数的函数。map 方法将为数组中的每个元素调用一次 callbackfn 函数。",
  "Array.pop": "从数组中移除最后一个元素并返回此元素。",
  "Array.pop|block": "获取并移除 %list 中的最后一个值",
  "Array.push": "向数组附加一个新元素。",
  "Array.push|block": "%list| 将值 %value| 添加到结尾",
  "Array.reduce": "为数组中的所有元素调用指定回调函数。回调函数的返回值是累积结果，并在回调函数的下一次调用中以参数形式提供。",
  "Array.reduce|param|callbackfn": "一个可以接受三个参数的函数。reduce 方法将为数组中的每个元素调用一次 callbackfn 函数。",
  "Array.reduce|param|initialValue": "开始累积的初始值。callbackfn 函数的第一次调用将以参数而不是数组值形式提供这个值。",
  "Array.removeAt": "移除特定索引处的元素。",
  "Array.removeAt|block": "%list| 移除 %index 处的值",
  "Array.removeElement": "移除对象中的第一个事件。如果已移除则返回 true。",
  "Array.reverse": "反转数组中的元素。第一个数组元素成为最后一个，最后一个数组元素成为第一个。",
  "Array.reverse|block": "反转 %list",
  "Array.set": "将值存储在特定索引处。",
  "Array.set|param|index": "列表中要存储值的以零为基础的位置，例如 0",
  "Array.shift": "从数组中移除第一个元素并返回此元素。此方法将更改数组的长度。",
  "Array.shift|block": "获取并移除 %list 中的第一个值",
  "Array.slice": "返回一部分数组。",
  "Array.slice|param|end": "数组指定部分的结尾，例如 0",
  "Array.slice|param|start": "数组指定部分的开头，例如 0",
  "Array.sort": "排列数组的元素并返回数组。顺序不需要稳定。",
  "Array.splice": "移除数组中的元素。",
  "Array.splice|param|deleteCount": "要移除的元素个数，例如 0",
  "Array.splice|param|start": "数组中要开始移除元素的以零为基础的位置，例如 0",
  "Array.unshift": "向数组的开头添加一个元素并返回数组的新长度。",
  "Array.unshift|block": "%list| 在开头插入 %value|",
  "Array|block": "数组",
  "ArrowNames.East|block": "东",
  "ArrowNames.NorthEast|block": "东北",
  "ArrowNames.NorthWest|block": "西北",
  "ArrowNames.North|block": "北",
  "ArrowNames.SouthEast|block": "东南",
  "ArrowNames.SouthWest|block": "西南",
  "ArrowNames.South|block": "南",
  "ArrowNames.West|block": "西",
  "BaudRate.BaudRate115200|block": "115200",
  "BaudRate.BaudRate1200|block": "1200",
  "BaudRate.BaudRate14400|block": "14400",
  "BaudRate.BaudRate19200|block": "19200",
  "BaudRate.BaudRate2400|block": "2400",
  "BaudRate.BaudRate28800|block": "28800",
  "BaudRate.BaudRate31250|block": "31250",
  "BaudRate.BaudRate38400|block": "38400",
  "BaudRate.BaudRate4800|block": "4800",
  "BaudRate.BaudRate57600|block": "57600",
  "BaudRate.BaudRate9600|block": "9600",
  "BeatFraction.Breve|block": "4",
  "BeatFraction.Double|block": "2",
  "BeatFraction.Eighth|block": "1/8",
  "BeatFraction.Half|block": "1/2",
  "BeatFraction.Quarter|block": "1/4",
  "BeatFraction.Sixteenth|block": "1/16",
  "BeatFraction.Whole|block": "1",
  "Boolean.toString": "返回对象的字符串表示。",
  "Buffer.fill": "具有给定值的缓冲器填充（片段）。",
  "Buffer.getNumber": "从缓冲器读取指定格式的数字。",
  "Buffer.length": "返回缓冲器对象的长度。",
  "Buffer.rotate|param|length": "缓冲器中的元素个数。如果为负，长度设置为缓冲器长度减去开始。例如 -1",
  "Buffer.rotate|param|offset": "要偏移的字节数；使用负值右移",
  "Buffer.rotate|param|start": "在缓冲器中开始偏移。默认值为 0。",
  "Buffer.setNumber": "在缓冲器中写入指定格式的数字。",
  "Buffer.shift": "在原处移动缓冲器，不填充。",
  "Buffer.shift|param|length": "缓冲器中的元素个数。如果为负，长度设置为缓冲器长度减去开始。例如 -1",
  "Buffer.shift|param|offset": "要偏移的字节数；使用负值右移",
  "Buffer.shift|param|start": "在缓冲器中开始偏移。默认值为 0。",
  "Buffer.slice": "返回缓冲器片段的副本。",
  "Buffer.write": "在当前缓冲器“dstOffset”处写入“src”内容。",
  "Button.AB|block": "A + B",
  "Delimiters.Colon|block": ":",
  "Delimiters.Comma|block": ",",
  "Delimiters.Dollar|block": "$",
  "Delimiters.Fullstop|block": ".",
  "Delimiters.Hash|block": "#",
  "Delimiters.NewLine|block": "换行",
  "Dimension.Strength|block": "强度",
  "Dimension.X|block": "x",
  "Dimension.Y|block": "y",
  "Dimension.Z|block": "z",
  "Direction.Left|block": "左",
  "Direction.Right|block": "右",
  "DisplayMode.BlackAndWhite|block": "黑白",
  "DisplayMode.Greyscale|block": "灰度",
  "EventCreationMode": "如何创建事件。",
  "EventCreationMode.CreateAndFire": "MicroBitEvent 已初始化，其事件处理程序会立即触发（不适用于中断）。",
  "EventCreationMode.CreateOnly": "MicroBitEvent 已初始化，未发生其他处理。",
  "Gesture.EightG": "检测到 8G 振动时引发",
  "Gesture.EightG|block": "8g",
  "Gesture.FreeFall": "开发板掉落时引发！",
  "Gesture.FreeFall|block": "自由落体",
  "Gesture.LogoDown": "徽标朝下且屏幕为垂直方向时引发",
  "Gesture.LogoDown|block": "徽标朝下",
  "Gesture.LogoUp": "徽标朝上且屏幕为垂直方向时引发",
  "Gesture.LogoUp|block": "徽标朝上",
  "Gesture.ScreenDown": "屏幕朝上且开发板水平时引发",
  "Gesture.ScreenDown|block": "屏幕朝下",
  "Gesture.ScreenUp": "屏幕朝下且开发板水平时引发",
  "Gesture.ScreenUp|block": "屏幕朝上",
  "Gesture.Shake": "振动时引发",
  "Gesture.Shake|block": "振动",
  "Gesture.SixG": "检测到 6G 振动时引发",
  "Gesture.SixG|block": "6g",
  "Gesture.ThreeG": "检测 3G 振动时引发",
  "Gesture.ThreeG|block": "3g",
  "Gesture.TiltLeft": "屏幕朝左时引发",
  "Gesture.TiltLeft|block": "向左倾斜",
  "Gesture.TiltRight": "屏幕朝右时引发",
  "Gesture.TiltRight|block": "向右倾斜",
  "IconNames.Angry|block": "愤怒",
  "IconNames.Asleep|block": "睡着",
  "IconNames.Butterfly|block": "蝴蝶",
  "IconNames.Chessboard|block": "棋盘",
  "IconNames.Confused|block": "困惑",
  "IconNames.Cow|block": "奶牛",
  "IconNames.Diamond|block": "钻石",
  "IconNames.Duck|block": "鸭子",
  "IconNames.EigthNote|block": "八分音符",
  "IconNames.Fabulous|block": "极好",
  "IconNames.Ghost|block": "幽灵",
  "IconNames.Giraffe|block": "长颈鹿",
  "IconNames.Happy|block": "高兴",
  "IconNames.Heart|block": "爱心",
  "IconNames.House|block": "房子",
  "IconNames.LeftTriangle|block": "左三角",
  "IconNames.Meh|block": "无聊",
  "IconNames.No|block": "否",
  "IconNames.Pitchfork|block": "干草叉",
  "IconNames.QuarterNote|block": "四分音符",
  "IconNames.Rabbit|block": "兔子",
  "IconNames.Rollerskate|block": "滑冰鞋",
  "IconNames.Sad|block": "伤心",
  "IconNames.Scissors|block": "剪刀",
  "IconNames.Silly|block": "傻瓜",
  "IconNames.Skull|block": "头骨",
  "IconNames.SmallDiamond|block": "小钻石",
  "IconNames.SmallHeart|block": "小爱心",
  "IconNames.SmallSquare|block": "小正方形",
  "IconNames.Snake|block": "蛇",
  "IconNames.Square|block": "方形",
  "IconNames.StickFigure|block": "火柴人",
  "IconNames.Surprised|block": "惊喜",
  "IconNames.Sword|block": "剑",
  "IconNames.TShirt|block": "T 恤",
  "IconNames.Target|block": "标靶",
  "IconNames.Tortoise|block": "乌龟",
  "IconNames.Triangle|block": "三角形",
  "IconNames.Umbrella|block": "雨伞",
  "IconNames.Yes|block": "对勾",
  "Image.clear": "将所有像素设为关闭。",
  "Image.height": "获取高度（以行数表示，始终为 5）",
  "Image.pixel": "获取位置“(x,y)”处的像素状态",
  "Image.pixelBrightness": "获取给定位置的像素亮度 ([0..255])",
  "Image.plotFrame": "在屏幕上绘制图像的第“索引”个帧。",
  "Image.plotFrame|param|xOffset": "要开始显示图像的列索引",
  "Image.plotImage": "向屏幕上的给定列绘制图像",
  "Image.scrollImage": "滚动图像。",
  "Image.scrollImage|block": "滚动图像 %sprite(myImage)|偏移为 %frameoffset|且间隔 (ms) 为 %delay",
  "Image.scrollImage|param|frameOffset": "每个动画步骤移动的 x 偏移，例如 1、2、5",
  "Image.scrollImage|param|interval": "每个动画步骤之间的时间（单位为毫秒），例如 200",
  "Image.setPixel": "在位置“(x,y)”处设置像素状态",
  "Image.setPixelBrightness": "在给定位置设置特定像素亮度",
  "Image.showImage": "显示图像中偏移为“x 偏移”处的的帧。",
  "Image.showImage|block": "显示图像 %sprite(myImage)|偏移 %offset",
  "Image.showImage|param|xOffset": "要开始显示图像的列索引",
  "Image.width": "获取宽度（以列数表示）",
  "LedSpriteProperty.Blink|block": "闪烁",
  "LedSpriteProperty.Brightness|block": "亮度",
  "LedSpriteProperty.Direction|block": "方向",
  "LedSpriteProperty.X|block": "x",
  "LedSpriteProperty.Y|block": "y",
  "Math": "数字的更复杂运算。",
  "Math.abs": "返回一个数字 （无论是正数还是负数） 的绝对值。\n例如，-5 的绝对值与 5 的绝对值相同。",
  "Math.abs|param|x": "一个需要绝对值的数值表达式。",
  "Math.acos": "返回一个数字的反余弦（以弧度为单位）",
  "Math.acos|param|x": "数字",
  "Math.asin": "返回一个数字的反正弦（以弧度为单位）",
  "Math.asin|param|x": "数字",
  "Math.atan": "返回一个数字的反正切（以弧度为单位）",
  "Math.atan2": "返回其参数商的反正切。",
  "Math.atan2|param|x": "数字",
  "Math.atan2|param|y": "数字",
  "Math.atan|param|x": "数字",
  "Math.ceil": "返回大于或等于其数值参数的最小数。",
  "Math.ceil|param|x": "数字表达式。",
  "Math.constrain|block": "约束%value | 介于 %low | 和 %high",
  "Math.cos": "返回一个数字的余弦。",
  "Math.cos|param|x": "以弧度为单位的角度",
  "Math.exp": "返回“e^x”。",
  "Math.exp|param|x": "数字",
  "Math.floor": "返回小于或等于其数值参数的最大数。",
  "Math.floor|param|x": "数字表达式。",
  "Math.idiv": "返回两个数字 32 位有符号整数除法的值。",
  "Math.idiv|param|x": "第一个数字",
  "Math.idiv|param|y": "第二个数字",
  "Math.imul": "返回两个数字 32 位有符号整数乘法的值。",
  "Math.imul|param|x": "第一个数字",
  "Math.imul|param|y": "第二个数字",
  "Math.log": "返回一个数字的自然对数（底数为 e）。",
  "Math.log|param|x": "数字",
  "Math.map": "将数字从一个范围重映射到另一个范围。即，“自低”值会映射到“至低”值，“自高”值会映射到“至高”值，以前范围内的值会重映射到新的范围。",
  "Math.map|block": "映射 %value|从低 %fromLow|从高 %fromHigh|至低 %toLow|至高 %toHigh",
  "Math.map|param|fromHigh": "值当前范围的上限，例如 1023",
  "Math.map|param|fromLow": "值当前范围的下限",
  "Math.map|param|toHigh": "值目标范围的上限，例如 4",
  "Math.map|param|toLow": "值目标范围的下限",
  "Math.map|param|value": "要在范围内映射的值",
  "Math.max": "返回两个数值表达式中较大的一个。",
  "Math.min": "返回两个数值表达式中较小的一个。",
  "Math.pow": "返回底数表达式的指定次幂的值。",
  "Math.pow|param|x": "表达式的底数值。",
  "Math.pow|param|y": "表达式的指数值。",
  "Math.random": "返回 0 到“限值”之间的随机数。",
  "Math.randomBoolean": "随机生成“true”或“false”，就像抛硬币。",
  "Math.randomBoolean|block": "随机选取 true 或 false",
  "Math.randomRange": "返回一个介于最小值（含）和最大值（含）之间的伪随机数。\n如果两个数字都是整型，则结果是整型。",
  "Math.randomRange|block": "选取随机数，范围为 %min|至 %limit",
  "Math.randomRange|param|max": "范围上限，例如 10",
  "Math.randomRange|param|min": "范围下限，例如 0",
  "Math.round": "将提供的数值表达式舍入到最近的数字。",
  "Math.round|param|x": "要舍入到最近数字的值。",
  "Math.sign": "返回 x 的符号，指示 x 为正数、负数还是零。",
  "Math.sign|param|x": "要测试的数字表达式",
  "Math.sin": "返回一个数字的正弦。",
  "Math.sin|param|x": "以弧度为单位的角度",
  "Math.sqrt": "返回一个数字的平方根。",
  "Math.sqrt|param|x": "数字表达式。",
  "Math.tan": "返回一个数字的正切。",
  "Math.tan|param|x": "以弧度为单位的角度",
  "Math.trunc": "返回去掉小数位的数字。",
  "Math.trunc|param|x": "数字表达式。",
  "Math|block": "数学",
  "Melodies.BaDing|block": "ba ding",
  "Melodies.Baddy|block": "baddy",
  "Melodies.Birthday|block": "生日歌",
  "Melodies.Blues|block": "blues",
  "Melodies.Chase|block": "chase",
  "Melodies.Dadadadum|block": "dadadum",
  "Melodies.Entertainer|block": "entertainer",
  "Melodies.Funeral|block": "funereal",
  "Melodies.Funk|block": "funk",
  "Melodies.JumpDown|block": "jump down",
  "Melodies.JumpUp|block": "jump up",
  "Melodies.Nyan|block": "nyan",
  "Melodies.Ode|block": "ode",
  "Melodies.PowerDown|block": "power down",
  "Melodies.PowerUp|block": "power up",
  "Melodies.Prelude|block": "prelude",
  "Melodies.Punchline|block": "punchline",
  "Melodies.Ringtone|block": "铃声",
  "Melodies.Wawawawaa|block": "wawawawaa",
  "Melodies.Wedding|block": "wedding",
  "MelodyOptions.ForeverInBackground|block": "在后台循环播放",
  "MelodyOptions.Forever|block": "无限循环",
  "MelodyOptions.OnceInBackground|block": "在后台播放一次",
  "MelodyOptions.Once|block": "播放一次",
  "MelodyStopOptions.All|block": "全部",
  "MesAlertEvent.DisplayToast|block": "显示提示信息",
  "MesAlertEvent.FindMyPhone|block": "查找我的手机",
  "MesAlertEvent.PlayRingtone|block": "播放铃声",
  "MesAlertEvent.PlaySound|block": "播放声音",
  "MesAlertEvent.RingAlarm2|block": "播放报警 2",
  "MesAlertEvent.RingAlarm3|block": "播放报警 3",
  "MesAlertEvent.RingAlarm4|block": "播放报警 4",
  "MesAlertEvent.RingAlarm5|block": "播放报警 5",
  "MesAlertEvent.RingAlarm6|block": "播放报警 6",
  "MesAlertEvent.RingAlarm|block": "播放报警",
  "MesAlertEvent.Vibrate|block": "振动",
  "MesCameraEvent.LaunchPhotoMode|block": "启动照片模式",
  "MesCameraEvent.LaunchVideoMode|block": "启动视频模式",
  "MesCameraEvent.StartVideoCapture|block": "开始视频捕获",
  "MesCameraEvent.StopPhotoMode|block": "停止照片模式",
  "MesCameraEvent.StopVideoCapture|block": "停止视频捕获",
  "MesCameraEvent.StopVideoMode|block": "停止视频模式",
  "MesCameraEvent.TakePhoto|block": "拍照",
  "MesCameraEvent.ToggleFrontRear|block": "切换前后",
  "MesDeviceInfo.DisplayOff|block": "显示关",
  "MesDeviceInfo.DisplayOn|block": "显示开",
  "MesDeviceInfo.IncomingCall|block": "传入呼叫",
  "MesDeviceInfo.IncomingMessage|block": "传入消息",
  "MesDeviceInfo.OrientationLandscape|block": "横向",
  "MesDeviceInfo.OrientationPortrait|block": "纵向",
  "MesDeviceInfo.Shaken|block": "摇动",
  "MesDpadButtonInfo.ADown|block": "A 下",
  "MesDpadButtonInfo.AUp|block": "A 上",
  "MesDpadButtonInfo.BDown|block": "B 下",
  "MesDpadButtonInfo.BUp|block": "B 上",
  "MesDpadButtonInfo.CDown|block": "C 下",
  "MesDpadButtonInfo.CUp|block": "C 上",
  "MesDpadButtonInfo.DDown|block": "D 下",
  "MesDpadButtonInfo.DUp|block": "D 上",
  "MesDpadButtonInfo._1Down|block": "1 下",
  "MesDpadButtonInfo._1Up|block": "1 上",
  "MesDpadButtonInfo._2Down|block": "2 下",
  "MesDpadButtonInfo._2Up|block": "2 上",
  "MesDpadButtonInfo._3Down|block": "3 下",
  "MesDpadButtonInfo._3Up|block": "3 上",
  "MesDpadButtonInfo._4Down|block": "4 下",
  "MesDpadButtonInfo._4Up|block": "4 上",
  "MesRemoteControlEvent.forward|block": "前",
  "MesRemoteControlEvent.nextTrack|block": "下一首",
  "MesRemoteControlEvent.pause|block": "暂停",
  "MesRemoteControlEvent.play|block": "播放",
  "MesRemoteControlEvent.previousTrack|block": "上一曲",
  "MesRemoteControlEvent.rewind|block": "后退",
  "MesRemoteControlEvent.stop|block": "停止",
  "MesRemoteControlEvent.volumeDown|block": "调低音量",
  "MesRemoteControlEvent.volumeUp|block": "调高音量",
  "MusicEvent.BackgroundMelodyEnded|block": "结束背景旋律",
  "MusicEvent.BackgroundMelodyNotePlayed|block": "播放背景旋律音符",
  "MusicEvent.BackgroundMelodyPaused|block": "暂停背景旋律",
  "MusicEvent.BackgroundMelodyRepeated|block": "重复播放背景旋律",
  "MusicEvent.BackgroundMelodyResumed|block": "恢复背景旋律",
  "MusicEvent.BackgroundMelodyStarted|block": "开始背景旋律",
  "MusicEvent.MelodyEnded|block": "结束旋律",
  "MusicEvent.MelodyNotePlayed|block": "播放旋律音符",
  "MusicEvent.MelodyRepeated|block": "重复旋律",
  "MusicEvent.MelodyStarted|block": "开始旋律",
  "Note.CSharp3|block": "C#3",
  "Note.CSharp4|block": "C#4",
  "Note.CSharp5|block": "C#5",
  "Note.CSharp|block": "C#",
  "Note.FSharp3|block": "F#3",
  "Note.FSharp4|block": "F#4",
  "Note.FSharp5|block": "F#5",
  "Note.FSharp|block": "F#",
  "Note.GSharp3|block": "G#3",
  "Note.GSharp4|block": "G#4",
  "Note.GSharp5|block": "G#5",
  "Note.GSharp|block": "G#",
  "Number.toString": "返回一个数字的字符串表示。",
  "Object.keys": "返回对象中的字段名称。",
  "Object|block": "对象",
  "PinEvent.Fall|block": "坠落",
  "PinEvent.PulseHigh|block": "脉冲高",
  "PinEvent.PulseLow|block": "脉冲低",
  "PinEventType.Edge|block": "边缘",
  "PinEventType.None|block": "无",
  "PinEventType.Pulse|block": "脉冲",
  "PinEventType.Touch|block": "触摸",
  "PinPullMode.PullDown|block": "下",
  "PinPullMode.PullNone|block": "无",
  "PinPullMode.PullUp|block": "上",
  "PulseValue.High|block": "高",
  "PulseValue.Low|block": "低",
  "RadioPacketProperty.SerialNumber|block": "序列号",
  "RadioPacketProperty.SignalStrength|block": "信号强度",
  "RadioPacketProperty.Time|block": "时间",
  "Rotation.Pitch|block": "旋转",
  "Rotation.Roll|block": "横滚",
  "String.charAt": "返回位于指定索引处的字符。",
  "String.charAt|block": "从 %this=text 中提取字符|位置 %pos",
  "String.charAt|param|index": "所需字符以零为基础的索引，例如 0",
  "String.charCodeAt": "返回位于指定位置处的字符的 Unicode 值。",
  "String.charCodeAt|param|index": "所需字符以零为基础的索引。如果指定的索引处没有字符，则返回 NaN。",
  "String.compare": "查看两个字符串中的字符顺序有何不同（以 ASCII 编码）。",
  "String.compare|block": "比较 %this=text| 与 %that",
  "String.compare|param|that": "要与目标字符串进行比较的字符串",
  "String.concat": "返回一个包含两个或多个字符串串联的字符串。",
  "String.concat|param|other": "要附加到字符串结尾的字符串，如“add me!”",
  "String.fromCharCode": "使用给定的 ASCII 字符代码编写字符串。",
  "String.fromCharCode|block": "提取字符代码 %code 中的文本",
  "String.isEmpty": "返回一个指示字符串是否为空的值",
  "String.isEmpty|block": "%this=text| 为空",
  "String.length": "返回一个字符串对象的长度。",
  "String.length|block": "%VALUE 的长度",
  "String.slice": "返回当前字符串的子字符串。",
  "String.slice|param|end": "一个过去的字符索引",
  "String.slice|param|start": "第一个字符的索引；可以为负值，表示从结尾处开始数，例如：0",
  "String.split": "根据分隔符拆分字符串",
  "String.split|param|separator": "@param 限制",
  "String.substr": "返回当前字符串的子字符串。",
  "String.substr|block": "%this=text 的子字符串|，起始位置 %start|，长度 %length",
  "String.substr|param|length": "要提取的字符数，例如 3",
  "String.substr|param|start": "第一个字符的索引；可以是从结尾处开始数的负值，例如 0",
  "String|block": "字符串",
  "basic": "提供基本 micro:bit 功能的访问权限。",
  "basic.clearScreen": "关闭所有的 LED",
  "basic.clearScreen|block": "清空屏幕",
  "basic.forever": "在后台无限重复代码。每次迭代时，允许其他代码运行。",
  "basic.forever|block": "无限循环",
  "basic.pause": "暂停以毫秒为单位的指定时间",
  "basic.pause|block": "暂停 (ms) %pause",
  "basic.pause|param|ms": "暂停的时间，例如 100、200、500、1000、2000",
  "basic.plotLeds": "在 LED 屏幕上绘制图像。",
  "basic.plotLeds|param|leds": "要打开/关闭的 LED 模式",
  "basic.showAnimation": "将一连串的 LED 屏幕作为动画显示。",
  "basic.showAnimation|param|interval": "每次重绘的时间间隔（以毫秒为单位）",
  "basic.showAnimation|param|leds": "要打开/关闭的 LED 模式",
  "basic.showArrow": "在屏幕上显示箭头",
  "basic.showArrow|block": "显示箭头 %i=device_arrow",
  "basic.showArrow|param|direction": "箭头的方向",
  "basic.showArrow|param|interval": "显示图标的时间（毫秒）。默认为 600 毫秒。",
  "basic.showIcon": "在 LED 屏幕上绘制选定的图标",
  "basic.showIcon|block": "显示图标 %i",
  "basic.showIcon|param|icon": "预定义图标 id",
  "basic.showIcon|param|interval": "显示图标的时间（毫秒）。默认为 600 毫秒。",
  "basic.showLeds": "在 LED 屏幕上绘制图像。",
  "basic.showLeds|block": "显示 LED",
  "basic.showLeds|param|interval": "绘制后的暂停时间（以毫秒为单位）",
  "basic.showLeds|param|leds": "要打开/关闭的 LED 模式",
  "basic.showNumber": "在屏幕上滚动数字。如果数字适合屏幕（即，单位数），则不滚动。",
  "basic.showNumber|block": "显示数字 %number",
  "basic.showNumber|param|interval": "滚动速度；例如 150、100、200、-100",
  "basic.showString": "在显示屏上显示文本，每次一个字符。如果字符串适合屏幕（即，单字母），则不滚动。",
  "basic.showString|block": "显示字符串 %text",
  "basic.showString|param|interval": "转换字符的速度；例如 150、100、200、-100",
  "basic.showString|param|text": "在屏幕上滚动的文本，例如“Hello!”",
  "basic|block": "基本",
  "bluetooth": "对其他蓝牙服务的支持。",
  "bluetooth.advertiseUid": "公布 Eddystone UID",
  "bluetooth.advertiseUidBuffer": "公布 Eddystone UID",
  "bluetooth.advertiseUidBuffer|param|connectable": "为 true 时可以让其他服务通过蓝牙连接，为 false 时则不能。",
  "bluetooth.advertiseUidBuffer|param|nsAndInstance": "包含命名空间（字节 0-9）和实例（字节 10-15）的 16 字节缓冲器",
  "bluetooth.advertiseUidBuffer|param|power": "介于 0 至 7 之间的功率电平，例如 7",
  "bluetooth.advertiseUid|block": "蓝牙公布 UID|命名空间（字节 6-9）%ns|实例（字节 2-6）%instance|功率 %power|可连接 %connectable",
  "bluetooth.advertiseUid|param|connectable": "为 true 时可以让其他服务通过蓝牙连接，为 false 时则不能。",
  "bluetooth.advertiseUid|param|instance": "实例 uid 的最后 4 个字节",
  "bluetooth.advertiseUid|param|ns": "命名空间 uid 的最后 4 个字节",
  "bluetooth.advertiseUid|param|power": "介于 0 至 7 之间的功率电平，例如 7",
  "bluetooth.advertiseUrl": "公布 Eddystone 网址",
  "bluetooth.advertiseUrl|block": "蓝牙公布网址 %url|功率 %power|可连接 %connectable",
  "bluetooth.advertiseUrl|param|connectable": "为 true 时可以让其他服务通过蓝牙连接，为 false 时则不能。",
  "bluetooth.advertiseUrl|param|power": "介于 0 至 7 之间的功率电平，例如 7",
  "bluetooth.advertiseUrl|param|url": "要传输的网址。不得长于受支持的 eddystone 网址，例如“https://makecode.com”",
  "bluetooth.onBluetoothConnected": "将代码注册为在通过蓝牙连接到 micro:bit 时运行",
  "bluetooth.onBluetoothConnected|block": "通过蓝牙连接时",
  "bluetooth.onBluetoothConnected|param|body": "建立蓝牙连接后要运行的代码",
  "bluetooth.onBluetoothDisconnected": "将代码注册为在与 micro:bit 之间的蓝牙连接断开时运行",
  "bluetooth.onBluetoothDisconnected|block": "断开蓝牙连接时",
  "bluetooth.onBluetoothDisconnected|param|body": "蓝牙连接断开时要运行的代码",
  "bluetooth.onUartDataReceived": "注册一个分隔符匹配时会触发的事件。",
  "bluetooth.onUartDataReceived|block": "通过蓝牙接收数据并遇到 %delimiters=serial_delimiter_conv",
  "bluetooth.onUartDataReceived|param|delimiters": "要与接收到的字符对比的字符。",
  "bluetooth.setTransmitPower": "在 0（最小）至 7（最大）之间设置蓝牙传输功率。",
  "bluetooth.setTransmitPower|block": "设置蓝牙传输功率 %power",
  "bluetooth.setTransmitPower|param|power": "介于 0（最小）至 7（最大）之间的功率电平，例如 7。",
  "bluetooth.startAccelerometerService": "启动蓝牙加速计服务",
  "bluetooth.startAccelerometerService|block": "蓝牙加速计服务",
  "bluetooth.startButtonService": "启动蓝牙按钮服务",
  "bluetooth.startButtonService|block": "蓝牙按钮服务",
  "bluetooth.startIOPinService": "启动蓝牙 IO 引脚服务。",
  "bluetooth.startIOPinService|block": "蓝牙 io 引脚服务",
  "bluetooth.startLEDService": "启动蓝牙 LED 服务",
  "bluetooth.startLEDService|block": "蓝牙 led 服务",
  "bluetooth.startMagnetometerService": "启动蓝牙磁力计服务",
  "bluetooth.startMagnetometerService|block": "蓝牙磁力计服务",
  "bluetooth.startTemperatureService": "启动蓝牙温度服务",
  "bluetooth.startTemperatureService|block": "蓝牙温度服务",
  "bluetooth.startUartService": "启动蓝牙 UART 服务",
  "bluetooth.startUartService|block": "蓝牙 uart 服务",
  "bluetooth.stopAdvertising": "停止公布 Eddystone 端点",
  "bluetooth.stopAdvertising|block": "停止蓝牙公布",
  "bluetooth.uartReadUntil": "从蓝牙 UART 服务缓冲器读取，并在遇到指定的分隔符字符时返回其内容。",
  "bluetooth.uartReadUntil|block": "读取蓝牙 uart|，直至遇到 %del=serial_delimiter_conv",
  "bluetooth.uartWriteLine": "写入蓝牙 UART 服务缓冲器。数据将从这里通过蓝牙传输到连接设备。",
  "bluetooth.uartWriteNumber": "向串口输出数值",
  "bluetooth.uartWriteNumber|block": "蓝牙 uart|写入数字 %value",
  "bluetooth.uartWriteString": "写入蓝牙 UART 服务缓冲器。数据将从这里通过蓝牙传输到连接设备。",
  "bluetooth.uartWriteString|block": "蓝牙 uart|写入字符串 %data",
  "bluetooth.uartWriteValue": "向串口写入一个“name: value”对行。",
  "bluetooth.uartWriteValue|block": "蓝牙 uart|写入值 %name|= %value",
  "bluetooth.uartWriteValue|param|name": "值流名称，如 x",
  "bluetooth.uartWriteValue|param|value": "要写入的值",
  "bluetooth|block": "蓝牙",
  "console.logValue|param|value": "要写入的值",
  "console|block": "命令行",
  "control": "运行时和事件实用程序。",
  "control.assert": "如果条件为 false，在串行控制台上显示消息代码 098。",
  "control.deviceName": "从设备的序列号为设备获取一个友好的名称",
  "control.deviceName|block": "设备名称",
  "control.deviceSerialNumber": "从内部数据为此设备衍生一个独特、一致的序列号。",
  "control.deviceSerialNumber|block": "设备序列号",
  "control.eventSourceId": "返回一个 C++ 运行时常量的值",
  "control.eventSourceId|block": "%id",
  "control.eventTimestamp": "获取在总线上执行的上一个事件的时间戳",
  "control.eventTimestamp|block": "事件时间戳",
  "control.eventValue": "获取在总线上执行的上一个事件的值",
  "control.eventValueId": "返回一个 C++ 运行时常量的值",
  "control.eventValueId|block": "%id",
  "control.eventValue|block": "事件值",
  "control.inBackground": "计划将在后台运行的代码。",
  "control.inBackground|block": "在后台运行",
  "control.onEvent": "在事件总线上引发一个事件。",
  "control.onEvent|block": "发生事件|，来源 %src=control_event_source_id|，值 %value=control_event_value_id",
  "control.panic": "显示指定的错误代码并停止程序。",
  "control.raiseEvent": "在事件总线上引发一个事件。",
  "control.raiseEvent|block": "引发事件|，来源 %src=control_event_source_id|，值 %value=control_event_value_id",
  "control.raiseEvent|param|mode": "构造后如何处理事件的可选定义（默认值为 CREATE_AND_FIRE）。",
  "control.raiseEvent|param|src": "生成事件的 MicroBit 组件的 ID，例如 MICROBIT_ID_BUTTON_A。",
  "control.raiseEvent|param|value": "指示事件原因的组件特定代码。",
  "control.reset": "重置 BBC micro:bit。",
  "control.reset|block": "重置",
  "control.runtimeWarning": "在模拟器中显示警告。",
  "control.waitMicros": "将光纤电流阻止一定的毫秒数",
  "control.waitMicros|block": "等待 (µs)%micros",
  "control.waitMicros|param|micros": "需要等待的毫秒数。例如 4",
  "control|block": "控制",
  "devices": "通过蓝牙控制带 BBC micro:bit 的电话。",
  "devices.onGamepadButton": "将代码注册为在 micro:bit 从配对的游戏手柄接收到命令时运行。",
  "devices.onGamepadButton|block": "当按下|%NAME 游戏手柄按钮时",
  "devices.onGamepadButton|param|body": "按下按钮时要运行的代码",
  "devices.onGamepadButton|param|name": "按钮名称",
  "devices.onNotified": "将代码注册为在设备通知特定事件时运行。",
  "devices.onNotified|block": "当收到 %event",
  "devices.onNotified|param|body": "事件触发时的代码处理程序",
  "devices.onNotified|param|event": "事件描述",
  "devices.onSignalStrengthChanged": "将代码注册为在设备通知信号强度变化时运行。",
  "devices.onSignalStrengthChanged|block": "当信号强度变化时",
  "devices.onSignalStrengthChanged|param|body": "信号强度变化时要运行的代码。",
  "devices.raiseAlertTo": "向父设备发送“警报”命令。",
  "devices.raiseAlertTo|block": "发送警报以 |%property",
  "devices.raiseAlertTo|param|event": "事件描述",
  "devices.signalStrength": "返回配对设备报告的上一个信号强度。",
  "devices.signalStrength|block": "信号强度",
  "devices.tellCameraTo": "向父设备发送“相机”命令。",
  "devices.tellCameraTo|block": "指示相机 |%property",
  "devices.tellCameraTo|param|event": "事件描述",
  "devices.tellRemoteControlTo": "向父设备发送“遥控”命令。",
  "devices.tellRemoteControlTo|block": "指示遥控 |%property",
  "devices.tellRemoteControlTo|param|event": "事件描述",
  "devices|block": "设备",
  "game": "单 LED 子画面游戏引擎",
  "game.LedSprite": "以单 LED 渲染的游戏子画面",
  "game.LedSprite.blink": "报告子画面的“闪烁”持续时间",
  "game.LedSprite.brightness": "报告 LED 屏幕上的子画面“亮度”",
  "game.LedSprite.change": "更改子画面的属性",
  "game.LedSprite.changeBlinkBy": "将“闪烁”持续时间更改给定的毫秒数",
  "game.LedSprite.changeBlinkBy|param|ms": "待办事项",
  "game.LedSprite.changeBrightnessBy": "将“y”位置更改给定的数值",
  "game.LedSprite.changeBrightnessBy|param|value": "要更改成的亮度值",
  "game.LedSprite.changeDirectionBy": "通过向右转将“方向”位置更改给定的数值",
  "game.LedSprite.changeDirectionBy|param|angle": "待办事项",
  "game.LedSprite.changeXBy": "将“x”位置更改给定的数值",
  "game.LedSprite.changeXBy|param|x": "待办事项",
  "game.LedSprite.changeYBy": "将“y”位置更改给定的数值",
  "game.LedSprite.changeYBy|param|y": "待办事项",
  "game.LedSprite.change|block": "%sprite|更改 %property|幅度为 %value",
  "game.LedSprite.change|param|property": "要更改的属性名称",
  "game.LedSprite.change|param|value": "要更改的数值，例如 1",
  "game.LedSprite.delete": "从游戏引擎删除子画面。该子画面将不再出现在屏幕上或会与其他子画面进行交互。",
  "game.LedSprite.delete|block": "删除 %this(sprite)",
  "game.LedSprite.direction": "报告子画面的当前方向",
  "game.LedSprite.get": "获取子画面的属性",
  "game.LedSprite.get|block": "%sprite|%property",
  "game.LedSprite.get|param|property": "要更改的属性名称",
  "game.LedSprite.goTo": "在屏幕上转到此位置",
  "game.LedSprite.goTo|param|x": "待办事项",
  "game.LedSprite.goTo|param|y": "待办事项",
  "game.LedSprite.ifOnEdgeBounce": "如果触到屏幕的边缘且朝向它，就改变方向。",
  "game.LedSprite.ifOnEdgeBounce|block": "%sprite|如果碰到边缘则反弹",
  "game.LedSprite.isTouching": "如果子画面与指定子画面在同一位置，报告 true",
  "game.LedSprite.isTouchingEdge": "如果子画面触到边缘，报告 true",
  "game.LedSprite.isTouchingEdge|block": "%sprite|碰到边缘？",
  "game.LedSprite.isTouching|block": "%sprite|碰到 %other|？",
  "game.LedSprite.move": "朝着当前方向移动一定数量的 LED",
  "game.LedSprite.move|block": "%sprite|移动 %leds",
  "game.LedSprite.move|param|leds": "要移动的 LED 数量，例如 1、-1",
  "game.LedSprite.off": "关闭子画面（默认为打开）",
  "game.LedSprite.on": "打开子画面（默认为打开）",
  "game.LedSprite.set": "设置子画面的属性",
  "game.LedSprite.setBlink": "设置闪烁持续时间间隔，单位为毫秒。",
  "game.LedSprite.setBlink|param|ms": "待办事项",
  "game.LedSprite.setBrightness": "设置子画面的“亮度”",
  "game.LedSprite.setBrightness|param|brightness": "亮度从 0（关闭）到 255（打开），例如 255。",
  "game.LedSprite.setDirection": "设置当前子画面的方向，四舍五入为最近的 45 的倍数",
  "game.LedSprite.setX": "设置子画面的“x”位置",
  "game.LedSprite.setX|param|x": "待办事项",
  "game.LedSprite.setY": "设置子画面的“y”位置",
  "game.LedSprite.setY|param|y": "待办事项",
  "game.LedSprite.set|block": "%sprite|设置 %property|为 %value",
  "game.LedSprite.set|param|property": "要更改的属性名称",
  "game.LedSprite.turn": "转动子画面",
  "game.LedSprite.turnLeft": "向左转（逆时针）",
  "game.LedSprite.turnLeft|param|degrees": "待办事项",
  "game.LedSprite.turnRight": "向右转（顺时针）",
  "game.LedSprite.turnRight|param|degrees": "待办事项",
  "game.LedSprite.turn|block": "%sprite|向 %direction 转 (°) %degrees",
  "game.LedSprite.turn|param|degrees": "要转动的角度，单位为度，例如 45、90、180、135",
  "game.LedSprite.turn|param|direction": "左或右",
  "game.LedSprite.x": "报告 LED 屏幕的子画面“x 位置”",
  "game.LedSprite.y": "报告 LED 屏幕的子画面“y 位置”",
  "game.addLife": "向当前生命添加生命点",
  "game.addLife|param|lives": "待办事项",
  "game.addScore": "给当前分数增加点数并显示动画",
  "game.addScore|block": "将分数更改|%points",
  "game.addScore|param|points": "要更改的点数量，例如 1",
  "game.createSprite": "新建一个指向右侧的 LED 精灵。",
  "game.createSprite|block": "创建精灵，|x：%x|y：%y",
  "game.createSprite|param|x": "精灵的水平坐标，例如 2",
  "game.createSprite|param|y": "精灵的垂直坐标，例如 2",
  "game.currentTime": "获取剩余时间（自“开始倒计时”）或当前时间（自设备启动或“启动秒表”），以毫秒为单位。",
  "game.gameOver": "显示游戏结束动画和分数。",
  "game.gameOver|block": "游戏结束",
  "game.invalidSprite": "获取无效精灵；用于初始化局部变量。",
  "game.isGameOver": "指示游戏是否显示游戏结束序列。",
  "game.isPaused": "指示是否暂停游戏渲染来允许播放其他动画",
  "game.isRunning": "获取一个指示游戏是否仍在运行的值。如果游戏结束，则返回“false”。",
  "game.levelUp": "递增级别并显示一条消息。",
  "game.life": "获取当前生命",
  "game.pause": "停止游戏渲染引擎来允许播放其他动画",
  "game.pause|block": "暂停",
  "game.removeLife": "移除一些生命",
  "game.removeLife|param|life": "待办事项",
  "game.resume": "恢复游戏渲染引擎",
  "game.resume|block": "恢复",
  "game.score": "获取当前分数",
  "game.score|block": "分数",
  "game.setLife": "设置当前生命值",
  "game.setLife|param|value": "待办事项",
  "game.setScore": "设置当前分数值",
  "game.setScore|block": "设置分数 %points",
  "game.setScore|param|value": "新分数值。",
  "game.showScore": "在屏幕上显示分数。",
  "game.startCountdown": "显示动画，然后启动游戏倒计时器，倒计时器到达 0 时，表示游戏结束",
  "game.startCountdown|block": "开始倒计时|(ms) %duration",
  "game.startCountdown|param|ms": "以毫秒为单位的倒计时持续时间，如 10000",
  "game.startStopwatch": "启动秒表计时器。“当前时间”将返回经过的时间。",
  "game|block": "游戏",
  "images": "创建、操作和显示 LED 图像。",
  "images.arrowImage|block": "箭头图像 %i=device_arrow",
  "images.arrowNumber|block": "%arrow",
  "images.createBigImage": "创建一个具有 2 个帧的图像。",
  "images.createBigImage|block": "创建大图像",
  "images.createImage": "创建适合 LED 屏幕的图像。",
  "images.createImage|block": "创建图像",
  "images.iconImage|block": "图标图像 %i",
  "images|block": "图像",
  "input": "来自传感器的事件和数据",
  "input.acceleration": "获取加速度值，单位为 mg（开发板平放，屏幕朝上，x=0、y=0 且 z=-1024）",
  "input.acceleration|block": "加速度值 (mg)|%NAME",
  "input.buttonIsPressed": "获取“A”和“B”按钮的状态（是否被按下）。",
  "input.buttonIsPressed|block": "当按钮|%NAME|被按下时",
  "input.buttonIsPressed|param|button": "要查询请求的按钮，例如：按钮 A",
  "input.calibrate": "Obsolete, use input.calibrateCompass instead.",
  "input.calibrateCompass": "过时、指南针校准是自动的。",
  "input.calibrateCompass|block": "校准指南针",
  "input.compassHeading": "获取当前罗盘方位角，单位为度。",
  "input.compassHeading|block": "指南针朝向 (°)",
  "input.lightLevel": "读取适合 LED 屏幕的光线亮度，范围为“0”（最暗）到“255”（最亮）。",
  "input.lightLevel|block": "亮度级别",
  "input.magneticForce": "获取磁力值，单位为 µT。模拟器中不支持此函数。",
  "input.magneticForce|block": "磁力 (µT)|%NAME",
  "input.onButtonPressed": "当按下再松开按钮 (A、B 或同时按下 A+B） 时执行操作。",
  "input.onButtonPressed|block": "当按钮|%NAME|被按下时",
  "input.onButtonPressed|param|body": "事件发生时要运行的代码",
  "input.onButtonPressed|param|button": "需要按下的按钮",
  "input.onGesture": "完成一个特定动作（如晃动 micro:bit）时执行操作。",
  "input.onGesture|block": "当 |%NAME",
  "input.onGesture|param|body": "特定动作发生时要运行的代码",
  "input.onGesture|param|gesture": "要跟踪的特定动作类型，如 Gesture.Shake",
  "input.onLogoDown": "附加徽标朝下且开发板垂直时要运行的代码。",
  "input.onLogoDown|param|body": "待办事项",
  "input.onLogoUp": "附加徽标朝上且开发板垂直时要运行的代码。",
  "input.onLogoUp|param|body": "待办事项",
  "input.onPinPressed": "触摸后松开引脚（同时也触摸 GND 引脚）时执行操作。",
  "input.onPinPressed|block": "当引脚 %name|被按下时",
  "input.onPinPressed|param|body": "按下引脚时要运行的代码",
  "input.onPinPressed|param|name": "需要按下的引脚，如 TouchPin.P0",
  "input.onPinReleased": "松开引脚时执行操作。",
  "input.onPinReleased|block": "在引脚 %name |释放时",
  "input.onPinReleased|param|body": "松开引脚时要运行的代码",
  "input.onPinReleased|param|name": "需要松开的引脚，例如 TouchPin.P0",
  "input.onScreenDown": "附加屏幕朝下时要运行的代码。",
  "input.onScreenDown|param|body": "待办事项",
  "input.onScreenUp": "附加屏幕朝上时要运行的代码。",
  "input.onScreenUp|param|body": "待办事项",
  "input.onShake": "附加晃动设备时要运行的代码。",
  "input.onShake|param|body": "待办事项",
  "input.pinIsPressed": "获取引脚状态（是否按下）。需要保持接地以闭合电路。",
  "input.pinIsPressed|block": "当引脚 %NAME|被按下时",
  "input.pinIsPressed|param|name": "用于检测触摸的引脚，例如 TouchPin.P0",
  "input.rotation": "倾斜或者转动设备的度数，沿着“X 轴”或“Y 轴”旋转。",
  "input.rotation|block": "旋转 (°)|%NAME",
  "input.runningTime": "获取设备开启的毫秒数。",
  "input.runningTimeMicros": "获取设备开启的微秒数。",
  "input.runningTimeMicros|block": "运行时间 (ms)",
  "input.runningTime|block": "运行时间 (ms)",
  "input.setAccelerometerRange": "设置加速计样本范围（以重力加速度表示）。",
  "input.setAccelerometerRange|block": "设置加速计范围 %range",
  "input.setAccelerometerRange|param|range": "描述测量的最大强度加速度的值",
  "input.temperature": "获取温度，单位为摄氏度 (°C)。",
  "input.temperature|block": "温度 (°C)",
  "input|block": "输入",
  "led": "LED 屏幕控件。",
  "led.brightness": "获取屏幕亮度，从 0（关闭）到 255（最亮）。",
  "led.brightness|block": "亮度",
  "led.displayMode": "获取当前显示模式",
  "led.enable": "打开或关闭显示屏",
  "led.enable|block": "LED 启用 %on",
  "led.fadeIn": "在显示屏上淡入。",
  "led.fadeOut": "在显示屏上淡出。",
  "led.plot": "使用 x、y 坐标打开指定的 LED（x 为横轴，y 为纵轴）。(0,0) 表示左上方。",
  "led.plotAll": "打开所有的 LED",
  "led.plotBarGraph": "基于“值”和“高”值显示垂直条形图。\n如果“高”值为 0，图表会自动调整。",
  "led.plotBarGraph|block": "绘制条形图，值为 %value |最高 %high",
  "led.plotBarGraph|param|high": "最大值。如果为 0，会自动调整最大值，例如 0",
  "led.plotBarGraph|param|value": "当前要绘制的值",
  "led.plotBrightness": "使用 x、y 坐标打开具有特定亮度的指定 LED（x 为横轴，y 为纵轴）。(0,0) 表示左上方。",
  "led.plotBrightness|block": "绘图|x %x|y %y|亮度 %brightness",
  "led.plotBrightness|param|brightness": "亮度从 0（关闭）到 255（最亮），例如 255",
  "led.plotBrightness|param|x": "从 0 开始的 LED 横坐标",
  "led.plotBrightness|param|y": "从 0 开始的 LED 纵坐标",
  "led.plot|block": "绘图|x %x|y %y",
  "led.plot|param|x": "从 0 开始的 LED 横坐标",
  "led.plot|param|y": "从 0 开始的 LED 纵坐标",
  "led.point": "使用 x、y 坐标获取指定 LED 的打开/关闭状态。(0,0) 表示左上方。",
  "led.point|block": "点|x %x|y %y",
  "led.screenshot": "为 LED 屏幕截图并返回图像。",
  "led.setBrightness": "设置屏幕亮度，范围为 0（关闭）到 255（最亮）。",
  "led.setBrightness|block": "设置亮度 %value",
  "led.setBrightness|param|value": "亮度值，例如 255、127、0",
  "led.setDisplayMode": "设置显示屏模式（黑白和灰度）来渲染 LED。",
  "led.setDisplayMode|param|mode": "屏幕操作的显示模式",
  "led.stopAnimation": "取消当前的动画并清除其他待定动画。",
  "led.stopAnimation|block": "停止动画",
  "led.toggle": "切换特定像素",
  "led.toggleAll": "反转当前的 LED 显示屏",
  "led.toggle|block": "切换|x %x|y %y",
  "led.unplot": "使用 x、y 坐标关闭指定的 LED（x 为横轴，y 为纵轴）。(0,0) 表示左上方。",
  "led.unplot|block": "取消绘图|x %x|y %y",
  "led|block": "LED",
  "music": "生成音乐音调。",
  "music.beat": "返回一个节拍的持续时间，单位为毫秒",
  "music.beat|block": "%fraction|节拍",
  "music.beginMelody": "开始播放旋律。\n音符以一串字符的形式表示，格式为：NOTE[octave][:duration]",
  "music.beginMelody|block": "播放旋律 %melody=device_builtin_melody| 重复 %options",
  "music.beginMelody|param|melodyArray": "要播放的曲调数组，例如 ['g5:1']",
  "music.beginMelody|param|options": "曲调选项，一次/永远，在前台/后台运行",
  "music.builtInMelody": "获取内置曲调的曲调数组。",
  "music.builtInMelody|block": "%melody",
  "music.changeTempoBy": "将节奏更改指定的数值",
  "music.changeTempoBy|block": "将节奏更改 (bpm)|%value",
  "music.changeTempoBy|param|bpm": "节奏的变化（以每分钟节拍数表示），例如 20",
  "music.noteFrequency": "获取音符的频率。",
  "music.noteFrequency|block": "%name",
  "music.noteFrequency|param|name": "音符名称，例如 Note.C",
  "music.onEvent": "注册代码以运行多种曲调事件",
  "music.onEvent|block": "播放 %value 时响起音乐",
  "music.playTone": "通过引脚“P0”播放音调一段时间。",
  "music.playTone|block": "播放音调 %note=device_note|持续 %duration=device_beat 节拍",
  "music.playTone|param|frequency": "要播放的音调的音阶，单位为赫兹 (Hz)",
  "music.playTone|param|ms": "音调持续时间，单位为毫秒 (ms)",
  "music.rest": "通过引脚“P0”暂停播放（不播放任何音乐）一段时间。",
  "music.rest|block": "暂停播放 (ms)|%duration=device_beat",
  "music.rest|param|ms": "暂停播放的持续时间，单位为毫秒 (ms)",
  "music.ringTone": "通过引脚“P0”播放音调。",
  "music.ringTone|block": "播放铃声 (Hz)|%note=device_note",
  "music.ringTone|param|frequency": "要播放的音调的音阶，单位为赫兹 (Hz)",
  "music.setPlayTone": "设置自定义 playTone 函数来播放旋律",
  "music.setTempo": "将节奏设为指定的值",
  "music.setTempo|block": "将节奏设定为 (bpm)|%value",
  "music.setTempo|param|bpm": "新节奏（以每分钟节拍数表示），例如 120",
  "music.tempo": "返回节奏（以每分钟节拍数表示）。节奏是播放音符的速度（bpm = 每分钟节拍数）。节奏值越大，播放音符的速度越快。",
  "music.tempo|block": "节奏 (bpm)",
  "music|block": "音乐",
  "parseInt": "将字符串转换为整数。",
  "parseInt|block": "解析为整数 %text",
  "pins": "控制模拟/数字信号、伺服机构、i2c 等的引脚中的电流",
  "pins.analogPitch|block": "模拟音阶 %frequency|(ms) %ms",
  "pins.analogPitch|param|frequency": "要调制的频率，单位为 Hz。",
  "pins.analogPitch|param|ms": "音阶的持续时间，单位为毫秒。",
  "pins.analogReadPin": "以模拟信号读取连接器值，即，0 至 1023 之间的值。",
  "pins.analogReadPin|block": "模拟读取|引脚 %name",
  "pins.analogReadPin|param|name": "要写入的引脚，例如 AnalogPin.P0",
  "pins.analogSetPeriod|block": "将|引脚 %pin|的模拟期间设置为 (µs)%micros",
  "pins.analogSetPeriod|param|micros": "持续时间段，单位为微秒，如 20000",
  "pins.analogSetPeriod|param|name": "要设置时间段的模拟引脚，如 AnalogPin.P0",
  "pins.analogSetPitchPin|block": "模拟设置音阶引脚 %name",
  "pins.analogSetPitchPin|param|name": "要调制音阶的引脚",
  "pins.analogWritePin": "以模拟信号设置连接器值。值必须在 0 至 1023 之间。",
  "pins.analogWritePin|block": "向|引脚 %name|模拟写入 %value",
  "pins.analogWritePin|param|name": "要写入的引脚名称，例如 AnalogPin.P0",
  "pins.analogWritePin|param|value": "要写入引脚的值，介于“0”和“1023”之间。例如 1023、0",
  "pins.createBuffer": "新建一个初始化为零的缓冲区。",
  "pins.createBuffer|param|size": "缓冲区中的字节数",
  "pins.digitalReadPin": "将指定的引脚或连接器值读取为 0 或 1",
  "pins.digitalReadPin|block": "数字读取引脚 %name",
  "pins.digitalReadPin|param|name": "要读取的引脚，例如 DigitalPin.P0",
  "pins.digitalWritePin": "将引脚或连接器值设置为 0 或 1。",
  "pins.digitalWritePin|block": "向|引脚 %name|数字写入值 %value",
  "pins.digitalWritePin|param|name": "要写入的引脚，例如 DigitalPin.P0",
  "pins.digitalWritePin|param|value": "要在引脚上设置的值，1 或 0",
  "pins.i2cReadBuffer": "从一个 7 位 I2C“地址”读取“大小”字节。",
  "pins.i2cReadNumber": "从 7 位 I2C 地址读取一个数字。",
  "pins.i2cWriteBuffer": "将字节写入一个 7 位 I2C“地址。",
  "pins.i2cWriteNumber": "将一个数字写入 7 位 I2C 地址。",
  "pins.map|block": "映射 %value|从低 %fromLow|从高 %fromHigh|至低 %toLow|至高 %toHigh",
  "pins.map|param|fromHigh": "值当前范围的上限，例如 1023",
  "pins.map|param|fromLow": "值当前范围的下限",
  "pins.map|param|toHigh": "值目标范围的上限，例如 4",
  "pins.map|param|toLow": "值目标范围的下限",
  "pins.map|param|value": "要在范围内映射的值",
  "pins.onPulsed|block": "当引脚 %pin|脉冲为 %pulse",
  "pins.onPulsed|param|name": "要注册的数字引脚，如 DigitalPin.P0",
  "pins.onPulsed|param|pulse": "脉冲的值，例如 PulseValue.High",
  "pins.pulseDuration|block": "脉冲持续时间 (µs)",
  "pins.pulseIn|block": "脉冲持续时间 (µs)|引脚 %name|脉冲为 %value",
  "pins.pulseIn|param|name": "测量脉冲的引脚，例如 DigitalPin.P0",
  "pins.pulseIn|param|value": "脉冲的值，例如 PulseValue.High",
  "pins.servoSetPulse|block": "将伺服机构|引脚 %value|脉冲设置为 (µs) %micros",
  "pins.servoSetPulse|param|micros": "脉冲持续时间，单位为微秒，例如 1500",
  "pins.servoSetPulse|param|name": "引脚名称",
  "pins.servoWritePin|block": "向伺服机构|引脚 %name|写入 %value",
  "pins.servoWritePin|param|name": "要写入的引脚，例如 AnalogPin.P0",
  "pins.servoWritePin|param|value": "角度或旋转速度，例如 180、90、0",
  "pins.setEvents|block": "设置引脚 %pin|以激发 %type|事件",
  "pins.setEvents|param|name": "要将事件模式设置为开启的引脚，例如 DigitalPin.P0",
  "pins.setEvents|param|type": "此引脚要激发的事件类型，例如 PinEventType.Edge",
  "pins.setPull|block": "设置拉|引脚 %pin|为 %pull",
  "pins.setPull|param|name": "要将上拉/下拉模式设置为开启的引脚，例如 DigitalPin.P0",
  "pins.setPull|param|pull": "mbed 上拉/下拉配置之一，例如 PinPullMode.PullUp",
  "pins.sizeOf": "获取指定数字格式的大小，以字节为单位。",
  "pins.spiFormat|block": "spi 格式|位数 %bits|模式 %mode",
  "pins.spiFormat|param|bits": "位数，例如 8",
  "pins.spiFormat|param|mode": "模式，例如 3",
  "pins.spiFrequency|block": "spi 频率 %frequency",
  "pins.spiFrequency|param|frequency": "时钟频率，例如 1000000",
  "pins.spiPins|block": "spi 设置引脚|MOSI %mosi|MISO %miso|SCK %sck",
  "pins.spiWrite": "写入 SPI 从机并返回响应",
  "pins.spiWrite|block": "spi 写入 %value",
  "pins.spiWrite|param|value": "要发送到 SPI 从机的数据",
  "pins|block": "引脚",
  "radio": "使用无线数据包传输数据",
  "radio.Packet.receivedBuffer": "如果在此数据包中发送缓冲区则为缓冲区负载，或者为空缓冲区",
  "radio.Packet.receivedNumber": "在此数据包中发送数字（通过“sendNumber()”或“sendValue()”）时为数字负载，\n如果此数据包不包含数字，则为 0。",
  "radio.Packet.receivedString": "在此数据包中发送字符串（通过“sendString()”或“sendValue()”）时为字符串负载，\n如果此数据包不包含字符串，则为空字符串。",
  "radio.Packet.serial": "数据包发件人的序列号，如果发件人未发送他们的序列号则为 0。",
  "radio.Packet.signal": "数据包的接收信号强度指示器 (RSSI)。",
  "radio.Packet.time": "发送数据包时数据包发件人的系统时间。",
  "radio._packetProperty|block": "%note",
  "radio.onDataPacketReceived|block": "在无线接收到数据时运行",
  "radio.onDataReceived": "将代码注册为在通过无线接收到数据包时运行。",
  "radio.onDataReceived|block": "当无线接收到数据时",
  "radio.onReceivedBufferDeprecated|block": "在无线接收到数据时运行",
  "radio.onReceivedBuffer|block": "在无线接收到数据时运行",
  "radio.onReceivedNumberDeprecated|block": "在无线接收到数据时运行",
  "radio.onReceivedNumber|block": "在无线接收到数据时运行",
  "radio.onReceivedStringDeprecated|block": "在无线接收到数据时运行",
  "radio.onReceivedString|block": "在无线接收到数据时运行",
  "radio.onReceivedValueDeprecated|block": "在无线接收到数据时运行",
  "radio.onReceivedValue|block": "在无线接收到数据时运行",
  "radio.raiseEvent|block": "无线引发事件|来自於 %src=control_event_source_id|数值为 %value=control_event_value_id",
  "radio.receiveNumber": "从无线队列读取下一个数据包并返回数据包的数字负载，如果数据包不包含数字，则返回 0。",
  "radio.receiveNumber|block": "无线接收数字",
  "radio.receiveString": "从无线队列读取下一个数据包并返回数据包的字符串负载，如果数据包不包含字符串，则返回空字符串。",
  "radio.receiveString|block": "无线接收字符串",
  "radio.receivedBuffer": "从取自无线队列（通过“receiveNumber”、“receiveString”等）的上一个数据包返回缓冲区负载，如果该数据包不包含字符串，则返回空字符串。",
  "radio.receivedNumber": "从取自无线队列（通过“receiveNumber”、“receiveString”等）的上一个数据包返回数字负载，如果该数据包不包含数字，则返回 0。",
  "radio.receivedPacket|block": "接收的数据包 %type=radio_packet_property",
  "radio.receivedSerial": "从取自无线队列（通过“receiveNumber”、“receiveString”等）的上一个数据包返回发件人 micro:bit 的序列号，如果该数据包没有发送序列号，则返回 0。",
  "radio.receivedSignalStrength": "从获取自无线队列的上一个数据包中获取接收信号强度指示器 (RSSI)（通过“receiveNumber”和“receiveString”等）。在模拟器中不受支持。\nnamespace=radio",
  "radio.receivedSignalStrength|block": "无线接收信号强度",
  "radio.receivedString": "从取自无线队列（通过“receiveNumber”、“receiveString”等）的上一个数据包返回字符串负载，如果该数据包不包含字符串，则返回空字符串。",
  "radio.receivedTime": "返回发件人 micro:bit 在发送取自无线队列（通过“receiveNumber”、“receiveString”等）的上一个数据包时它的系统时间。",
  "radio.sendBuffer": "将缓冲区（最长 19 字节）与设备序列号和运行时间广播到组中的任何已连接 micro:bit。",
  "radio.sendNumber": "通过无线将数字广播到组中的任何已连接 micro:bit。",
  "radio.sendNumber|block": "无线发送数字 %value",
  "radio.sendString": "将字符串与设备序列号和运行时间广播到组中的任何已连接 micro:bit。",
  "radio.sendString|block": "无线发送字符串 %msg",
  "radio.sendValue|block": "无线发送值 %name|= %value",
  "radio.setGroup": "设置无线通信的组 id。micro:bit 在任何时候都只能侦听一个组 ID。",
  "radio.setGroup|block": "无线设置组 %ID",
  "radio.setGroup|param|id": "组 id 介于“0”至“255”之间，例如 1",
  "radio.setTransmitPower": "将发射器的输出功率电平改为给定值。",
  "radio.setTransmitPower|block": "无线设置发射功率 %power",
  "radio.setTransmitPower|param|power": "值介于 0 至 7 之间，其中 0 是最低功率，7 是最高功率。例如 7",
  "radio.setTransmitSerialNumber": "将无线设置为在每条消息中都传输序列号。",
  "radio.setTransmitSerialNumber|block": "无线设置发射序列号 %transmit",
  "radio.setTransmitSerialNumber|param|transmit": "指示是否传输序列号的值。例如 true",
  "radio.writeReceivedPacketToSerial": "以 JSON 形式将接收的上一个数据包写入串口。应当在“onDataPacketReceived”回调中调用。",
  "radio.writeReceivedPacketToSerial|block": "将接收到的数据包无线写入串口",
  "radio.writeValueToSerial": "从无线队列中读取下一个数据包并以 JSON 形式将其写入串口。",
  "radio.writeValueToSerial|block": "将值无线写入串口",
  "radio|block": "无线",
  "serial": "通过串行连接读取和写入数据。",
  "serial.delimiters": "返回与字符串对应的分隔符",
  "serial.delimiters|block": "%del",
  "serial.onDataReceived": "注册一个分隔符匹配时会触发的事件。",
  "serial.onDataReceived|block": "接收到 %delimiters=serial_delimiter_conv| 时串行传输数据",
  "serial.onDataReceived|param|delimiters": "要与接收到的字符对比的字符。",
  "serial.readBuffer": "从接收缓冲器读取多个字符，暂停，直至存在足够的字符。",
  "serial.readBuffer|block": "串行|读取缓冲器 %length",
  "serial.readBuffer|param|length": "默认缓冲器长度，例如 64",
  "serial.readLine": "从串行端口读取一行文本。",
  "serial.readLine|block": "从串口读取行",
  "serial.readString": "以字符串形式读取收到的缓冲数据",
  "serial.readString|block": "从串口读取字符串",
  "serial.readUntil": "从串行端口读取一行文本，并在遇到分隔符时返回缓冲器。",
  "serial.readUntil|block": "从串口读取，直至遇到 %delimiter=serial_delimiter_conv",
  "serial.readUntil|param|delimiter": "分隔每个文本区块的文本分隔符",
  "serial.redirect": "将串行输入和输出设置为使用引脚，而不是 USB 连接。",
  "serial.redirectToUSB": "指示串行输入和输出使用 USB 连接。",
  "serial.redirectToUSB|block": "串行|重定向到 USB",
  "serial.redirect|block": "串行|重定向到|TX %tx|RX %rx|波特率为 %rate",
  "serial.redirect|param|rate": "新波特率，例如 115200",
  "serial.redirect|param|rx": "新接收引脚，例如 SerialPin.P1",
  "serial.redirect|param|tx": "新传输引脚，例如 SerialPin.P0",
  "serial.writeBuffer": "通过串行连接发送缓冲器",
  "serial.writeBuffer|block": "串行|写入缓冲器 %buffer=serial_readbuffer",
  "serial.writeLine": "向串口输出一行文本",
  "serial.writeLine|block": "向串口写入一行 %text",
  "serial.writeNumber": "向串口输出数值",
  "serial.writeNumber|block": "串行写入数字 %value",
  "serial.writeString": "通过串行连接发送一段文本。",
  "serial.writeString|block": "串行写入字符串 %text",
  "serial.writeValue": "向串口写入一个“name: value”对行。",
  "serial.writeValue|block": "串行写入数值 %name|= %value",
  "serial.writeValue|param|name": "值流名称，如 x",
  "serial.writeValue|param|value": "要写入的值",
  "serial|block": "串行",
  "{id:category}Array": "数组",
  "{id:category}Arrays": "数组",
  "{id:category}Basic": "基本",
  "{id:category}Bluetooth": "蓝牙",
  "{id:category}Boolean": "布尔值",
  "{id:category}Buffer": "缓冲器",
  "{id:category}Console": "控制台",
  "{id:category}Control": "控制",
  "{id:category}Devices": "设备",
  "{id:category}Fx": "Fx",
  "{id:category}Fx8": "Fx8",
  "{id:category}Game": "游戏",
  "{id:category}Helpers": "帮助器",
  "{id:category}Image": "图像",
  "{id:category}Images": "图像",
  "{id:category}Input": "输入",
  "{id:category}Led": "LED",
  "{id:category}Math": "数学",
  "{id:category}Music": "音乐",
  "{id:category}Number": "数字",
  "{id:category}Object": "对象",
  "{id:category}Pins": "引脚",
  "{id:category}Radio": "无线",
  "{id:category}Serial": "串行",
  "{id:category}String": "字符串",
  "{id:category}Text": "文本"
}